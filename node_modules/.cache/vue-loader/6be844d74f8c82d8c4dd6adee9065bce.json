{"remainingRequest":"/home/quan/Documents/Projects/stock_analysis/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quan/Documents/Projects/stock_analysis/src/views/user/dishes-manager.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quan/Documents/Projects/stock_analysis/src/views/user/dishes-manager.vue","mtime":1615822194522},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport DefaultLayout from '../layouts/default-layout'\nimport Button from '../../components/partials/button'\nimport Title from '../../components/partials/title'\nimport MaterialModal from '../user/menu-detail/modals/material'\nimport DeleteModal from '../user/menu-detail/modals/delete'\nimport DishApi from '../../services/dish'\nimport { mapActions, mapGetters } from 'vuex'\nimport { SET_LOADING } from '../../store/types'\nimport { doSearchInArray } from '../../plugins/jpconverter'\nimport { categories } from '../../constants/material'\n// eslint-disable-next-line no-unused-vars\nimport MenuApi from '../../services/menu'\n\nexport default {\n  name: 'dishes-manager',\n  components: {\n    DefaultLayout,\n    Button,\n    Title,\n    DeleteModal,\n    MaterialModal\n  },\n  data () {\n    return {\n      errors: {\n        name: '',\n        value: ''\n      },\n      flags: {\n        modalVisible: false,\n        modalModifyDish: false,\n        modalCreateDish: false,\n        modalDish: false,\n        modalDeleteDish: false\n      },\n      notifications: {\n        status: true,\n        show: false,\n        content: '',\n        success: true\n      },\n      checkedSort: {\n        date: false,\n        name: true,\n        category: false\n      },\n      isShowFormDelete: false,\n      search: null,\n      searchData: [],\n      searchTimeOut: null,\n      filterCate: 'すべて',\n      currentDishIndex: null,\n      currentDishId: null,\n      currentSort: localStorage.getItem('current_sort') || 'name',\n      currentSortDir: true,\n      limit: 200,\n      menu: {\n        name: '',\n        category: '',\n        note: '',\n        dishes: []\n      },\n      dishesList: [],\n      formData: [],\n      categories: ['すべて', ...categories],\n      selected: '',\n      url: ''\n    }\n  },\n\n  watch: {\n    search (value) {\n      if (this.searchTimeOut != null) {\n        // if (this.filterCate === 'すべて') {\n        //   this.filterCate = 'すべて'\n        // }\n        clearTimeout(this.searchTimeOut)\n      }\n\n      const dishes = this.dishesList\n      // console.log('change from search', dishes)\n\n      this.searchTimeOut = setTimeout(async () => {\n        this.searchData = await doSearchInArray(value, dishes)\n      }, 400)\n    }\n  },\n\n  async mounted () {\n    this.setLoading(true)\n    // this.$route.params.id;\n    this.dishes = await DishApi.listDish()\n    this.dishesList = this.dishes || []\n    this.searchData = this.dishesList\n    this.formData = this.searchData\n\n    this.sort(this.currentSort)\n    this.setLoading(false)\n  },\n  methods: {\n    ...mapActions({\n      setLoading: SET_LOADING\n    }),\n\n    backToMenu () {\n      this.$router.back()\n    },\n\n    onCreate () {\n      this.flags.modalVisible = true\n    },\n\n    popupCategory (index, dish) {\n      this.currentDishIndex = index\n\n      if (dish) {\n        this.currentDishId = dish._id\n      }\n\n      this.flags.modalModifyDish = true\n    },\n\n    popupCreateDish () {\n      this.flags.modalCreateDish = true\n    },\n\n    popupDish () {\n      this.flags.modalDish = true\n    },\n\n    popupDeleteDish (index, dish) {\n      this.flags.modalDeleteDish = true\n\n      if (dish) {\n        this.currentDishIndex = index\n      }\n      this.currentDishId = dish._id\n    },\n\n    updateModalVisible () {\n      this.flags.modalVisible = false\n    },\n\n    sort: function (s) {\n      // if s == current sort, reverse\n      this.currentSortDir = !this.currentSortDir\n      this.currentSort = s\n      if (s === 'date') {\n        this.checkedSort.date = true\n        this.searchData = this.sortToDate()\n      }\n      if (s === 'name') {\n        this.checkedSort.name = true\n        this.searchData = this.sortedDishes()\n      }\n      if (s === 'category') {\n        this.checkedSort.category = true\n        this.searchData = this.sortedDishes()\n      }\n      localStorage.setItem('current_sort', this.currentSort)\n    },\n\n    sortToDate () {\n      var order = this.oldestFirst ? 1 : -1\n      // `this` points to the vm instance\n      return this.dishesList.sort(function (a, b) {\n        a = new Date(a.created_at)\n        b = new Date(b.created_at)\n        var results = a > b ? 1 : (a < b ? -1 : 0)\n        return results * order\n      })\n    },\n\n    sortedDishes () {\n      this.sortToDate(false)\n      return this.dishesList.sort((a, b) => {\n        if (a[this.currentSort].toLowerCase() < b[this.currentSort].toLowerCase()) {\n          return -1\n        }\n        if (a[this.currentSort].toLowerCase() > b[this.currentSort].toLowerCase()) {\n          return 1\n        }\n        return 0\n      })\n    },\n    confirmDeleteElement: function (index, dish) {\n      this.isShowFormDelete = true\n      this.currentDelete = {\n        id: dish._id,\n        index: index\n      }\n    },\n    async onDelete () {\n      await DishApi.deleteToDish(this.currentDelete.id)\n      const deletedDish = this.filterSearchData[this.currentDishIndex]\n      this.searchData = this.searchData.filter((item) => deletedDish._id !== item._id)\n      // this.$delete(this.dishes, this.currentDelete.index)\n      this.isShowFormDelete = false\n    },\n\n    async onCloseDishModal (dish) {\n      this.flags.modalModifyDish = false\n\n      // console.log(dish)\n      // console.log(this.dishes)\n\n      if (dish) {\n        // const dishesId = this.dishesList.filter(e => e._id !== dish._id).map(e => e._id)\n        //\n        // this.dishesList._id = dishesId\n\n        const updateDish = {\n          name: dish.name,\n          category: dish.category,\n          materials: dish.materials\n        }\n\n        if (this.currentDishIndex != null) {\n          let index = this.dishesList.findIndex(dish => dish._id === this.currentDishId)\n          if (index > -1) {\n            this.dishesList[index] = dish\n          }\n\n          index = this.searchData.findIndex(dish => dish._id === this.currentDishId)\n          if (index > -1) {\n            this.searchData[index] = updateDish\n          }\n        }\n        // eslint-disable-next-line no-unused-vars\n        await DishApi.updateToDish(dish._id, updateDish)\n\n        this.dishes = await DishApi.listDish()\n\n        this.dishesList = this.dishes || []\n\n        this.searchData = this.dishesList\n\n        this.formData = this.searchData\n\n        this.searchData = this.sortToDate()\n\n        this.currentDishIndex = -1\n      }\n    },\n\n    async onDeleteDishInMenu (isDelete) {\n      this.flags.modalDeleteDish = false\n      if (isDelete) {\n        const deletedDish = this.filterSearchData[this.currentDishIndex]\n        // this.dishes = this.dishes.filter((item) => deletedDish._id !== item._id)\n        this.dishesList = this.dishesList.filter((item) => deletedDish._id !== item._id)\n        this.searchData = this.searchData.filter((item) => deletedDish._id !== item._id)\n\n        // const updateDish = {\n        //   name: this.nameMenu,\n        //   note: this.menu.note,\n        //   dishes: this.searchData.map(e => e._id)\n        // }\n        await DishApi.deleteToDish(deletedDish._id)\n      }\n    }\n  },\n\n  computed: {\n    ...mapGetters({ isLoading: 'isLoading' }),\n    countCharacters () {\n      let char = (this.dishes.note || '').length\n      return char + '/' + this.limit\n    },\n    filterSearchData () {\n      // Do not delete this line\n      // Don't know why?\n      return this.searchData.filter(e => {\n        if (this.filterCate === 'すべて' || !this.filterCate.length) {\n          return true\n        } else {\n          return e.category.split('-').reverse()[0] === this.filterCate.split('-').reverse()[0]\n        }\n      })\n    }\n  }\n}\n\n",{"version":3,"sources":["dishes-manager.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dishes-manager.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n  <default-layout>\n    <div class=\"menu-detail\" v-if=\"!isLoading\">\n      <div class=\"menu__top\">\n        <Message class=\"message\" v-if=\"notifications.show\" :success=\"notifications.success\"  :close=\"true\">\n          {{ notifications.content }}\n        </Message>\n        <div class=\"fleft\">\n          <div>\n            <Title>全ての割</Title>\n          </div>\n          <div class=\"menu__btn--top \">\n            <Button :click=\"() => popupCategory(null)\" class=\"menu__button\">\n              <span>新規の割を追加</span>\n            </Button>\n          </div>\n        </div>\n\n        <div class=\"clear\"></div>\n      </div>\n\n      <div class=\"filterCategory row\">\n        <div class=\"col-md-3\">\n          <input type=\"text\"\n                 placeholder=\"割名\"\n                 v-model=\"search\"\n          >\n        </div>\n\n        <form class=\"col-md-9 menu__mass\">\n          <label class=\"cate--filter\">分類</label>\n          <span v-for=\"(cate, key) in categories\" :key=\"key\">\n            <input\n              type=\"radio\"\n              name=\"unit\"\n              :value=\"cate\"\n              :id=\"cate\"\n              v-model=\"filterCate\"\n            >\n            <label :for=\"cate\">{{cate.split('-').reverse()[0]}}</label>\n          </span>\n        </form>\n      </div>\n\n      <form class=\"menu__mass sortDishes\">\n        <span class=\"sort__btn\">\n          <input\n            type=\"radio\"\n            name=\"unit\"\n            id=\"name\"\n            :checked=\"currentSort === 'name'\"\n            @change=\"() => sort('name')\"\n          >\n          <label for=\"name\">割名</label>\n        </span>\n\n        <span class=\"sort__btn\">\n          <input\n            type=\"radio\"\n            name=\"unit\"\n            id=\"cate\"\n            @change=\"() => sort('category')\"\n            :checked=\"currentSort === 'category'\"\n          >\n          <label for=\"cate\">分類</label>\n        </span>\n\n        <span class=\"sort__btn\">\n          <input\n            type=\"radio\"\n            name=\"unit\"\n            id=\"date\"\n            @change=\"() => sort('date')\"\n            :checked=\"currentSort === 'date'\"\n          >\n          <label for=\"date\">登録日</label>\n        </span>\n\n      </form>\n\n      <table class=\"menu__table__detail\" style=\"width:100%\" v-if=\"!isLoading\">\n        <thead class=\"menu__table\">\n        <tr class=\"menu__table__title row\">\n          <th class=\"menu-col-1\">割名</th>\n          <th class=\"menu-col-2\">分類</th>\n          <th class=\"menu-col-3\">材料</th>\n          <th class=\"menu-col-4\"></th>\n          <th class=\"clear\"></th>\n        </tr>\n        </thead>\n        <tbody style=\"background-color: white;\" class= \"menu__table__content\">\n        <tr v-for=\"(dish, index) in filterSearchData\" :key=\"index\" class=\"menu__sub__content\">\n\n          <td class=\"menu__name\">{{dish.name}}</td>\n          <td class=\"menu__category\">{{dish.category.split('-').reverse()[0]}}</td>\n          <td class=\"menu__unit\" >\n              <span v-for=\"(mate, i) in dish.materials\" :key=\"i\">\n                <span class=\"material__button\">{{`${mate.name} ${mate.value}${mate.unit}`}}</span>\n              </span>\n          </td>\n          <td class=\"menu__gr__btn\">\n            <Button :click=\"() => popupCategory(index, dish)\" class=\"menu__button\">\n              <span>編集</span>\n            </Button>\n            <Button :click=\"() => popupDeleteDish(index, dish)\" class=\"menu__button--del\">\n              <span>削除</span>\n            </Button>\n            <a class=\"btn__delete\" @click=\"popupDeleteDish(index, dish)\">×</a>\n          </td>\n          <td class=\"clear\"></td>\n        </tr>\n        </tbody>\n      </table>\n\n<!--      <MaterialModal v-if=\"flags.modalModifyDish\" :onClose=\"onCloseDishModal\" :dish=\"filterSearchData[currentDishIndex]\"/>-->\n<!--      <DeleteModal v-if=\"flags.modalDeleteDish\" :onClose=\"onDeleteDishInMenu\" :menu=\"menu\" :dish=\"filterSearchData[currentDishIndex]\"/>-->\n\n<!--      <UnitModal v-if=\"flags.modalVisible\" :onClose=\"() => flags.modalVisible = false\"/>-->\n\n<!--      <DiscountModal v-if=\"flags.modalDish\" :onClose=\"() => flags.modalDish = false\" :menu=\"dishes\" />-->\n\n      <MaterialModal v-if=\"flags.modalModifyDish\" :onClose=\"onCloseDishModal\" :dishes=\"formData\" :dish=\"filterSearchData[currentDishIndex]\"/>\n\n      <DeleteModal v-if=\"flags.modalDeleteDish\" :onClose=\"onDeleteDishInMenu\" :menu=\"menu\" :dish=\"filterSearchData[currentDishIndex]\"/>\n\n    </div>\n  </default-layout>\n</template>\n\n<script>\n\nimport DefaultLayout from '../layouts/default-layout'\nimport Button from '../../components/partials/button'\nimport Title from '../../components/partials/title'\nimport MaterialModal from '../user/menu-detail/modals/material'\nimport DeleteModal from '../user/menu-detail/modals/delete'\nimport DishApi from '../../services/dish'\nimport { mapActions, mapGetters } from 'vuex'\nimport { SET_LOADING } from '../../store/types'\nimport { doSearchInArray } from '../../plugins/jpconverter'\nimport { categories } from '../../constants/material'\n// eslint-disable-next-line no-unused-vars\nimport MenuApi from '../../services/menu'\n\nexport default {\n  name: 'dishes-manager',\n  components: {\n    DefaultLayout,\n    Button,\n    Title,\n    DeleteModal,\n    MaterialModal\n  },\n  data () {\n    return {\n      errors: {\n        name: '',\n        value: ''\n      },\n      flags: {\n        modalVisible: false,\n        modalModifyDish: false,\n        modalCreateDish: false,\n        modalDish: false,\n        modalDeleteDish: false\n      },\n      notifications: {\n        status: true,\n        show: false,\n        content: '',\n        success: true\n      },\n      checkedSort: {\n        date: false,\n        name: true,\n        category: false\n      },\n      isShowFormDelete: false,\n      search: null,\n      searchData: [],\n      searchTimeOut: null,\n      filterCate: 'すべて',\n      currentDishIndex: null,\n      currentDishId: null,\n      currentSort: localStorage.getItem('current_sort') || 'name',\n      currentSortDir: true,\n      limit: 200,\n      menu: {\n        name: '',\n        category: '',\n        note: '',\n        dishes: []\n      },\n      dishesList: [],\n      formData: [],\n      categories: ['すべて', ...categories],\n      selected: '',\n      url: ''\n    }\n  },\n\n  watch: {\n    search (value) {\n      if (this.searchTimeOut != null) {\n        // if (this.filterCate === 'すべて') {\n        //   this.filterCate = 'すべて'\n        // }\n        clearTimeout(this.searchTimeOut)\n      }\n\n      const dishes = this.dishesList\n      // console.log('change from search', dishes)\n\n      this.searchTimeOut = setTimeout(async () => {\n        this.searchData = await doSearchInArray(value, dishes)\n      }, 400)\n    }\n  },\n\n  async mounted () {\n    this.setLoading(true)\n    // this.$route.params.id;\n    this.dishes = await DishApi.listDish()\n    this.dishesList = this.dishes || []\n    this.searchData = this.dishesList\n    this.formData = this.searchData\n\n    this.sort(this.currentSort)\n    this.setLoading(false)\n  },\n  methods: {\n    ...mapActions({\n      setLoading: SET_LOADING\n    }),\n\n    backToMenu () {\n      this.$router.back()\n    },\n\n    onCreate () {\n      this.flags.modalVisible = true\n    },\n\n    popupCategory (index, dish) {\n      this.currentDishIndex = index\n\n      if (dish) {\n        this.currentDishId = dish._id\n      }\n\n      this.flags.modalModifyDish = true\n    },\n\n    popupCreateDish () {\n      this.flags.modalCreateDish = true\n    },\n\n    popupDish () {\n      this.flags.modalDish = true\n    },\n\n    popupDeleteDish (index, dish) {\n      this.flags.modalDeleteDish = true\n\n      if (dish) {\n        this.currentDishIndex = index\n      }\n      this.currentDishId = dish._id\n    },\n\n    updateModalVisible () {\n      this.flags.modalVisible = false\n    },\n\n    sort: function (s) {\n      // if s == current sort, reverse\n      this.currentSortDir = !this.currentSortDir\n      this.currentSort = s\n      if (s === 'date') {\n        this.checkedSort.date = true\n        this.searchData = this.sortToDate()\n      }\n      if (s === 'name') {\n        this.checkedSort.name = true\n        this.searchData = this.sortedDishes()\n      }\n      if (s === 'category') {\n        this.checkedSort.category = true\n        this.searchData = this.sortedDishes()\n      }\n      localStorage.setItem('current_sort', this.currentSort)\n    },\n\n    sortToDate () {\n      var order = this.oldestFirst ? 1 : -1\n      // `this` points to the vm instance\n      return this.dishesList.sort(function (a, b) {\n        a = new Date(a.created_at)\n        b = new Date(b.created_at)\n        var results = a > b ? 1 : (a < b ? -1 : 0)\n        return results * order\n      })\n    },\n\n    sortedDishes () {\n      this.sortToDate(false)\n      return this.dishesList.sort((a, b) => {\n        if (a[this.currentSort].toLowerCase() < b[this.currentSort].toLowerCase()) {\n          return -1\n        }\n        if (a[this.currentSort].toLowerCase() > b[this.currentSort].toLowerCase()) {\n          return 1\n        }\n        return 0\n      })\n    },\n    confirmDeleteElement: function (index, dish) {\n      this.isShowFormDelete = true\n      this.currentDelete = {\n        id: dish._id,\n        index: index\n      }\n    },\n    async onDelete () {\n      await DishApi.deleteToDish(this.currentDelete.id)\n      const deletedDish = this.filterSearchData[this.currentDishIndex]\n      this.searchData = this.searchData.filter((item) => deletedDish._id !== item._id)\n      // this.$delete(this.dishes, this.currentDelete.index)\n      this.isShowFormDelete = false\n    },\n\n    async onCloseDishModal (dish) {\n      this.flags.modalModifyDish = false\n\n      // console.log(dish)\n      // console.log(this.dishes)\n\n      if (dish) {\n        // const dishesId = this.dishesList.filter(e => e._id !== dish._id).map(e => e._id)\n        //\n        // this.dishesList._id = dishesId\n\n        const updateDish = {\n          name: dish.name,\n          category: dish.category,\n          materials: dish.materials\n        }\n\n        if (this.currentDishIndex != null) {\n          let index = this.dishesList.findIndex(dish => dish._id === this.currentDishId)\n          if (index > -1) {\n            this.dishesList[index] = dish\n          }\n\n          index = this.searchData.findIndex(dish => dish._id === this.currentDishId)\n          if (index > -1) {\n            this.searchData[index] = updateDish\n          }\n        }\n        // eslint-disable-next-line no-unused-vars\n        await DishApi.updateToDish(dish._id, updateDish)\n\n        this.dishes = await DishApi.listDish()\n\n        this.dishesList = this.dishes || []\n\n        this.searchData = this.dishesList\n\n        this.formData = this.searchData\n\n        this.searchData = this.sortToDate()\n\n        this.currentDishIndex = -1\n      }\n    },\n\n    async onDeleteDishInMenu (isDelete) {\n      this.flags.modalDeleteDish = false\n      if (isDelete) {\n        const deletedDish = this.filterSearchData[this.currentDishIndex]\n        // this.dishes = this.dishes.filter((item) => deletedDish._id !== item._id)\n        this.dishesList = this.dishesList.filter((item) => deletedDish._id !== item._id)\n        this.searchData = this.searchData.filter((item) => deletedDish._id !== item._id)\n\n        // const updateDish = {\n        //   name: this.nameMenu,\n        //   note: this.menu.note,\n        //   dishes: this.searchData.map(e => e._id)\n        // }\n        await DishApi.deleteToDish(deletedDish._id)\n      }\n    }\n  },\n\n  computed: {\n    ...mapGetters({ isLoading: 'isLoading' }),\n    countCharacters () {\n      let char = (this.dishes.note || '').length\n      return char + '/' + this.limit\n    },\n    filterSearchData () {\n      // Do not delete this line\n      // Don't know why?\n      return this.searchData.filter(e => {\n        if (this.filterCate === 'すべて' || !this.filterCate.length) {\n          return true\n        } else {\n          return e.category.split('-').reverse()[0] === this.filterCate.split('-').reverse()[0]\n        }\n      })\n    }\n  }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n  a {\n    cursor: pointer;\n  }\n\n  .menu-detail {\n    font-size: 14px;\n    color: #151e5d;\n    background-color: #ececec;\n  }\n  .menu__title {\n    margin-bottom: 10px;\n    a {\n      color: #44a0e5;\n      margin-right: 10px;\n    }\n  }\n  .menu__top {\n    margin-bottom: 40px;\n    h2 {\n      margin-top: 20px;\n      margin-bottom: 20px;\n    }\n\n    .menu__name--top {\n      color: #24374e !important;\n      font-size: 23px;\n      padding: 8px 0 8px 22px;\n      color: #24374e;\n      border-left: 4px solid #24387c;\n    }\n  }\n\n  .menu__button {\n    width: 150px !important;\n    display: inline-block;\n    padding: 3px;\n    text-align: center;\n    margin: 0 !important;\n  }\n\n  .menu__button--del {\n    @extend .menu__button;\n    display: none;\n    background-color: red !important;\n    color: #ffffff !important;\n  }\n\n  small {\n    color: red;\n    font-weight: bold;\n  }\n\n  .menu__button--white {\n    @extend .menu__button;\n    width: 178px !important;\n    padding: 6px;\n    background-color: #ffffff !important;\n    color: #151e5d !important;\n    border: 1px solid #151e5d;\n    border-radius: 20px;\n    font-weight: bold;\n    margin-right: 10px !important;\n  }\n\n  .menu__table__title {\n    background-color: #e8e6e6;\n    color: #151e5d;\n    font-weight: bold;\n    width: 100%;\n    /*display: none;*/\n\n    a {\n      color: #151e5d;\n    }\n\n    .menu-col-1 {\n      width: 20%;\n      float: left;\n      text-align: left;\n      padding: 10px 20px;\n    }\n\n    .menu-col-2 {\n      @extend .menu-col-1;\n      width: 10%;\n    }\n\n    .menu-col-3 {\n      @extend .menu-col-1;\n      width: 50%;\n    }\n\n    @media only screen and (max-width: 992px) {\n      .menu-col-1 {\n        width: 20%;\n      }\n\n      .menu-col-2 {\n        width: 20%;\n      }\n\n      .menu-col-3 {\n        width: 60%;\n      }\n    }\n\n    @media only screen and (max-width: 767px) {\n      display: none;\n    }\n  }\n\n  .menu__table__content {\n    .menu__sub__content {\n      border-bottom: 1px solid #ececec;\n    }\n\n    .menu__name {\n      padding: 10px 20px;\n      width: 20%;\n      float: left;\n    }\n\n    .menu__category {\n      @extend .menu__name;\n      width: 10%;\n    }\n\n    .menu__unit {\n      @extend .menu__name;\n      width: 50%;\n    }\n\n    .menu__gr__btn {\n      width: 15%;\n      float: right;\n      margin-top: 7px;\n      padding: 10px\n    }\n\n    .menu__note {\n      @extend .menu__name;\n      position: relative;\n      width: 80%;\n    }\n\n    @media only screen and (max-width: 992px) {\n      .menu__name {\n        width: 20%;\n      }\n\n      .menu__category {\n        width: 20%;\n      }\n\n      .menu__unit {\n        width: 60%;\n      }\n\n      .menu__gr__btn {\n        width: 100%;\n        padding-left: 25%;\n      }\n\n      .menu__note {\n        width: 80%;\n      }\n      .menu__gr__btn {\n        padding: 0 28%;\n        margin: 20px 0;\n      }\n\n      .menu__button--del {\n        display: inline-block;\n        margin-left: 20px !important;\n      }\n\n      .btn__delete {\n        display: none;\n      }\n    }\n\n    @media only screen and (max-width: 767px) {\n      .menu__name {\n        width: 100%;\n        font-size: 16px;\n        font-weight: 600;\n        color: #151e5d;\n        margin-top: 10px;\n        padding: 5px 20px;\n      }\n\n      .menu__category {\n        width: 100%;\n        margin-top: 0;\n      }\n\n      .menu__unit {\n        width: 100%;\n        margin-top: 0;\n      }\n\n      .menu__note {\n        width: 100%;\n        margin-top: 0;\n      }\n      .menu__gr__btn {\n        padding: 0 16%;\n      }\n    }\n  }\n  @media only screen and (max-width: 400px) {\n    .menu__gr__btn {\n      padding: unset;\n      margin: 10px auto;\n      float: none;\n      display: inline-block;\n      text-align: center;\n      .menu__button {\n        width: 100px !important;\n      }\n    }\n  }\n\n  .btn__delete {\n    color: #ffffff;\n    background-color: red;\n    font-size: 22px;\n    text-align: center;\n    width: 32px;\n    height: 30px;\n    border-radius: 50%;\n    padding: 1px 8px;\n    margin-left: 20px;\n  }\n\n  .material__button {\n    display: inline-block;\n    font-weight: 500;\n    margin: 5px 10px 5px 0;\n    padding: 10px;\n    color: #44a0e5;\n    border-radius: 4px;\n    border: 1px solid #44a0e5;\n  }\n\n  .menu__gr__btn {\n    display: flex;\n    align-items: center;\n    padding-right: 20px;\n  }\n\n  .menu__textarea {\n    background: #f5f5f5;\n    padding: 10px;\n    min-height: 70px;\n    border-radius: 3px;\n    border: 1px solid #a9a9a9;\n    resize: vertical;\n    display: block;\n    width: 100%;\n  }\n\n  .menu__characters {\n    position: absolute;\n    bottom: 15px;\n    right: 30px;\n    font-size: 12px;\n    color: rgb(96, 125, 139);\n  }\n\n  .unit__name {\n    color: #151e5d;\n    padding-right: 12px;\n    font-weight: bold;\n    background-color: #e8e6e6;\n    /*border-radius: 15px;*/\n    border: none;\n    font-size: 14px\n  }\n\n  .menu__btn--top {\n    margin-top: 20px;\n\n    a {\n      display: block;\n    }\n  }\n\n  .menu__mass {\n    color: #151e5d;\n    padding: 10px 5px;\n    border-left: 1px solid #a9a9a9;\n    /*margin-bottom: 10px;*/\n\n    span {\n      display: inline-block;\n    }\n\n    input {\n      width: 18px;\n      height: 20px;\n      vertical-align: sub;\n      outline: none;\n    }\n\n    label {\n      font-size: 13px;\n      font-weight: bold;\n      margin: 0 18px 0 8px;\n    }\n\n    .cate--filter {\n      margin: 0 50px 0 0;\n      font-size: 15px;\n      @media only screen and (max-width: 1720px) {\n        display: block;\n        padding-bottom: 10px;\n      }\n    }\n\n    @media only screen and (max-width: 992px) {\n      span {\n        width: 33%;\n      }\n    }\n\n    @media only screen and (max-width: 500px) {\n      width: 100%;\n      margin-bottom: 5px;\n      border-left: none;\n      .sort__btn {\n        width: 33%;\n      }\n\n      label {\n        font-size: 11px;\n      }\n      span {\n        width: 50%;\n        margin-bottom: 5px;\n      }\n    }\n  }\n\n  .filterCategory {\n    width: 100%;\n    border: 1px solid #a9a9a9;\n    background-color: #ffffff;\n    margin-bottom: 10px;\n\n    .col-md-3 {\n      padding: 0;\n      @media only screen and (max-width: 1720px) {\n        margin-top: 23px;\n      }\n      input {\n        width: 97%;\n        height: 34px;\n        padding: 5px 10px;\n        margin: 4px;\n        border: 1px solid #ececec;\n        outline: none;\n      }\n    }\n\n  }\n\n  .sortDishes {\n    border: none !important;\n  }\n\n  @media only screen and (max-width: 767px){\n    .fleft {\n      width: 100%;\n    }\n    .menu__button--white {\n      margin-right: 0 !important;\n    }\n    .menu__btn--top {\n      display: block;\n      float: none;\n      margin: 0 auto;\n      width: 100%;\n      text-align: center;\n\n      .menu__button {\n        width: 100% !important;\n        margin-top: 10px !important;\n      }\n      .menu__button--white {\n        width: 100% !important;\n      }\n    }\n\n    .menu__table__detail {\n      margin-bottom: 100px\n    }\n  }\n\n</style>\n"]}]}