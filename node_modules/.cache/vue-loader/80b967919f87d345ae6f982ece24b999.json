{"remainingRequest":"/home/quan/Documents/Projects/stock_analysis/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quan/Documents/Projects/stock_analysis/src/views/user/menu-detail/modals/material.vue?vue&type=style&index=0&id=e8a59c14&lang=scss&scoped=true&","dependencies":[{"path":"/home/quan/Documents/Projects/stock_analysis/src/views/user/menu-detail/modals/material.vue","mtime":1615822194522},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\na {\n  cursor: pointer;\n}\n\n.material__item {\n  cursor: pointer;\n  user-select: none;\n}\n\n.menu__textbox {\n  margin-bottom: 16px;\n}\n\n.menu__mass {\n  display: inline-block;\n\n  input {\n    width: 20px;\n    height: 20px;\n    vertical-align: sub;\n    outline: none;\n  }\n\n  label {\n    margin: 0 25px 0 5px;\n  }\n\n  @media only screen and (max-width: 992px) {\n    width: 33%;\n    margin-bottom: 5px;\n  }\n\n  @media only screen and (max-width: 500px) {\n    width: 50%;\n    label {\n      font-size: 11px;\n    }\n  }\n}\n\n.mb-10 {\n  margin-bottom: 10px;\n}\n\n.input-item {\n  display: inline-block;\n  margin-right: 10px;\n  margin-bottom: 10px;\n\n  label {\n    margin-left: 5px;\n    color: #151e5d;\n  }\n\n  @media only screen and (max-width: 767px) {\n    width: 44%;\n  }\n}\n\nlabel {\n  font-size: 14px;\n  font-weight: bold;\n  margin-right: 10px;\n}\n\n.menu__input {\n  width: 100%;\n  padding: 16px 0;\n  margin: 20px 0;\n  border: 5px solid #d8d8d8;\n  border-radius: 5px;\n  box-sizing: border-box;\n\n  .menu__input__title {\n    font-size: 18px;\n    font-weight: bold;\n    margin: 0 0 15px 25px;\n    @media only screen and (max-width: 767px) {\n      margin: 0 0 -10px 10px;\n    }\n  }\n\n  .value {\n    margin-right: 40px;\n    @media only screen and (max-width: 992px) {\n      margin-left: 0;\n    }\n  }\n\n  .mate__list {\n    padding: 10px;\n\n    .col-md-6 {\n      margin-bottom: 10px;\n    }\n  }\n\n  .mate__options {\n    margin-bottom: 10px;\n  }\n\n  .mate__btn {\n    text-align: center;\n  }\n}\n\n.material {\n  &__button {\n    display: inline-block;\n    font-weight: 500;\n    margin: 5px 15px 15px 0;\n    padding: 10px;\n    color: #44a0e5;\n    border-radius: 4px;\n    border: 1px solid #44a0e5;\n  }\n\n  &__item {\n    position: relative;\n  }\n\n  @media only screen and (max-width: 992px) {\n    .col-md-2 {\n      margin: 10px 0;\n    }\n\n  }\n}\n\n.materials__table {\n  .material__table--item {\n    display: inline-block;\n    /*margin-right: 20px;*/\n    position: relative;\n  }\n\n  a {\n    position: absolute;\n    top: -5px;\n    left: -10px;\n    z-index: 99999;\n  }\n\n  font-size: 16px;\n  border-top: 1px solid #d8d8d8;\n  padding: 10px 25px;\n\n  .mate__input {\n    width: 5%;\n    float: left;\n  }\n\n  .mate__name {\n    width: 15%;\n    float: left;\n  }\n\n  .mate__cat {\n    width: 15%;\n    float: left;\n  }\n\n  .mate__unit {\n    width: 65%;\n    float: left;\n  }\n\n  @media only screen and (max-width: 992px) {\n    .mate__input {\n      width: 15%;\n    }\n\n    .mate__name {\n      width: 40%;\n    }\n\n    .mate__cat {\n      width: 40%;\n    }\n\n    .mate__unit {\n      width: 85%;\n      float: right;\n    }\n  }\n\n  input {\n    width: 20px;\n    height: 28px;\n    vertical-align: middle;\n    outline: none;\n  }\n}\n\n.menu__button {\n  width: 150px !important;\n  border-radius: 20px !important;\n  display: inline-block;\n  padding: 3px;\n  text-align: center;\n}\n\n.btn__delete {\n  position: absolute;\n  top: -100%;\n  left: -8%;\n  color: #ffffff;\n  background-color: red;\n  font-size: 14px;\n  text-align: center;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  padding: 1px 5px;\n}\n\n.unit__name {\n  width: 100%;\n  color: #151e5d;\n  padding: 5px;\n  font-weight: bold;\n  /*border-radius: 15px;*/\n  border: 1px solid #151e5d;\n  font-size: 14px\n}\n\n.value--input {\n  height: 33px !important;\n  border: 1px solid #e9ebf1;\n  outline: none;\n  width: 250px;\n  margin-left: 30px;\n  padding: 0 10px;\n  font-size: 16px;\n\n  @media only screen and (max-width: 424px) {\n    margin-left: 0;\n  }\n}\n\n.lable--input {\n  margin-bottom: 16px;\n  display: inline-block;\n  @media only screen and (max-width: 500px) {\n    margin-top: 15px;\n    margin-bottom: 5px;\n  }\n}\n\n@media only screen and (max-width: 500px) {\n  .menu__input .mate__btn {\n    margin-left: 12%;\n  }\n  .menu__input .mate__options {\n    margin-bottom: 30px;\n    margin-left: 15px;\n  }\n  .form-area select {\n    padding: 3px 15px !important;\n  }\n}\n\n.form-area {\n  margin-top: 20px;\n\n  .unit__title {\n    padding: 0;\n    margin-bottom: 10px;\n    font-weight: bold;\n  }\n\n  select {\n    padding: 5px 15px;\n    color: #151e5d;\n    font-weight: bold;\n    border: 1px solid #151e5d;\n    border-radius: 5px;\n    outline: none;\n  }\n}\n\n.material__title {\n  margin-bottom: 10px;\n  font-weight: bold;\n  font-size: 16px;\n}\n\n.nav {\n  padding: 5px;\n  margin-top: 20px;\n\n  .nav-item {\n    display: inline-block;\n    padding: 0 10px;\n\n    a {\n      color: #151e5d;\n      display: block;\n      padding-bottom: 5px;\n\n      &.active {\n        color: #000;\n        border-bottom: 3px solid #151e5d;\n      }\n    }\n  }\n}\n\nsmall {\n  color: red;\n  margin-left: 20px;\n}\n\n",{"version":3,"sources":["material.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAydfile":"material.vue","sourceRoot":"src/views/user/menu-detail/modals","sourcesContent":["<template>\n  <div>\n    <Modal :title=\"modalTitle\" @updateModalVisible=\"onClose\" width=\"90%\" v-if=\"!materialModal.isShowEditMaterial\">\n      <div class=\"check__material\">\n        <div class=\"row\">\n          <div class=\"col-md-1 material__title\">割名</div>\n          <div class=\"col-md-4 menu__textbox\">\n            <TextBox\n              type=\"text\"\n              v-model=\"form.name\"\n              placeholder=\"割名\"\n              pleft=\"14px\"\n              autocomplete=\"off\"\n            />\n            <small style=\"color: #ff0000\">{{ errors.name_dish }}</small>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-1 material__title\">分類</div>\n          <form class=\"col-md-11 menu__textbox\">\n            <div class=\"menu__mass\" v-for=\"(cate, key) in categories\" :key=\"key\">\n              <input\n                type=\"radio\"\n                name=\"unit\"\n                v-model=\"form.category\"\n                :value=\"cate\"\n                :id=\"`cat-${key}`\"\n              >\n              <label :for=\"`cat-${key}`\">{{ cate.split('-').reverse()[0] }}</label>\n            </div>\n          </form>\n        </div>\n      </div>\n\n      <div class=\"menu__input\">\n        <div class=\"menu__input__title\">材料</div>\n        <div class=\"row mate__list\">\n          <div class=\"col-md-12 mate__name\" style=\"margin-bottom: 5px\">\n            <label class=\"lable--input\" for=\"mate-name\">材料名</label>\n            <input class=\"value--input\"\n                   id=\"mate-name\"\n                   type=\"text\"\n                   placeholder=\"材料名\"\n                   autocomplete=\"off\"\n                   v-model=\"nameMaterial\"\n            />\n            <small style=\"color: red\">{{ errors.name_material }}</small>\n          </div>\n          <div class=\"col-md-12 mate__value\" v-if=\"isShowInputValue\">\n            <label class=\"lable--input value\" for=\"mate-value\">値</label>\n            <input class=\"value--input\"\n                   id=\"mate-value\"\n                   type=\"number\"\n                   autocomplete=\"off\"\n                   v-model=\"valueMaterial\"\n                   min=\"0\"\n                   step=\"1\"\n            />\n            <small style=\"color: red\">{{ errors.value }}</small>\n          </div>\n          <div class=\"col-md-12\">\n            <div class=\"form-area row\">\n              <div class=\"col-md-1 unit__title\">単位</div>\n              <form class=\"col-md-6\">\n                <div id=\"unit_material\" class=\"input-item\" v-for=\"unit in checkedUnits\" :key=\"unit\">\n                  <input\n                    type=\"radio\"\n                    name=\"unit\"\n                    v-model=\"unitMaterial\"\n                    :value=\"unit\"\n                    :id=\"unit\"\n                    @change=\"onChangeUnit\">\n                  <label :for=\"unit\">{{ unit }}</label>\n                </div>\n                <div style=\"color: #ff0000\">{{ errors.unit }}</div>\n              </form>\n              <select class=\"col-md-1 mate__options\" v-model=\"unitMaterial\" @change=\"onChangeUnit\">\n                <option disabled value=\"\">その他</option>\n                <option v-for=\"(value, key) in uncheckedUnits\" :key=\"key\" :value=\"value\">{{value}}</option>\n              </select>\n\n              <div class=\"col-md-2 mate__btn\">\n                <Button border-radius=\"10px\"\n                        :click=\"addNewMat\" class=\"menu__button add__btn__mate\">\n                  <span>追加</span>\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"materials__table\">\n          <div class=\"material__table--item\" v-for=\"(mate, i) in materialList\" :key=\"i\">\n              <span class=\"material__item\" @click=\"() => openEditMaterialModal(mate, i)\">\n                <span class=\"material__button\">\n                  {{ `${mate.name} ${mate.value}${mate.unit}` }}\n                </span>\n              </span>\n            <a class=\"btn__delete\" @click=\"onDelete(i)\">×</a>\n          </div>\n        </div>\n      </div>\n\n      <template slot=\"footer\">\n        <Button :click=\"onClose\" backgroundColor=\"#fff\" color=\"#151e5d\" width=\"150px\">キャンセル</Button>\n        <Button :click=\"onSaveDish\" width=\"150px\">{{ buttonText }}</Button>\n      </template>\n    </Modal>\n\n    <Modal v-else title=\"材料の編集\" @updateModalVisible=\"closeEditMaterialForm\" width=\"90%\">\n      <div class=\"row mate__list\">\n        <div class=\"col-md-12\">\n          <label class=\"lable--input\" for=\"edit-mate-name\">材料名</label>\n          <input class=\"value--input\"\n                 id=\"edit-mate-name\"\n                 type=\"text\"\n                 placeholder=\"材料名\"\n                 autocomplete=\"off\"\n                 v-model=\"materialModal.form.name\"\n          />\n          <small style=\"color: red\">{{ materialModal.errors.name }}</small>\n        </div>\n        <div class=\"col-md-12\" v-if=\"materialModal.isShowInputValue\">\n          <label class=\"lable--input\" style=\"padding-right: 30px\" for=\"edit-mate-value\">値</label>\n          <input class=\"value--input\"\n                 id=\"edit-mate-value\"\n                 type=\"number\"\n                 min=\"0\"\n                 autocomplete=\"off\"\n                 v-model=\"materialModal.form.value\"\n          />\n          <small style=\"color: red\">{{ materialModal.errors.value }}</small>\n        </div>\n        <div class=\"col-md-12\">\n          <div class=\"form-area\">\n            <div class=\"col-md-1 unit__title\">単位</div>\n            <form id=\"edit_unit_materials\" class=\"input-item\" v-for=\"unit in checkedUnits\" :key=\"unit\">\n              <input\n                v-model=\"materialModal.form.unit\"\n                type=\"radio\" name=\"unit\"\n                :value=\"unit\"\n                :id=\"unit\"\n                @change=\"editMaterialOnChangeUnit\">\n              <label :for=\"unit\">{{ unit }}</label>\n            </form>\n            <select v-model=\"materialModal.form.unit\" @change=\"onChangeUnit\">\n              <option disabled value=\"\">その他</option>\n              <option v-for=\"(value, key) in uncheckedUnits\" :key=\"key\" :value=\"value\">{{ value }}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <template slot=\"footer\">\n        <Button :click=\"closeEditMaterialForm\" backgroundColor=\"#fff\" color=\"#151e5d\" width=\"150px\">キャンセル</Button>\n        <Button :click=\"onSaveMaterial\" width=\"150px\">{{ buttonText }}</Button>\n      </template>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport Modal from '../../../../components/partials/modal'\nimport Button from '../../../../components/partials/button'\nimport TextBox from '../../../../components/partials/textbox'\n// import MenuApi from '../../../../services/menu'\nimport DishApi from '../../../../services/dish'\nimport { mapGetters } from 'vuex'\nimport { SET_LOADING } from '@/store/types'\n// import UnitsApi from '../../../../services/setting'\nimport { materialUnits, categories } from '@/constants/material'\n// import MenuApi from '../../../../services/menu'\n\nexport default {\n  components: {\n    Modal,\n    Button,\n    TextBox\n  },\n\n  data () {\n    return {\n      modalTitle: '割の登録',\n      buttonText: '登録する',\n      activeItem: 'addExisting',\n      errors: {\n        name_dish: '',\n        name_material: '',\n        value: '',\n        unit: ''\n      },\n      materialModal: {\n        isShowEditMaterial: false,\n        isShowInputValue: true,\n        currentMaterial: null,\n        errors: {\n          value: '',\n          name: '',\n          unit: ''\n        },\n        form: {\n          unit: '',\n          value: '',\n          name: ''\n        }\n      },\n      isAddNewMaterial: false,\n      isShowMaterialOptions: true,\n      isShowInputValue: true,\n      isShowValue: true,\n      categories: categories,\n      valueMaterial: '',\n      unitMaterial: '',\n      nameMaterial: '',\n      material_index: 0,\n      form: {\n        name: '',\n        category: '0-漬け地',\n        materials: []\n      },\n      units: materialUnits,\n      checkedUnits: [],\n      materialList: []\n    }\n  },\n\n  props: {\n    onClose: {\n      type: Function\n    },\n    menu: {\n      type: Object\n    },\n    dish: {\n      type: Object\n    },\n    dishes: {\n      type: Array\n    }\n  },\n\n  mounted () {\n    this.checkedUnits = this.store.units\n  },\n\n  computed: {\n    ...mapGetters({\n      store: 'store',\n      setLoading: SET_LOADING\n    }),\n    uncheckedUnits () {\n      return this.units.filter((item) => !this.checkedUnits.includes(item))\n    }\n  },\n\n  async beforeMount () {\n    let currentDishId = (this.dish || {})._id\n    if (currentDishId) {\n      this.modalTitle = '割の編集'\n      this.buttonText = '更新する'\n    }\n\n    if (this.dish) {\n      this.form.materials = (this.dish.materials || [])\n        .map((item) => {\n          return {\n            name: item.name,\n            unit: item.unit,\n            value: item.value\n          }\n        })\n      this.form.name = this.dish.name || ''\n      this.form.category = this.dish.category || '0-漬け地'\n    }\n\n    this.materialList = this.form.materials\n  },\n\n  methods: {\n\n    isActive (menuItem) {\n      return this.activeItem === menuItem\n    },\n    setActive (menuItem) {\n      this.errors.value = ''\n      this.errors.name = ''\n      this.activeItem = menuItem\n    },\n    onDelete (i) {\n      this.$delete(this.form.materials, i)\n    },\n\n    async addNewMat () {\n      let isValid = true\n      if (!this.nameMaterial) {\n        isValid = false\n        this.errors.name_material = '材料名を入力してください。'\n      } else {\n        this.errors.name_material = ''\n      }\n\n      if (!this.valueMaterial && this.isShowMaterialValue(this.unitMaterial)) {\n        isValid = false\n        this.errors.value = '値は数値です'\n      } else if (this.valueMaterial < 0) {\n        isValid = false\n        this.errors.value = '値は負の数ではありません'\n      } else {\n        this.errors.value = ''\n      }\n\n      if (!this.unitMaterial) {\n        isValid = false\n        this.errors.unit = '単位を選んでください。'\n      } else {\n        this.errors.unit = ''\n      }\n\n      if (!isValid) {\n        return\n      }\n\n      this.form.materials.push({\n        name: this.nameMaterial,\n        value: this.valueMaterial,\n        unit: this.unitMaterial\n      })\n\n      this.nameMaterial = ''\n      this.valueMaterial = ''\n      this.unitMaterial = ''\n      this.isShowInputValue = true\n    },\n\n    async onSaveDish () {\n      // console.log('form data', this.form)\n\n      if (!this.form.name) {\n        this.errors.name_dish = '割名を入力してください。'\n        return\n      } else {\n        this.errors.name_dish = ''\n      }\n\n      const saveDish = {\n        name: this.form.name,\n        category: this.form.category,\n        materials: this.form.materials\n      }\n\n      let currentDishId = (this.dish || {})._id\n\n      // console.log('current dish id', currentDishId)\n\n      if (currentDishId) {\n        const res = await DishApi.updateToDish(this.dish._id, saveDish)\n\n        this.dishes.map(dish => {\n          if (dish._id === currentDishId) {\n            dish.materials = res.dish.materials\n            dish.name = res.dish.name\n            dish.category = res.dish.category\n          }\n        })\n      } else {\n        const res = await DishApi.createDish(saveDish)\n\n        // console.log(res)\n\n        currentDishId = res._id\n\n        // const updateDish = {\n        //   name: this.menu.name,\n        //   note: this.menu.note,\n        //   dishes: currentDishId\n        // }\n\n        // await MenuApi.updateMenu(this.menu._id, updateDish)\n\n        // console.log(updateDish)\n        this.dishes.unshift(\n          saveDish\n        )\n      }\n      if (this.onClose) {\n        this.onClose({\n          _id: currentDishId,\n          ...saveDish\n        })\n      }\n    },\n\n    onChangeUnit (event) {\n      const current = event.target.value\n      if (current === '少々' || current === '適量') {\n        this.isShowInputValue = false\n        this.valueMaterial = ''\n      } else {\n        this.isShowInputValue = true\n      }\n    },\n    isShowMaterialValue (unit) {\n      return unit !== '少々' && unit !== '適量'\n    },\n\n    // For edit material\n    openEditMaterialModal (mat, index) {\n      this.materialModal.currentMaterial = mat\n      this.materialModal.currentMaterialIndex = index\n      this.materialModal.form = {\n        name: mat.name,\n        value: mat.value,\n        unit: mat.unit\n      }\n      this.materialModal.isShowEditMaterial = true\n    },\n    editMaterialOnChangeUnit () {\n      const { form } = this.materialModal\n      this.materialModal.isShowInputValue = this.isShowMaterialValue(form.unit)\n      if (!this.materialModal.isShowInputValue) {\n        this.materialModal.form.value = ''\n      }\n    },\n    closeEditMaterialForm () {\n      this.materialModal.isShowEditMaterial = false\n    },\n    async onSaveMaterial () {\n      const { currentMaterialIndex } = this.materialModal\n      const { form } = this.materialModal\n\n      // validate form\n      let isValid = true\n      if (!form.name.length) {\n        isValid = false\n        this.materialModal.errors.name = '材料名を入力してください。'\n      }\n\n      if (this.isShowMaterialValue(form.unit) && !form.value.length) {\n        isValid = false\n        this.materialModal.errors.value = '値は負の数ではありません'\n      }\n\n      if (!this.materialModal.form.unit) {\n        isValid = false\n        this.materialModal.errors.unit = '単位を選んでください。'\n      } else {\n        this.materialModal.errors.unit = ''\n      }\n\n      if (!isValid) {\n        return\n      }\n      // bin new material to list\n      // const\n      this.materialList[currentMaterialIndex].name = this.materialModal.form.name\n      this.materialList[currentMaterialIndex].unit = this.materialModal.form.unit\n      this.materialList[currentMaterialIndex].value = this.materialModal.form.value\n      if (!this.isShowMaterialValue(this.materialModal.form.unit)) {\n        this.materialList[currentMaterialIndex].value = ''\n      } else {\n        this.materialList[currentMaterialIndex].value = this.materialModal.form.value\n      }\n\n      // close edit material form\n      this.closeEditMaterialForm()\n    }\n  }\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  a {\n    cursor: pointer;\n  }\n\n  .material__item {\n    cursor: pointer;\n    user-select: none;\n  }\n\n  .menu__textbox {\n    margin-bottom: 16px;\n  }\n\n  .menu__mass {\n    display: inline-block;\n\n    input {\n      width: 20px;\n      height: 20px;\n      vertical-align: sub;\n      outline: none;\n    }\n\n    label {\n      margin: 0 25px 0 5px;\n    }\n\n    @media only screen and (max-width: 992px) {\n      width: 33%;\n      margin-bottom: 5px;\n    }\n\n    @media only screen and (max-width: 500px) {\n      width: 50%;\n      label {\n        font-size: 11px;\n      }\n    }\n  }\n\n  .mb-10 {\n    margin-bottom: 10px;\n  }\n\n  .input-item {\n    display: inline-block;\n    margin-right: 10px;\n    margin-bottom: 10px;\n\n    label {\n      margin-left: 5px;\n      color: #151e5d;\n    }\n\n    @media only screen and (max-width: 767px) {\n      width: 44%;\n    }\n  }\n\n  label {\n    font-size: 14px;\n    font-weight: bold;\n    margin-right: 10px;\n  }\n\n  .menu__input {\n    width: 100%;\n    padding: 16px 0;\n    margin: 20px 0;\n    border: 5px solid #d8d8d8;\n    border-radius: 5px;\n    box-sizing: border-box;\n\n    .menu__input__title {\n      font-size: 18px;\n      font-weight: bold;\n      margin: 0 0 15px 25px;\n      @media only screen and (max-width: 767px) {\n        margin: 0 0 -10px 10px;\n      }\n    }\n\n    .value {\n      margin-right: 40px;\n      @media only screen and (max-width: 992px) {\n        margin-left: 0;\n      }\n    }\n\n    .mate__list {\n      padding: 10px;\n\n      .col-md-6 {\n        margin-bottom: 10px;\n      }\n    }\n\n    .mate__options {\n      margin-bottom: 10px;\n    }\n\n    .mate__btn {\n      text-align: center;\n    }\n  }\n\n  .material {\n    &__button {\n      display: inline-block;\n      font-weight: 500;\n      margin: 5px 15px 15px 0;\n      padding: 10px;\n      color: #44a0e5;\n      border-radius: 4px;\n      border: 1px solid #44a0e5;\n    }\n\n    &__item {\n      position: relative;\n    }\n\n    @media only screen and (max-width: 992px) {\n      .col-md-2 {\n        margin: 10px 0;\n      }\n\n    }\n  }\n\n  .materials__table {\n    .material__table--item {\n      display: inline-block;\n      /*margin-right: 20px;*/\n      position: relative;\n    }\n\n    a {\n      position: absolute;\n      top: -5px;\n      left: -10px;\n      z-index: 99999;\n    }\n\n    font-size: 16px;\n    border-top: 1px solid #d8d8d8;\n    padding: 10px 25px;\n\n    .mate__input {\n      width: 5%;\n      float: left;\n    }\n\n    .mate__name {\n      width: 15%;\n      float: left;\n    }\n\n    .mate__cat {\n      width: 15%;\n      float: left;\n    }\n\n    .mate__unit {\n      width: 65%;\n      float: left;\n    }\n\n    @media only screen and (max-width: 992px) {\n      .mate__input {\n        width: 15%;\n      }\n\n      .mate__name {\n        width: 40%;\n      }\n\n      .mate__cat {\n        width: 40%;\n      }\n\n      .mate__unit {\n        width: 85%;\n        float: right;\n      }\n    }\n\n    input {\n      width: 20px;\n      height: 28px;\n      vertical-align: middle;\n      outline: none;\n    }\n  }\n\n  .menu__button {\n    width: 150px !important;\n    border-radius: 20px !important;\n    display: inline-block;\n    padding: 3px;\n    text-align: center;\n  }\n\n  .btn__delete {\n    position: absolute;\n    top: -100%;\n    left: -8%;\n    color: #ffffff;\n    background-color: red;\n    font-size: 14px;\n    text-align: center;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    padding: 1px 5px;\n  }\n\n  .unit__name {\n    width: 100%;\n    color: #151e5d;\n    padding: 5px;\n    font-weight: bold;\n    /*border-radius: 15px;*/\n    border: 1px solid #151e5d;\n    font-size: 14px\n  }\n\n  .value--input {\n    height: 33px !important;\n    border: 1px solid #e9ebf1;\n    outline: none;\n    width: 250px;\n    margin-left: 30px;\n    padding: 0 10px;\n    font-size: 16px;\n\n    @media only screen and (max-width: 424px) {\n      margin-left: 0;\n    }\n  }\n\n  .lable--input {\n    margin-bottom: 16px;\n    display: inline-block;\n    @media only screen and (max-width: 500px) {\n      margin-top: 15px;\n      margin-bottom: 5px;\n    }\n  }\n\n  @media only screen and (max-width: 500px) {\n    .menu__input .mate__btn {\n      margin-left: 12%;\n    }\n    .menu__input .mate__options {\n      margin-bottom: 30px;\n      margin-left: 15px;\n    }\n    .form-area select {\n      padding: 3px 15px !important;\n    }\n  }\n\n  .form-area {\n    margin-top: 20px;\n\n    .unit__title {\n      padding: 0;\n      margin-bottom: 10px;\n      font-weight: bold;\n    }\n\n    select {\n      padding: 5px 15px;\n      color: #151e5d;\n      font-weight: bold;\n      border: 1px solid #151e5d;\n      border-radius: 5px;\n      outline: none;\n    }\n  }\n\n  .material__title {\n    margin-bottom: 10px;\n    font-weight: bold;\n    font-size: 16px;\n  }\n\n  .nav {\n    padding: 5px;\n    margin-top: 20px;\n\n    .nav-item {\n      display: inline-block;\n      padding: 0 10px;\n\n      a {\n        color: #151e5d;\n        display: block;\n        padding-bottom: 5px;\n\n        &.active {\n          color: #000;\n          border-bottom: 3px solid #151e5d;\n        }\n      }\n    }\n  }\n\n  small {\n    color: red;\n    margin-left: 20px;\n  }\n\n</style>\n"]}]}