{"remainingRequest":"/home/quan/Documents/Projects/stock_analysis/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quan/Documents/Projects/stock_analysis/src/views/user/menu-detail/export.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quan/Documents/Projects/stock_analysis/src/views/user/menu-detail/export.vue","mtime":1615822194522},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport MenuApi from '@/services/menu'\nimport sortMethods from '@/utils/sort'\nimport PdfLayout from '@/views/layouts/pdf'\nimport { mapActions, mapGetters } from 'vuex'\nimport { SET_LOADING } from '@/store/types'\n\nexport default {\n  components: {\n    PdfLayout\n  },\n  data () {\n    return {\n      name: '',\n      note: '',\n      totalDishes: [],\n      sortedDishes: [],\n      currentIndex: 0,\n      perPage: 25,\n      heightSet: false,\n\n      //\n      pagesData: [],\n      flags: {\n        showTempList: true\n      },\n      emptyHeight: 0,\n      startIndex: [],\n      currentSort: ''\n    }\n  },\n  computed: {\n    ...mapGetters({\n      store: 'store',\n      company: 'company'\n    })\n  },\n  async mounted () {\n    // window.alert(this.getOS())\n    this.setLoading(true)\n    const currentMenu = await MenuApi.getDetails(this.$route.params.id)\n    const filterCate = this.$route.query.filter\n    this.totalDishes = currentMenu.dishes.filter(e => {\n      if (filterCate === 'すべて' || !filterCate.length) {\n        return true\n      } else {\n        return e.category === filterCate\n      }\n    })\n    this.totalDishes = this.$route.query.sort_by ? sortMethods.sort(this.totalDishes, this.$route.query.sort_by) : this.totalDishes\n    console.log(this.totalDishes)\n    this.name = currentMenu.name\n    this.note = currentMenu.note\n    this.startIndex[0] = 0\n    setTimeout(() => {\n      var tableHeight = this.$refs['subpage'].offsetHeight - (10 + 37.795275591 + 25 + 21 + 80)\n      var noteHeight = this.$refs.note.offsetHeight\n      // if (this.getOS() === 'iOS') {\n      //   noteHeight = this.$refs.note.offsetHeight * 0.7\n      // } else {\n      //   noteHeight = this.$refs.note.offsetHeight\n      // }\n\n      let totalTableHeight = 0\n      let currentPage = 0\n      let cutIndex = 0\n      if (this.totalDishes.length) {\n        const rowsHeight = this.$refs['dishes__list'].map(e => e.offsetHeight)\n        let page = [[]]\n        rowsHeight.forEach((height, index) => {\n          // window.alert('row height: ' + height)\n          if (totalTableHeight >= tableHeight) {\n            totalTableHeight = 0\n            currentPage = currentPage + 1\n            page[currentPage] = []\n            cutIndex += page[currentPage - 1].length\n            this.startIndex[currentPage] = cutIndex\n          }\n\n          page[currentPage].push(this.totalDishes[index])\n          if (this.getOS() === 'iOS') {\n            totalTableHeight += height * 0.65\n          } else {\n            totalTableHeight += height\n          }\n          // empty = tableHeight - this.$refs.note.offsetHeight - totalTableHeight\n        })\n        this.pagesData = page\n        let sum = rowsHeight.filter((e, i) => i >= cutIndex).reduce(function (a, b) {\n          return a + b\n        }, 0)\n        this.emptyHeight = tableHeight - noteHeight - sum\n        if (this.emptyHeight < 0) {\n          currentPage = currentPage + 1\n          this.pagesData.push([])\n          this.emptyHeight = tableHeight - noteHeight\n        }\n      } else {\n        this.pagesData = [[]]\n        this.emptyHeight = tableHeight - noteHeight\n      }\n      this.heightSet = true\n      // remove temp page\n      this.flags.showTempList = false\n      this.setLoading(false)\n    }, 200)\n  },\n  methods: {\n    ...mapActions({\n      setLoading: SET_LOADING\n    }),\n    dishesOfPage (currentPage) {\n      if (currentPage === this.totalPage) {\n        return this.totalDishes.slice((currentPage - 1) * 25, this.totalDishes.length - (currentPage - 1) * 25)\n      }\n      return this.totalDishes.slice((currentPage - 1) * 25, 25)\n    },\n    printWindow () {\n      window.print()\n    },\n    getOS () {\n      var userAgent = window.navigator.userAgent\n      var platform = window.navigator.platform\n      var macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K']\n      var windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE']\n      var iosPlatforms = ['iPhone', 'iPod']\n      var os = null\n\n      if (macosPlatforms.indexOf(platform) !== -1) {\n        os = 'Mac OS'\n      } else if (iosPlatforms.indexOf(platform) !== -1) {\n        os = 'iOS'\n      } else if (windowsPlatforms.indexOf(platform) !== -1) {\n        os = 'Windows'\n      } else if (/Android/.test(userAgent)) {\n        os = 'Android'\n      } else if (!os && /Linux/.test(platform)) {\n        os = 'Linux'\n      }\n\n      return os\n    }\n  }\n}\n",{"version":3,"sources":["export.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"export.vue","sourceRoot":"src/views/user/menu-detail","sourcesContent":["<template>\n  <pdf-layout>\n    <div>\n      <div class=\"page\" v-if=\"flags.showTempList\">\n        <div class=\"subpage\" ref=\"subpage\">\n          <div class=\"menu-title\">\n            <div class=\"fleft\">\n              <h5 class=\"name\">\n                {{ name }}\n              </h5>\n            </div>\n            <div class=\"fright\" style=\"font-size: 13px\">1/1</div>\n            <div class=\"clear\"></div>\n          </div>\n          <div class=\"table\" ref=\"table\">\n            <div class=\"table-content\">\n              <div class=\"table-header\" ref=\"table-header\">\n                <div class=\"tr\">\n                  <div class=\"td table-index\">#</div>\n                  <div class=\"td table-name\">割名</div>\n                  <div class=\"td table-material\">材料名</div>\n                </div>\n              </div>\n              <div class=\"table-body\" ref=\"table-body\">\n                <div ref=\"filled_list\">\n                  <div class=\"tr\"\n                       ref=\"dishes__list\"\n                       v-for=\"(dish, index) in totalDishes\"\n                       :key=\"`dish-${index}`\"\n                  >\n                    <div class=\"td table-index\"></div>\n                    <div class=\"td table-name\">{{ dish.name }}</div>\n                    <div class=\"td table-material\">\n                    <span\n                      v-for=\"(mat, matIndex) in dish.materials.map(\n                        e => `【${e.name}: ${e.value}${e.unit}】`\n                      )\"\n                      :key=\"`mat-${matIndex}`\"\n                      style=\"white-space: normal\"\n                    >\n                      {{ mat }}\n                    </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"note\" ref=\"note\">{{ note }}</div>\n          <div class=\"page_footer\">\n            <span style=\"margin-right: 10px\">{{ company.name }}</span>\n            <span>{{ store.name }}</span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"page\" v-for=\"(dishes, index) in pagesData\" :key=\"`page-${index}`\" :id=\"`page-${index}`\">\n        <div class=\"subpage\" ref=\"subpage\" :id=\"`subpage-${index}`\">\n          <div class=\"menu-title\">\n            <div class=\"fleft\">\n              <h5 class=\"name\">\n                {{ name }}\n              </h5>\n            </div>\n            <div class=\"fright\" style=\"font-size: 13px\">\n              {{ index + 1 }}/{{ pagesData.length }}\n            </div>\n            <div class=\"clear\"></div>\n          </div>\n          <div class=\"table\" ref=\"table\">\n            <div class=\"table-content\">\n              <div class=\"table-header\" ref=\"table-header\">\n                <div class=\"tr\">\n                  <div class=\"td table-index\">#</div>\n                  <div class=\"td table-name\">割名</div>\n                  <div class=\"td table-material\">\n                    <div class=\"tr-border\"></div>\n                    材料名\n                  </div>\n                </div>\n              </div>\n              <div class=\"table-body\" ref=\"table-body\">\n                <div ref=\"filled_list\">\n                  <div class=\"tr\"\n                       ref=\"dishes__list\"\n                       v-for=\"(dish, rowIndex) in dishes\"\n                       :key=\"`dish-${rowIndex}`\"\n                  >\n                    <div class=\"td table-index\">{{ rowIndex + 1 + startIndex[index] }}</div>\n                    <div class=\"td table-name\">{{ dish.name }}</div>\n                    <div class=\"td table-material\">\n                      <div class=\"tr-border\">\n                      </div>\n                    <span\n                      v-for=\"(mat, matIndex) in dish.materials.map(\n                        e => `【${e.name}: ${e.value}${e.unit}】`\n                      )\"\n                      :key=\"`mat-${matIndex}`\"\n                      style=\"white-space: normal\"\n                    >\n                      {{ mat }}\n                    </span>\n                    </div>\n                  </div>\n                </div>\n                <div ref=\"empty_list\" v-if=\"index === pagesData.length - 1\">\n                  <div v-if=\"heightSet\">\n                    <div class=\"tr\"\n                         :key=\"rowIndex\"\n                         v-for=\"rowIndex in (emptyHeight > 0 ? Number.parseInt(emptyHeight/30) : [])\"\n                    >\n                      <div class=\"td table-index\">\n                        {{ rowIndex + totalDishes.length }}\n                      </div>\n                      <div class=\"td table-name\"></div>\n                      <div class=\"td table-material\">\n                        <div class=\"tr-border\"></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"note\" ref=\"note\" v-if=\"index === pagesData.length - 1\">{{ note }}</div>\n          <div class=\"page_footer\">\n            <span style=\"margin-right: 10px\">{{ company.name }}</span>\n            <span>{{ store.name }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </pdf-layout>\n</template>\n\n<script>\nimport MenuApi from '@/services/menu'\nimport sortMethods from '@/utils/sort'\nimport PdfLayout from '@/views/layouts/pdf'\nimport { mapActions, mapGetters } from 'vuex'\nimport { SET_LOADING } from '@/store/types'\n\nexport default {\n  components: {\n    PdfLayout\n  },\n  data () {\n    return {\n      name: '',\n      note: '',\n      totalDishes: [],\n      sortedDishes: [],\n      currentIndex: 0,\n      perPage: 25,\n      heightSet: false,\n\n      //\n      pagesData: [],\n      flags: {\n        showTempList: true\n      },\n      emptyHeight: 0,\n      startIndex: [],\n      currentSort: ''\n    }\n  },\n  computed: {\n    ...mapGetters({\n      store: 'store',\n      company: 'company'\n    })\n  },\n  async mounted () {\n    // window.alert(this.getOS())\n    this.setLoading(true)\n    const currentMenu = await MenuApi.getDetails(this.$route.params.id)\n    const filterCate = this.$route.query.filter\n    this.totalDishes = currentMenu.dishes.filter(e => {\n      if (filterCate === 'すべて' || !filterCate.length) {\n        return true\n      } else {\n        return e.category === filterCate\n      }\n    })\n    this.totalDishes = this.$route.query.sort_by ? sortMethods.sort(this.totalDishes, this.$route.query.sort_by) : this.totalDishes\n    console.log(this.totalDishes)\n    this.name = currentMenu.name\n    this.note = currentMenu.note\n    this.startIndex[0] = 0\n    setTimeout(() => {\n      var tableHeight = this.$refs['subpage'].offsetHeight - (10 + 37.795275591 + 25 + 21 + 80)\n      var noteHeight = this.$refs.note.offsetHeight\n      // if (this.getOS() === 'iOS') {\n      //   noteHeight = this.$refs.note.offsetHeight * 0.7\n      // } else {\n      //   noteHeight = this.$refs.note.offsetHeight\n      // }\n\n      let totalTableHeight = 0\n      let currentPage = 0\n      let cutIndex = 0\n      if (this.totalDishes.length) {\n        const rowsHeight = this.$refs['dishes__list'].map(e => e.offsetHeight)\n        let page = [[]]\n        rowsHeight.forEach((height, index) => {\n          // window.alert('row height: ' + height)\n          if (totalTableHeight >= tableHeight) {\n            totalTableHeight = 0\n            currentPage = currentPage + 1\n            page[currentPage] = []\n            cutIndex += page[currentPage - 1].length\n            this.startIndex[currentPage] = cutIndex\n          }\n\n          page[currentPage].push(this.totalDishes[index])\n          if (this.getOS() === 'iOS') {\n            totalTableHeight += height * 0.65\n          } else {\n            totalTableHeight += height\n          }\n          // empty = tableHeight - this.$refs.note.offsetHeight - totalTableHeight\n        })\n        this.pagesData = page\n        let sum = rowsHeight.filter((e, i) => i >= cutIndex).reduce(function (a, b) {\n          return a + b\n        }, 0)\n        this.emptyHeight = tableHeight - noteHeight - sum\n        if (this.emptyHeight < 0) {\n          currentPage = currentPage + 1\n          this.pagesData.push([])\n          this.emptyHeight = tableHeight - noteHeight\n        }\n      } else {\n        this.pagesData = [[]]\n        this.emptyHeight = tableHeight - noteHeight\n      }\n      this.heightSet = true\n      // remove temp page\n      this.flags.showTempList = false\n      this.setLoading(false)\n    }, 200)\n  },\n  methods: {\n    ...mapActions({\n      setLoading: SET_LOADING\n    }),\n    dishesOfPage (currentPage) {\n      if (currentPage === this.totalPage) {\n        return this.totalDishes.slice((currentPage - 1) * 25, this.totalDishes.length - (currentPage - 1) * 25)\n      }\n      return this.totalDishes.slice((currentPage - 1) * 25, 25)\n    },\n    printWindow () {\n      window.print()\n    },\n    getOS () {\n      var userAgent = window.navigator.userAgent\n      var platform = window.navigator.platform\n      var macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K']\n      var windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE']\n      var iosPlatforms = ['iPhone', 'iPod']\n      var os = null\n\n      if (macosPlatforms.indexOf(platform) !== -1) {\n        os = 'Mac OS'\n      } else if (iosPlatforms.indexOf(platform) !== -1) {\n        os = 'iOS'\n      } else if (windowsPlatforms.indexOf(platform) !== -1) {\n        os = 'Windows'\n      } else if (/Android/.test(userAgent)) {\n        os = 'Android'\n      } else if (!os && /Linux/.test(platform)) {\n        os = 'Linux'\n      }\n\n      return os\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.red {\n  color: red;\n}\n\n.menu-title {\n  margin-top: 10px;\n}\n\n.name {\n  padding: 0;\n  margin: 0;\n  font-size: 17px;\n}\n\n.page_footer {\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n}\n\n.table {\n  margin-top: 25px;\n  font-size: 11px;\n  width: 100%;\n  border: none;\n  border-collapse: collapse;\n\n  caption {\n    padding-bottom: 0.5em;\n  }\n\n  .th,\n  .td {\n    padding: 6px;\n    display: inline-block;\n  }\n\n  .tr {\n    height: auto;\n    min-height: 30px;\n    border-bottom: 2px solid #dcdcdc;\n    position: relative;\n\n    &-border {\n      position: absolute;\n      width: 150px;\n      height: 100%;\n      border-left: 1px solid #c5c5c5;\n      border-right: 1px solid #c5c5c5;\n      top: 0px;\n      left: 30px;\n    }\n  }\n\n  .td {\n    white-space: nowrap;\n    vertical-align: top;\n    height: 100%;\n  }\n\n  .th {\n    padding: 3.2px;\n    vertical-align: middle;\n    text-align: center;\n  }\n\n  &-header {\n    border-bottom: 2px solid #dcdcdc;\n\n    .th {\n      border-top: none;\n    }\n  }\n\n  &-content {\n    height: 100%;\n  }\n\n  &-index {\n    width: 30px\n  }\n\n  &-name {\n    width: 150px\n  }\n\n  &-material {\n    width: 488px\n  }\n}\n\n.note {\n  min-height: 149px;\n  background-color: #efefef;\n  font-size: 13px;\n  padding: 10px;\n  border-top: 1px solid #dcdcdc;\n  white-space: pre-wrap;\n}\n\n</style>\n"]}]}