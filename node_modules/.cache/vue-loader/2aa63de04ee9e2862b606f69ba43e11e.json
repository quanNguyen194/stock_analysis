{"remainingRequest":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quan/Documents/Projects/django-vue/frontend_test/src/views/user/setting/tabs/setting-material.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/src/views/user/setting/tabs/setting-material.vue","mtime":1615822194522},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { materialUnits } from '@/constants/material'\nimport Button from '@/components/partials/button'\nimport { mapActions, mapGetters } from 'vuex'\nimport UnitsApi from '../../../../services/setting'\nimport { SET_LOADING, UPDATE_STORE_UNITS } from '../../../../store/types'\nimport Message from '../../../../components/partials/message'\n\nexport default {\n  name: 'setting-material',\n  components: {\n    Button,\n    Message\n  },\n  computed: {\n    ...mapGetters({\n      store: 'store',\n      isLoading: 'isLoading'\n    })\n  },\n  data () {\n    return {\n      isShowMess: false,\n      notifications: {\n        status: true,\n        show: false,\n        content: ''\n      },\n      units: materialUnits,\n      checkedUnits: []\n    }\n  },\n  mounted () {\n    this.setLoading(true)\n    setTimeout(() => {\n      this.checkedUnits = this.store.units\n      this.setLoading(false)\n    }, 400)\n  },\n  methods: {\n    ...mapActions({\n      setLoading: SET_LOADING,\n      updateStoreUnits: UPDATE_STORE_UNITS\n    }),\n    async updateToUnit () {\n      this.setLoading(true)\n      const res = await UnitsApi.updateUnit(this.checkedUnits.filter((item) => this.units.includes(item)))\n      if (res) {\n        this.toggleMessage(true, '更新されました。')\n        setTimeout(() => {\n          this.notifications.show = false\n        }, 3000)\n      }\n      this.updateStoreUnits(this.checkedUnits)\n      this.setLoading(false)\n    },\n    toggleMessage (status, content) {\n      this.notifications.status = status\n      this.notifications.content = content\n      this.notifications.show = true\n    }\n  }\n}\n",{"version":3,"sources":["setting-material.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"setting-material.vue","sourceRoot":"src/views/user/setting/tabs","sourcesContent":["<template>\n  <div>\n    <div>\n      <Message :success=\"notifications.status\" v-if=\"notifications.show\" :close=\"true\">\n        {{ this.notifications.content }}\n      </Message>\n    </div>\n    <div class=\"setting-material\" v-if=\"!isLoading\">\n      <div class=\"tab-content\">\n        <div class=\"tab-title\">\n          よく使う単位を選んでください\n        </div>\n        <div class=\"form-area\" v-if=\"!isLoading\">\n          <div class=\"input-item\" v-for=\"unit in units\" :key=\"unit\">\n            <input type=\"checkbox\" name=\"unit\" v-model=\"checkedUnits\" :value=\"unit\" :id=\"unit\">\n            <label :for=\"unit\">{{ unit }}</label>\n          </div>\n        </div>\n      </div>\n      <div class=\"button-submit mt-25\">\n        <Button :click=\"updateToUnit\" width=\"206px\" height=\"46px\" padding=\"5px\">保存する</Button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { materialUnits } from '@/constants/material'\nimport Button from '@/components/partials/button'\nimport { mapActions, mapGetters } from 'vuex'\nimport UnitsApi from '../../../../services/setting'\nimport { SET_LOADING, UPDATE_STORE_UNITS } from '../../../../store/types'\nimport Message from '../../../../components/partials/message'\n\nexport default {\n  name: 'setting-material',\n  components: {\n    Button,\n    Message\n  },\n  computed: {\n    ...mapGetters({\n      store: 'store',\n      isLoading: 'isLoading'\n    })\n  },\n  data () {\n    return {\n      isShowMess: false,\n      notifications: {\n        status: true,\n        show: false,\n        content: ''\n      },\n      units: materialUnits,\n      checkedUnits: []\n    }\n  },\n  mounted () {\n    this.setLoading(true)\n    setTimeout(() => {\n      this.checkedUnits = this.store.units\n      this.setLoading(false)\n    }, 400)\n  },\n  methods: {\n    ...mapActions({\n      setLoading: SET_LOADING,\n      updateStoreUnits: UPDATE_STORE_UNITS\n    }),\n    async updateToUnit () {\n      this.setLoading(true)\n      const res = await UnitsApi.updateUnit(this.checkedUnits.filter((item) => this.units.includes(item)))\n      if (res) {\n        this.toggleMessage(true, '更新されました。')\n        setTimeout(() => {\n          this.notifications.show = false\n        }, 3000)\n      }\n      this.updateStoreUnits(this.checkedUnits)\n      this.setLoading(false)\n    },\n    toggleMessage (status, content) {\n      this.notifications.status = status\n      this.notifications.content = content\n      this.notifications.show = true\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.mt-25 {\n  margin-top: 25px !important;\n}\n\n.button-submit {\n  width: 206px;\n  margin: auto;\n}\n\n.setting-material {\n  color: #151e5d;\n  margin-bottom: 55px;\n}\n\n.tab-content {\n  padding: 20px;\n  background-color: #fff;\n}\n\n.tab-title {\n  font-size: 24px;\n  font-weight: 500;\n}\n\n.form-area {\n  margin-top: 20px;\n\n  .input-item {\n    display: inline-block;\n    font-size: 14px;\n    font-weight: 600;\n    margin: 8px 12px 8px 0;\n    width: 75px;\n  }\n\n  label {\n    margin: 0 5px;\n    font-family: none;\n  }\n}\n\n.page {\n  &-message {\n    padding: 20px 0 -10px;\n    @media only screen and (max-width: 767px) {\n      width: 99% !important;\n    }\n  }\n}\n\n</style>\n"]}]}