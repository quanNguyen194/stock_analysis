{"remainingRequest":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quan/Documents/Projects/django-vue/frontend_test/src/components/partials/textbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/src/components/partials/textbox.vue","mtime":1615822194522},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n  name: 'TextBox',\n  props: {\n    name: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    type: {\n      type: String,\n      default: ''\n    },\n    maxLength: {\n      type: Number,\n      required: false\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    autocomplete: {\n      type: String,\n      default: 'off'\n    },\n    readonly: {\n      type: String\n    },\n    keyup: {\n      type: Function\n    },\n    click: {\n      type: Function\n    }\n  },\n  data () {\n    return {\n      localValue: ''\n    }\n  },\n  watch: {\n    localValue (value) {\n      this.$emit('input', value)\n    }\n  },\n  methods: {\n    onKeyUp (evt) {\n      if (this.keyup) {\n        this.keyup(evt)\n      }\n    },\n    onClick (evt) {\n      if (this.click) {\n        this.click(evt.target.value)\n      }\n    }\n  },\n  mounted () {\n    this.localValue = this.value\n  }\n}\n",{"version":3,"sources":["textbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"textbox.vue","sourceRoot":"src/components/partials","sourcesContent":["<template>\n  <div class=\"textbox__container\">\n    <input\n      v-model=\"localValue\"\n      :name=\"name\"\n      :placeholder=\"placeholder\"\n      :autocomplete=\"autocomplete\"\n      :maxlength=\"maxLength\"\n      :value=\"value\"\n      :disabled=\"disabled\"\n      :readonly=\"readonly\"\n      :type=\"type\"\n      @keyup=\"onKeyUp\"\n      @click=\"onClick\"\n      @blur=\"$emit('onBlur')\"\n    />\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'TextBox',\n  props: {\n    name: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    type: {\n      type: String,\n      default: ''\n    },\n    maxLength: {\n      type: Number,\n      required: false\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    autocomplete: {\n      type: String,\n      default: 'off'\n    },\n    readonly: {\n      type: String\n    },\n    keyup: {\n      type: Function\n    },\n    click: {\n      type: Function\n    }\n  },\n  data () {\n    return {\n      localValue: ''\n    }\n  },\n  watch: {\n    localValue (value) {\n      this.$emit('input', value)\n    }\n  },\n  methods: {\n    onKeyUp (evt) {\n      if (this.keyup) {\n        this.keyup(evt)\n      }\n    },\n    onClick (evt) {\n      if (this.click) {\n        this.click(evt.target.value)\n      }\n    }\n  },\n  mounted () {\n    this.localValue = this.value\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .textbox__container {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    border: 1px solid #e9ebf1;\n    background: #fff;\n    box-sizing: border-box;\n\n    input {\n      box-sizing: border-box;\n      padding-left: 16px;\n      min-width: 100%;\n      max-width: 100%;\n      min-height: 100%;\n      max-height: 100%;\n      line-height: 2.5;\n      outline: 0;\n      border: 0;\n      font-size: 16px;\n\n      &::placeholder {\n        color: #9aa8bd;\n      }\n    }\n  }\n</style>\n"]}]}