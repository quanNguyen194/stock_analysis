{"remainingRequest":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quan/Documents/Projects/django-vue/frontend_test/src/views/user/setting/add-user.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/src/views/user/setting/add-user.vue","mtime":1615822194522},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DefaultLayout from '@/views/layouts/default-layout'\nimport TextBox from '@/components/partials/textbox'\nimport Button from '@/components/partials/button'\nimport Message from '@/components/partials/message'\nimport SettingApi from '@/services/setting'\nimport { SET_LOADING } from '@/store/types'\nimport { mapActions } from 'vuex'\n\nexport default {\n  name: 'add-user-page',\n  components: {\n    DefaultLayout,\n    TextBox,\n    Button,\n    Message\n  },\n  data () {\n    return {\n      isLoading: true,\n      errors: {\n        name: '',\n        name_kana: '',\n        email: '',\n        phone: '',\n        password: '',\n        company: ''\n      },\n      form: {\n        phone: '',\n        name: '',\n        name_kana: '',\n        email: '',\n        password: '',\n        company: ''\n      },\n      messages: {\n        'email_or_phone_already_exists': 'メールアドレスまたは電話番号はすでに存在します。',\n        'max_of_users': 'ユーザー数が制限に達しました。',\n        'store_not_found': 'ストアが見つかりません。',\n        'add_user_successfully': 'ユーザーを正常に追加。',\n        'update_user_successfully': 'ユーザーの情報が更新されました。'\n      },\n      notifications: {\n        status: true,\n        show: false,\n        content: ''\n      }\n    }\n  },\n  async mounted () {\n    if (this.$route.params.id) {\n      const currentUser = await SettingApi.getUsers(this.$route.params.id)\n      this.form = currentUser.data.user\n    }\n    this.isLoading = false\n  },\n  methods: {\n    ...mapActions({\n      setLoading: SET_LOADING\n    }),\n    onKeyUp (e) {\n      console.log(e)\n      if (e.key === 'Enter') {\n        this.onSave()\n      }\n    },\n    async onSave () {\n      let canSave = true\n      if (!this.form.phone) {\n        this.errors.phone = 'この項目は必須です。'\n        canSave = false\n      } else if (!(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s/./0-9]*$/.test(this.form.phone))) {\n        this.errors.phone = '無効な電話番号'\n        canSave = false\n      } else {\n        this.errors.phone = ''\n      }\n      if (!this.form.name) {\n        this.errors.name = 'この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.name = ''\n      }\n\n      if (!this.form.name_kana) {\n        this.errors.name_kana = 'この項目は必須です'\n        canSave = false\n      } else {\n        this.errors.name_kana = ''\n      }\n\n      if (!this.$route.params.id) {\n        if (!this.form.password) {\n          this.errors.password = 'この項目は必須です'\n          canSave = false\n        } else {\n          this.errors.password = ''\n        }\n      } else {\n        this.errors.password = ''\n      }\n\n      if (!this.form.email) {\n        this.errors.email = 'この項目は必須です'\n        canSave = false\n      } else if (!(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(this.form.email))) {\n        this.errors.email = '無効な形式！ このフィールドは電子メールである必要があります。'\n        canSave = false\n      } else {\n        this.errors.email = ''\n      }\n\n      if (!canSave) {\n        return\n      }\n      this.setLoading(true)\n      let res\n      // this.$store.dispatch(SET_LOADING, true)\n      if (!this.$route.params.id) {\n        res = await SettingApi.addUser({\n          phone: this.form.phone,\n          name: this.form.name,\n          name_kana: this.form.name_kana,\n          email: this.form.email.toLowerCase().trim(),\n          password: this.form.password\n        })\n      } else {\n        res = await SettingApi.updateUser(this.$route.params.id, {\n          phone: this.form.phone,\n          name: this.form.name,\n          name_kana: this.form.name_kana,\n          email: this.form.email.toLowerCase().trim(),\n          password: this.form.password\n        })\n      }\n\n      this.$store.dispatch(SET_LOADING, false)\n      this.setLoading(false)\n      this.notifications.status = res.status\n\n      if (res.status) {\n        // Get and show message\n        this.notifications.content = this.messages[res.message]\n        this.notifications.show = true\n\n        if (!this.$route.params.id) {\n          this.$router.push('/setting')\n        }\n      } else {\n        this.notifications.content = this.messages[res.error]\n        this.notifications.show = true\n      }\n    }\n  }\n}\n",{"version":3,"sources":["add-user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"add-user.vue","sourceRoot":"src/views/user/setting","sourcesContent":["<template>\n  <default-layout>\n    <div class=\"add-user\" v-if=\"!isLoading\">\n      <div class=\"page-return\">\n        <router-link :to=\"{name: 'setting'}\"><i class=\"fas fa-arrow-left\" style=\"margin-right:8px\"/>従業員一覧へ戻る\n        </router-link>\n      </div>\n      <h1 class=\"page-title\">従業員情報登録</h1>\n      <Message :success=notifications.status v-if=\"notifications.show\" :close=\"true\">\n        {{ this.notifications.content }}\n      </Message>\n<!--------------------------------------------------------PHONE-------------------------------------------------------->\n      <form autocomplete=\"off\">\n        <div class=\"form__area\">\n          <div class=\"form__item\">\n            <div class=\"form__title\">\n              電話番号 <span class=\"notice\">必須</span>\n            </div>\n            <div class=\"form__input\">\n              <TextBox\n                type=\"text\"\n                v-model=\"form.phone\"\n                placeholder=\"例：09012341234\"\n                :keyup=\"onKeyUp\"\n              />\n              <span class=\"error-message\" v-if=\"errors.phone.length\">{{ errors.phone }}</span>\n            </div>\n          </div>\n<!--------------------------------------------------------NAME--------------------------------------------------------->\n          <div class=\"form__item\">\n            <div class=\"form__title\">\n              氏名 <span class=\"notice\">必須</span>\n            </div>\n            <div class=\"form__input\">\n              <TextBox\n                type=\"text\"\n                v-model=\"form.name\"\n                name=\"full_name\"\n                placeholder=\"例：鈴木 太郎\"\n                autocomplete=\"off\"\n                :keyup=\"onKeyUp\"\n              />\n              <span class=\"error-message\" v-if=\"errors.name.length\">{{ errors.name }}</span>\n            </div>\n          </div>\n<!------------------------------------------------------NAME_KANA------------------------------------------------------>\n          <div class=\"form__item\">\n            <div class=\"form__title\">\n              氏名(カナ) <span class=\"notice\">必須</span>\n            </div>\n            <div class=\"form__input\">\n              <TextBox\n                type=\"text\"\n                v-model=\"form.name_kana\"\n                placeholder=\"例：スズキ タロウ\"\n                autocomplete=\"false\"\n                :keyup=\"onKeyUp\"\n              />\n              <span class=\"error-message\" v-if=\"errors.name_kana.length\">{{ errors.name_kana }}</span>\n            </div>\n          </div>\n<!------------------------------------------------------PASSWORD------------------------------------------------------->\n          <div class=\"form__item\">\n            <div class=\"form__title\">\n              パスワード <span class=\"notice\">{{!$route.params.id?'必須':''}}</span>\n            </div>\n            <div class=\"form__input\">\n              <TextBox\n                type=\"password\"\n                v-model=\"form.password\"\n                name=\"user_password\"\n                placeholder=\"パスワード\"\n                autocomplete=\"new-password\"\n                :keyup=\"onKeyUp\"\n              />\n              <span class=\"error-message\" v-if=\"errors.password.length\">{{ errors.password }}</span>\n            </div>\n          </div>\n\n<!--------------------------------------------------------EMAIL-------------------------------------------------------->\n          <div class=\"form__item\">\n            <div class=\"form__title\">\n              メールアドレス <span class=\"notice\">必須</span>\n            </div>\n            <div class=\"form__input\">\n              <TextBox\n                type=\"text\"\n                v-model=\"form.email\"\n                placeholder=\"例：abcdeft@mail.com\"\n                :keyup=\"onKeyUp\"\n\n              />\n              <span class=\"error-message\" v-if=\"errors.email.length\">{{ errors.email }}</span>\n            </div>\n          </div>\n\n        </div>\n      </form>\n      <div class=\"button-submit\">\n        <Button :click=\"onSave\" width=\"206px\" height=\"46px\" padding=\"5px\">保存する</Button>\n      </div>\n    </div>\n  </default-layout>\n</template>\n\n<script>\nimport DefaultLayout from '@/views/layouts/default-layout'\nimport TextBox from '@/components/partials/textbox'\nimport Button from '@/components/partials/button'\nimport Message from '@/components/partials/message'\nimport SettingApi from '@/services/setting'\nimport { SET_LOADING } from '@/store/types'\nimport { mapActions } from 'vuex'\n\nexport default {\n  name: 'add-user-page',\n  components: {\n    DefaultLayout,\n    TextBox,\n    Button,\n    Message\n  },\n  data () {\n    return {\n      isLoading: true,\n      errors: {\n        name: '',\n        name_kana: '',\n        email: '',\n        phone: '',\n        password: '',\n        company: ''\n      },\n      form: {\n        phone: '',\n        name: '',\n        name_kana: '',\n        email: '',\n        password: '',\n        company: ''\n      },\n      messages: {\n        'email_or_phone_already_exists': 'メールアドレスまたは電話番号はすでに存在します。',\n        'max_of_users': 'ユーザー数が制限に達しました。',\n        'store_not_found': 'ストアが見つかりません。',\n        'add_user_successfully': 'ユーザーを正常に追加。',\n        'update_user_successfully': 'ユーザーの情報が更新されました。'\n      },\n      notifications: {\n        status: true,\n        show: false,\n        content: ''\n      }\n    }\n  },\n  async mounted () {\n    if (this.$route.params.id) {\n      const currentUser = await SettingApi.getUsers(this.$route.params.id)\n      this.form = currentUser.data.user\n    }\n    this.isLoading = false\n  },\n  methods: {\n    ...mapActions({\n      setLoading: SET_LOADING\n    }),\n    onKeyUp (e) {\n      console.log(e)\n      if (e.key === 'Enter') {\n        this.onSave()\n      }\n    },\n    async onSave () {\n      let canSave = true\n      if (!this.form.phone) {\n        this.errors.phone = 'この項目は必須です。'\n        canSave = false\n      } else if (!(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s/./0-9]*$/.test(this.form.phone))) {\n        this.errors.phone = '無効な電話番号'\n        canSave = false\n      } else {\n        this.errors.phone = ''\n      }\n      if (!this.form.name) {\n        this.errors.name = 'この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.name = ''\n      }\n\n      if (!this.form.name_kana) {\n        this.errors.name_kana = 'この項目は必須です'\n        canSave = false\n      } else {\n        this.errors.name_kana = ''\n      }\n\n      if (!this.$route.params.id) {\n        if (!this.form.password) {\n          this.errors.password = 'この項目は必須です'\n          canSave = false\n        } else {\n          this.errors.password = ''\n        }\n      } else {\n        this.errors.password = ''\n      }\n\n      if (!this.form.email) {\n        this.errors.email = 'この項目は必須です'\n        canSave = false\n      } else if (!(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(this.form.email))) {\n        this.errors.email = '無効な形式！ このフィールドは電子メールである必要があります。'\n        canSave = false\n      } else {\n        this.errors.email = ''\n      }\n\n      if (!canSave) {\n        return\n      }\n      this.setLoading(true)\n      let res\n      // this.$store.dispatch(SET_LOADING, true)\n      if (!this.$route.params.id) {\n        res = await SettingApi.addUser({\n          phone: this.form.phone,\n          name: this.form.name,\n          name_kana: this.form.name_kana,\n          email: this.form.email.toLowerCase().trim(),\n          password: this.form.password\n        })\n      } else {\n        res = await SettingApi.updateUser(this.$route.params.id, {\n          phone: this.form.phone,\n          name: this.form.name,\n          name_kana: this.form.name_kana,\n          email: this.form.email.toLowerCase().trim(),\n          password: this.form.password\n        })\n      }\n\n      this.$store.dispatch(SET_LOADING, false)\n      this.setLoading(false)\n      this.notifications.status = res.status\n\n      if (res.status) {\n        // Get and show message\n        this.notifications.content = this.messages[res.message]\n        this.notifications.show = true\n\n        if (!this.$route.params.id) {\n          this.$router.push('/setting')\n        }\n      } else {\n        this.notifications.content = this.messages[res.error]\n        this.notifications.show = true\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n.add-user {\n  margin-bottom: 60px;\n}\n\n.page {\n  &-return {\n    position: relative;\n    margin-bottom: 16px;\n\n    a {\n      color: #44a0e5;\n      text-decoration: underline;\n      transition: all 0.5s ease-out;\n      font-size: 14px;\n    }\n  }\n\n  &-title {\n    color: #24374e;\n    font-size: 24px;\n    border-left: 4px solid #24387c;\n    padding: 8px 24px;\n    margin-bottom: 25px;\n  }\n}\n\n.form {\n  &__area {\n    margin-top: 25px;\n    margin-bottom: 30px;\n\n    .notice {\n      color: #ff001f;\n      font-size: 12px;\n    }\n  }\n\n  &__item {\n    background-color: #fff;\n    border-top: 1px solid #efefef;\n    padding: 20px;\n    border-bottom: 1px solid #efefef;\n\n    &:first-child {\n      border-top: 1px solid #efefef;\n    }\n  }\n\n  &__title {\n    color: #151e5d;\n    width: 220px;\n    font-size: 16px;\n    font-weight: 600;\n    display: inline-block;\n    vertical-align: top;\n  }\n\n  &__input {\n    width: 326px;\n    font-size: 14px;\n    display: inline-block;\n  }\n}\n\n.button-submit {\n  width: 206px;\n  margin: auto;\n}\n\n.error-message {\n  color: red;\n}\n\n//------------------------------------------------------RESPONSIVE------------------------------------------------------\n@media (max-width: 539px) {\n  .form {\n    &__input {\n      width: 100%;\n    }\n  }\n}\n</style>\n"]}]}