{"remainingRequest":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quan/Documents/Projects/django-vue/frontend_test/src/views/user/setting/tabs/setting-profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/src/views/user/setting/tabs/setting-profile.vue","mtime":1615822194522},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TextBox from '../../../../components/partials/textbox'\nimport Button from '../../../../components/partials/button'\nimport Modal from '../../../../components/partials/modal'\nimport SettingApi from '../../../../services/setting'\nimport Message from '@/components/partials/message'\nimport { SET_LOADING } from '../../../../store/types'\nimport { mapActions, mapGetters } from 'vuex'\nimport { API_URL } from '../../../../constants/api'\n\nexport default {\n  name: 'setting-profile',\n  components: {\n    TextBox,\n    Button,\n    Modal,\n    Message\n  },\n  computed: {\n    ...mapGetters({\n      profile: 'user',\n      company: 'company',\n      store: 'store',\n      isLoading: 'isLoading'\n    })\n  },\n  data () {\n    return {\n      errors: {\n        name: '',\n        name_kana: '',\n        email: '',\n        password: '',\n        phone: ''\n      },\n      form: {\n        avatar: '',\n        avatar_url: '',\n        name: '',\n        name_kana: '',\n        email: '',\n        phone: '',\n        company: ''\n      },\n      password: {\n        current: '',\n        new: '',\n        confirm: ''\n      },\n      visible: false,\n      notifications: {\n        status: true,\n        show: false,\n        content: ''\n      }\n    }\n  },\n  beforeMount () {\n    this.setLoading(true)\n    this.form = this.profile\n    this.form.avatar_url = !this.form.avatar_url ? API_URL + '/' + this.profile.avatar : this.form.avatar_url\n    this.setLoading(false)\n  },\n  methods: {\n    ...mapActions({\n      setLoading: SET_LOADING\n    }),\n    onKeyUp (e) {\n      if (e.key === 'Enter') {\n        this.savePassword()\n      }\n      if (e.key === 'Escape') {\n        this.toggleVisible()\n      }\n    },\n    async onSave () {\n      let canSave = true\n      let formData = new FormData()\n      // validate form\n      if (!this.form.name) {\n        this.errors.name = 'この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.name = ''\n      }\n\n      if (!this.form.email) {\n        this.errors.email = 'この項目は必須です。'\n        canSave = false\n      } else if (!(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(this.form.email))) {\n        this.errors.email = '無効な形式！ このフィールドは電子メールである必要があります。'\n        canSave = false\n      } else {\n        this.errors.email = ''\n      }\n\n      if (!this.form.name_kana) {\n        this.errors.name_kana = 'この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.name_kana = ''\n      }\n\n      if (!canSave) {\n        return\n      }\n      // call api\n      this.$store.dispatch(SET_LOADING, true)\n\n      if (this.form.avatar) {\n        formData.append('avatar', this.form.avatar)\n      }\n      formData.append('name', this.form.name)\n      formData.append('name_kana', this.form.name_kana)\n      formData.append('phone', this.form.phone)\n      formData.append('company', this.form.company)\n      formData.append('email', this.form.email)\n\n      // eslint-disable-next-line no-unused-vars\n      const res = await SettingApi.updateProfile(formData)\n      this.$store.dispatch(SET_LOADING, false)\n      // disable loading\n      if (res.status) {\n        this.toggleMessage(true, 'プロフィール情報が変更されました。')\n        this.form.avatar_url = API_URL + '/' + res.data.user.avatar\n        console.log(this.form)\n      }\n    },\n\n    async savePassword () {\n      let canSave = true\n      if (!this.password.current || !this.password.new || !this.password.confirm) {\n        this.errors.password = '全ての項目を埋めてください。'\n        canSave = false\n      } else if (this.password.confirm !== this.password.new) {\n        this.errors.password = '確認したパスワードが一致しません。もう一度確認してください。'\n        canSave = false\n      } else {\n        this.errors.password = ''\n      }\n\n      if (!canSave) {\n        return\n      }\n      // Call API\n\n      // Enable Loading\n      this.$store.dispatch(SET_LOADING, true)\n\n      try {\n        const res = await SettingApi.changePassword({\n          old_password: this.password.current,\n          new_password: this.password.new\n        })\n        if (res.status) {\n          this.toggleVisible()\n          this.toggleMessage(true, 'パスワードが変更されました。')\n        }\n      } catch (e) {\n        this.errors.password = 'パスワードが正しくありません。もう一度やり直してください。'\n      }\n\n      // Disable loading\n      this.$store.dispatch(SET_LOADING, false)\n    },\n\n    toggleVisible () {\n      this.visible = !this.visible\n    },\n\n    toggleMessage (status, content) {\n      this.notifications.status = status\n      this.notifications.content = content\n      this.notifications.show = true\n    },\n\n    onFileChange (e) {\n      const file = e.target.files[0]\n      this.form.avatar = file\n      this.form.avatar_url = URL.createObjectURL(file)\n    }\n  }\n}\n",{"version":3,"sources":["setting-profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"setting-profile.vue","sourceRoot":"src/views/user/setting/tabs","sourcesContent":["<template>\n  <div class=\"setting-profile\" v-if=\"!isLoading\">\n    <Message :success=\"notifications.status\" v-if=\"notifications.show\" :close=\"true\">\n      {{ this.notifications.content }}\n    </Message>\n<!---------------------------------------------------------NAME--------------------------------------------------------->\n    <div class=\"setting-profile-edit\">\n      <div class=\"setting-profile__title \">\n        氏名\n      </div>\n      <div class=\"setting-profile__input \">\n        <TextBox\n          type=\"text\"\n          v-model=\"form.name\"\n          placeholder=\"テストユーザー\"\n        />\n        <span class=\"error-message\" v-if=\"errors.name.length\">{{ errors.name }}</span>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n<!------------------------------------------------------NAME-KANA------------------------------------------------------>\n    <div class=\"setting-profile-edit\">\n      <div class=\"setting-profile__title\">\n        氏名(カナ)\n      </div>\n      <div class=\"setting-profile__input\">\n        <TextBox\n          type=\"text\"\n          v-model=\"form.name_kana\"\n          placeholder=\"例：ヤマダ タケシ\"\n        />\n        <span class=\"error-message\" v-if=\"errors.name_kana.length\">{{ errors.name_kana }}</span>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n<!--------------------------------------------------------EMAIL-------------------------------------------------------->\n    <div class=\"setting-profile-edit\">\n      <div class=\"setting-profile__title\">\n        メールアドレス\n      </div>\n      <div class=\"setting-profile__input\">\n        <TextBox\n          name=\"email\"\n          type=\"email\"\n          v-model=\"form.email\"\n          placeholder=\"abc@gmail.com\"\n          :disabled=true\n        />\n        <span class=\"error-message\" v-if=\"errors.email.length\">{{ errors.email }}</span>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n    <!--------------------------------------------------------PHONE-------------------------------------------------------->\n    <div class=\"setting-profile-edit\">\n      <div class=\"setting-profile__title\">\n        電話番号\n      </div>\n      <div class=\"setting-profile__input\">\n        <TextBox\n          name=\"email\"\n          type=\"email\"\n          v-model=\"form.phone\"\n        />\n        <span class=\"error-message\" v-if=\"errors.phone.length\">{{ errors.phone }}</span>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n<!-------------------------------------------------------COMPANY------------------------------------------------------->\n    <div class=\"setting-profile-edit\">\n      <div class=\"setting-profile__title\">\n        所属会社\n      </div>\n      <div class=\"setting-profile__input\">\n        <TextBox\n          id=\"company\"\n          name=\"company\"\n          type=\"text\"\n          v-model=\"company.name\"\n          placeholder=\"株式会社ブライトキット\"\n          :disabled=true\n        />\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n<!--------------------------------------------------------STORE-------------------------------------------------------->\n    <div class=\"setting-profile-edit\">\n      <div class=\"setting-profile__title\">\n        店舗\n      </div>\n      <div class=\"setting-profile__input\">\n        <TextBox\n          id=\"store\"\n          name=\"store\"\n          type=\"text\"\n          v-model=\"store.name\"\n          placeholder=\"日本橋支店\"\n          :disabled=true\n        />\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n<!-------------------------------------------------------AVATAR------------------------------------------------------->\n    <div class=\"setting-profile-edit\">\n      <div class=\"setting-profile__title\">\n        プロフィール写真\n      </div>\n      <div class=\"setting-profile__input\">\n        <img class=\"avatar\" v-if=\"form.avatar\" :src=\"form.avatar_url\" alt=\"\">\n        <label class=\"change-avatar\">\n          画像を選択する\n          <input type=\"file\" ref=\"file\" accept=\"image/jpeg, image/png\" @change=\"onFileChange\">\n        </label>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n\n<!-------------------------------------------------------PASSWORD------------------------------------------------------->\n    <div class=\"setting-profile-edit\">\n      <div class=\"setting-profile__title\">\n        パスワード\n      </div>\n      <div class=\"setting-profile__input\">\n        <Button :click=\"toggleVisible\" width=\"150px\">変更する</Button>\n        <Modal v-if=\"visible\" @updateModalVisible=\"visible = false\" title=\"パスワードを変更する\">\n          <form autocomplete=\"off\">\n            <TextBox\n              id=\"current-password\"\n              class=\"password-input\"\n              type=\"password\"\n              placeholder=\"現在のパスワード\"\n              v-model=\"password.current\"\n              autocomplete=\"off\"\n              :keyup=\"onKeyUp\"\n            />\n            <TextBox\n              id=\"new-password\"\n              class=\"password-input\"\n              type=\"password\"\n              placeholder=\"新しいパスワード\"\n              v-model=\"password.new\"\n              autocomplete=\"off\"\n              :keyup=\"onKeyUp\"\n            />\n            <TextBox\n              id=\"confirm-password\"\n              class=\"password-input\"\n              type=\"password\"\n              placeholder=\"パスワードを認証する\"\n              v-model=\"password.confirm\"\n              autocomplete=\"off\"\n              :keyup=\"onKeyUp\"\n            />\n          </form>\n          <div>\n            <span class=\"error-message\" v-if=\"errors.password.length\">{{ this.errors.password }}</span>\n          </div>\n          <template slot=\"footer\">\n            <Button :click=\"savePassword\" width=\"150px\" height=\"40px\" padding=\"1px\">保存する</Button>\n          </template>\n        </Modal>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n\n    <div class=\"button-submit mt-25\">\n      <Button :click=\"onSave\" width=\"206px\" height=\"46px\" padding=\"5px\">保存する</Button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TextBox from '../../../../components/partials/textbox'\nimport Button from '../../../../components/partials/button'\nimport Modal from '../../../../components/partials/modal'\nimport SettingApi from '../../../../services/setting'\nimport Message from '@/components/partials/message'\nimport { SET_LOADING } from '../../../../store/types'\nimport { mapActions, mapGetters } from 'vuex'\nimport { API_URL } from '../../../../constants/api'\n\nexport default {\n  name: 'setting-profile',\n  components: {\n    TextBox,\n    Button,\n    Modal,\n    Message\n  },\n  computed: {\n    ...mapGetters({\n      profile: 'user',\n      company: 'company',\n      store: 'store',\n      isLoading: 'isLoading'\n    })\n  },\n  data () {\n    return {\n      errors: {\n        name: '',\n        name_kana: '',\n        email: '',\n        password: '',\n        phone: ''\n      },\n      form: {\n        avatar: '',\n        avatar_url: '',\n        name: '',\n        name_kana: '',\n        email: '',\n        phone: '',\n        company: ''\n      },\n      password: {\n        current: '',\n        new: '',\n        confirm: ''\n      },\n      visible: false,\n      notifications: {\n        status: true,\n        show: false,\n        content: ''\n      }\n    }\n  },\n  beforeMount () {\n    this.setLoading(true)\n    this.form = this.profile\n    this.form.avatar_url = !this.form.avatar_url ? API_URL + '/' + this.profile.avatar : this.form.avatar_url\n    this.setLoading(false)\n  },\n  methods: {\n    ...mapActions({\n      setLoading: SET_LOADING\n    }),\n    onKeyUp (e) {\n      if (e.key === 'Enter') {\n        this.savePassword()\n      }\n      if (e.key === 'Escape') {\n        this.toggleVisible()\n      }\n    },\n    async onSave () {\n      let canSave = true\n      let formData = new FormData()\n      // validate form\n      if (!this.form.name) {\n        this.errors.name = 'この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.name = ''\n      }\n\n      if (!this.form.email) {\n        this.errors.email = 'この項目は必須です。'\n        canSave = false\n      } else if (!(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(this.form.email))) {\n        this.errors.email = '無効な形式！ このフィールドは電子メールである必要があります。'\n        canSave = false\n      } else {\n        this.errors.email = ''\n      }\n\n      if (!this.form.name_kana) {\n        this.errors.name_kana = 'この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.name_kana = ''\n      }\n\n      if (!canSave) {\n        return\n      }\n      // call api\n      this.$store.dispatch(SET_LOADING, true)\n\n      if (this.form.avatar) {\n        formData.append('avatar', this.form.avatar)\n      }\n      formData.append('name', this.form.name)\n      formData.append('name_kana', this.form.name_kana)\n      formData.append('phone', this.form.phone)\n      formData.append('company', this.form.company)\n      formData.append('email', this.form.email)\n\n      // eslint-disable-next-line no-unused-vars\n      const res = await SettingApi.updateProfile(formData)\n      this.$store.dispatch(SET_LOADING, false)\n      // disable loading\n      if (res.status) {\n        this.toggleMessage(true, 'プロフィール情報が変更されました。')\n        this.form.avatar_url = API_URL + '/' + res.data.user.avatar\n        console.log(this.form)\n      }\n    },\n\n    async savePassword () {\n      let canSave = true\n      if (!this.password.current || !this.password.new || !this.password.confirm) {\n        this.errors.password = '全ての項目を埋めてください。'\n        canSave = false\n      } else if (this.password.confirm !== this.password.new) {\n        this.errors.password = '確認したパスワードが一致しません。もう一度確認してください。'\n        canSave = false\n      } else {\n        this.errors.password = ''\n      }\n\n      if (!canSave) {\n        return\n      }\n      // Call API\n\n      // Enable Loading\n      this.$store.dispatch(SET_LOADING, true)\n\n      try {\n        const res = await SettingApi.changePassword({\n          old_password: this.password.current,\n          new_password: this.password.new\n        })\n        if (res.status) {\n          this.toggleVisible()\n          this.toggleMessage(true, 'パスワードが変更されました。')\n        }\n      } catch (e) {\n        this.errors.password = 'パスワードが正しくありません。もう一度やり直してください。'\n      }\n\n      // Disable loading\n      this.$store.dispatch(SET_LOADING, false)\n    },\n\n    toggleVisible () {\n      this.visible = !this.visible\n    },\n\n    toggleMessage (status, content) {\n      this.notifications.status = status\n      this.notifications.content = content\n      this.notifications.show = true\n    },\n\n    onFileChange (e) {\n      const file = e.target.files[0]\n      this.form.avatar = file\n      this.form.avatar_url = URL.createObjectURL(file)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n.button-submit {\n  width: 206px;\n  margin: auto;\n}\n\n.mt-25{\n  margin-top: 25px;\n}\n\n.setting-profile {\n  margin-bottom: 60px;\n\n  a {\n    color: #151e5d;\n  }\n\n  &-edit {\n    background-color: #fff;\n    border-top: 1px solid #efefef;\n    padding: 20px;\n    border-bottom: 1px solid #efefef;\n\n    &:first-child {\n      border-top: 1px solid #efefef;\n    }\n\n    &:last-child {\n      margin-top: 30px;\n    }\n  }\n\n  &__title {\n    color: #151e5d;\n    width: 220px;\n    font-size: 16px;\n    font-weight: 600;\n    display: inline-block;\n    vertical-align: top;\n  }\n\n  &__input {\n    width: 326px;\n    font-size: 14px;\n    display: inline-block;\n\n    .avatar{\n      width: 100px;\n      margin-right: 10px;\n    }\n    .change-avatar{\n      vertical-align: top;\n      color: #151e5d;\n      &:hover{\n        cursor: pointer\n      }\n    }\n    input{\n      display: none;\n    }\n  }\n\n  &__phone {\n    display: inline-block;\n    color: #151e5d;\n    font-size: 14px;\n    width: 640px;\n  }\n\n  &__url {\n    font-size: 14px;\n    display: inline-block;\n    margin-left: 100px;\n  }\n\n  .password-input {\n    margin-bottom: 10px;\n  }\n  .error-message{\n    color: red;\n  }\n\n  .success-message{\n    color: #2e7230;\n  }\n}\n\n@media (max-width: 1200px) {\n  .setting-profile{\n    &__title{\n      vertical-align: top;\n    }\n    &__phone{\n      width: 450px;\n    }\n    &__url{\n      display: block;\n      margin-left: 0;\n    }\n  }\n}\n@media (max-width: 992px) {\n  .setting-profile{\n    &__title{\n      width: 250px;\n    }\n    &__phone{\n    }\n    &__input{\n    }\n  }\n}\n\n@media (max-width: 768px) {\n  .setting-profile{\n    &__title{\n      width: auto;\n      float: left;\n    }\n    &__input{\n      float: right;\n      width: 60%;\n    }\n    &__phone{\n      width: auto;\n      float: right;\n    }\n  }\n}\n@media (max-width: 539px){\n  .setting-profile{\n    &__title{\n      width: 100%;\n    }\n    &__input{\n      width: 100%;\n      max-width: 100%;\n      margin-top: 20px;\n    }\n  }\n}\n@media (max-width: 374px){\n  .setting-profile{\n    &__url{\n      font-size: 12px;\n    }\n  }\n}\n\n</style>\n"]}]}