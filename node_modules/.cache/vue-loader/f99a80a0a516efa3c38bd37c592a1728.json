{"remainingRequest":"/home/quan/Documents/Projects/stock_analysis/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quan/Documents/Projects/stock_analysis/src/views/change-password.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quan/Documents/Projects/stock_analysis/src/views/change-password.vue","mtime":1615822194522},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { mapActions, mapGetters } from 'vuex'\nimport EmptyLayout from './layouts/empty-layout'\nimport TextBox from '../components/partials/textbox'\nimport Button from '../components/partials/button'\nimport { LOGIN, SET_CURRENT_STORE } from '../store/types'\nimport ResetPassApi from '../services/auth'\n\nexport default {\n  name: 'login',\n  components: {\n    EmptyLayout,\n    TextBox,\n    Button\n  },\n  data () {\n    return {\n      errors: {\n        password: '',\n        confirmPass: '',\n        server: ''\n      },\n      form: {\n        password: '',\n        confirmPass: ''\n      },\n      message: { }\n    }\n  },\n  computed: {\n    ...mapGetters({ isAdminPage: 'isAdminPage', isLoading: 'isLoading' })\n  },\n  watch: {\n    form (val) {}\n  },\n  methods: {\n    ...mapActions({\n      login: LOGIN,\n      checkStore: SET_CURRENT_STORE\n    }),\n    async updatePass () {\n      let canSave = true\n      if (!this.form.password) {\n        this.errors.password = '*この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.password = ''\n      }\n      if (this.form.password.length < 4) {\n        this.errors.password = '*パスワードは4文字以上である必要があります !'\n        canSave = false\n      } else {\n        this.errors.password = ''\n      }\n      if (this.form.confirmPass !== this.form.password) {\n        this.errors.confirmPass = '*パスワードが一致しません。再入力してください !'\n        canSave = false\n      } else {\n        this.errors.confirmPass = ''\n      }\n      if (canSave === true) {\n        const token = this.$route.query.token\n        const password = this.form.password\n\n        const formData = {\n          token: token,\n          password: password\n        }\n        const resetResult = await ResetPassApi.resetPass(formData)\n        if (resetResult && resetResult.error) {\n          if (resetResult.error === 'invalid_token') {\n            this.errors.server = 'エラーが発生しました。後でもう一度お試しください。!'\n            canSave = false\n          }\n          if (resetResult.error === 'user_not_found') {\n            this.errors.server = '入力されたユーザー名が見つかりません。もう一度お試し下さい!'\n            canSave = false\n          }\n          if (resetResult.error === 'token_and_password_required') {\n            this.errors.server = 'エラーが発生しました。後でもう一度お試しください。!'\n            canSave = false\n          }\n        }\n        if (canSave === true) {\n          this.$router.push('/login')\n        }\n      }\n    }\n  }\n}\n",{"version":3,"sources":["change-password.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"change-password.vue","sourceRoot":"src/views","sourcesContent":["<template lang=\"html\">\n  <empty-layout>\n    <div v-if=\"!isLoading\" class=\"signInComponent\">\n      <div class=\"signInBox\">\n        <div class=\"page-return\">\n          <router-link :to=\"{name: 'login'}\"><i class=\"fas fa-arrow-left\" style=\"margin-right:8px\"/>ログイン画面へ戻る </router-link>\n        </div>\n        <div class=\"signInTitleBox\">\n          パスワードを変更する\n        </div>\n        <span class=\"error__server\" v-if=\"errors.server.length > 0\">{{ errors.server }}</span>\n        <span class=\"error\" v-if=\"errors.password.length > 0\">{{ errors.password }}</span>\n        <div class=\"signInEmailBox\">\n          <TextBox\n            id=\"old_password\"\n            v-model=\"form.password\"\n            type=\"password\"\n            placeholder=\"新しいパスワード\"\n            pleft=\"14px\"\n            autocomplete=\"off\"\n          />\n        </div>\n        <span class=\"error\" v-if=\"errors.confirmPass.length\">{{ errors.confirmPass }}</span>\n        <div class=\"signInPasswordBox\">\n          <TextBox\n            id=\"new_password\"\n            v-model=\"form.confirmPass\"\n            type=\"password\"\n            placeholder=\"パスワード確認\"\n            pleft=\"14px\"\n            autocomplete=\"off\"\n          />\n        </div>\n        <div class=\"signInButtonBox\">\n          <Button :click=\"updatePass\">\n            <span class=\"signInButtonText\">変更する</span>\n          </Button>\n        </div>\n      </div>\n    </div>\n  </empty-layout>\n</template>\n\n<script lang=\"js\">\n\nimport { mapActions, mapGetters } from 'vuex'\nimport EmptyLayout from './layouts/empty-layout'\nimport TextBox from '../components/partials/textbox'\nimport Button from '../components/partials/button'\nimport { LOGIN, SET_CURRENT_STORE } from '../store/types'\nimport ResetPassApi from '../services/auth'\n\nexport default {\n  name: 'login',\n  components: {\n    EmptyLayout,\n    TextBox,\n    Button\n  },\n  data () {\n    return {\n      errors: {\n        password: '',\n        confirmPass: '',\n        server: ''\n      },\n      form: {\n        password: '',\n        confirmPass: ''\n      },\n      message: { }\n    }\n  },\n  computed: {\n    ...mapGetters({ isAdminPage: 'isAdminPage', isLoading: 'isLoading' })\n  },\n  watch: {\n    form (val) {}\n  },\n  methods: {\n    ...mapActions({\n      login: LOGIN,\n      checkStore: SET_CURRENT_STORE\n    }),\n    async updatePass () {\n      let canSave = true\n      if (!this.form.password) {\n        this.errors.password = '*この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.password = ''\n      }\n      if (this.form.password.length < 4) {\n        this.errors.password = '*パスワードは4文字以上である必要があります !'\n        canSave = false\n      } else {\n        this.errors.password = ''\n      }\n      if (this.form.confirmPass !== this.form.password) {\n        this.errors.confirmPass = '*パスワードが一致しません。再入力してください !'\n        canSave = false\n      } else {\n        this.errors.confirmPass = ''\n      }\n      if (canSave === true) {\n        const token = this.$route.query.token\n        const password = this.form.password\n\n        const formData = {\n          token: token,\n          password: password\n        }\n        const resetResult = await ResetPassApi.resetPass(formData)\n        if (resetResult && resetResult.error) {\n          if (resetResult.error === 'invalid_token') {\n            this.errors.server = 'エラーが発生しました。後でもう一度お試しください。!'\n            canSave = false\n          }\n          if (resetResult.error === 'user_not_found') {\n            this.errors.server = '入力されたユーザー名が見つかりません。もう一度お試し下さい!'\n            canSave = false\n          }\n          if (resetResult.error === 'token_and_password_required') {\n            this.errors.server = 'エラーが発生しました。後でもう一度お試しください。!'\n            canSave = false\n          }\n        }\n        if (canSave === true) {\n          this.$router.push('/login')\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .signInComponent {\n    width: 100vw;\n    height: 100vh;\n    text-align: center;\n    padding-top: 10%;\n  }\n  .error {\n    color: red;\n    font-size: 12px;\n    display: block;\n    text-align: left;\n  }\n  .error__server {\n    color: red;\n    font-size: 14px;\n    display: block;\n    text-align: center;\n    margin: -30px 0 20px;\n  }\n\n  .signInBox {\n    box-sizing: border-box;\n    margin: auto;\n    padding: 32px 56px;\n    border-radius: 8px;\n    background-color: #fff;\n    color: #151e5d;\n    position: relative;\n\n    @media only screen and (max-width: 767px) {\n      width: 90% !important;\n      padding: 32px 20px;\n    }\n    width: 500px;\n    height: 326px;\n    box-shadow: 0 2px 6px -4px rgba(130, 136, 148, 0.48),\n    0 0 2px 0 rgba(130, 136, 148, 0.16);\n\n    &.sm {\n      width: 90%;\n      height: 426px;\n      max-height: 95%;\n      padding: 32px 24px;\n    }\n\n    &.md {\n      width: 90%;\n      max-height: 95%;\n      padding: 32px 24px;\n    }\n  }\n\n  .signInLogoBox {\n    width: 80px;\n    margin: 0 auto 16px auto;\n\n    &.sm {\n      width: 60px;\n    }\n\n    &.md {\n      width: 60px;\n    }\n\n    img {\n      max-width: 100%;\n    }\n  }\n\n  .signInTitleBox {\n    font-size: 26px;\n    font-weight: bold;\n    color: #151e5d;\n    margin-bottom: 32px;\n    letter-spacing: 1.6px;\n    text-align: left;\n\n    &.sm {\n      font-size: 20px;\n      margin-bottom: 24px;\n    }\n\n    &.md {\n      font-size: 24px;\n      margin-bottom: 16px;\n    }\n  }\n\n  .signInEmailBox {\n    position: relative;\n    width: 100%;\n    height: 40px;\n    margin-bottom: 16px;\n\n    svg {\n      fill: #9aa8bd;\n      position: absolute;\n      z-index: 1;\n      left: 8px;\n      top: 9px;\n    }\n  }\n\n  .signInPasswordBox {\n    position: relative;\n    width: 100%;\n    height: 40px;\n    margin-bottom: 24px;\n    font-family: HiraginoKaku-W3-90msp-RKSJ-H, serif;\n\n    svg {\n      fill: #9aa8bd;\n      position: absolute;\n      z-index: 1;\n      left: 8px;\n      top: 9px;\n    }\n  }\n\n  .signInButtonBox {\n    width: 100%;\n    height: 48px;\n    margin-bottom: 20px;\n  }\n\n  .signInButtonText {\n    line-height: 48px;\n  }\n\n  .signInResetPassword {\n    font-size: 14px;\n    line-height: 1;\n    text-align: center;\n\n    &.sm {\n      display: none;\n    }\n\n    &.md {\n      display: none;\n    }\n\n    a {\n      color: #24374e;\n      text-decoration: none;\n    }\n  }\n  .page-return {\n    position: absolute;\n    bottom: 10px;\n    left: 35%;\n    a{\n      color: #44a0e5;\n      text-decoration: underline;\n      transition: all 0.5s ease-out;\n      font-size: 13px;\n    }\n  }\n  @media (max-width: 1025px) {\n    .signInBox {\n      width: 60%;\n    }\n  }\n  @media (max-width: 768px) {\n    .signInBox {\n      width: 90%;\n    }\n  }\n  @media (max-width: 450px) {\n    .signInTitleBox {\n      font-size: 18px;\n    }\n  }\n  @media (max-width: 340px) {\n    .signInBox {\n      width: 110%;\n    }\n  }\n</style>\n"]}]}