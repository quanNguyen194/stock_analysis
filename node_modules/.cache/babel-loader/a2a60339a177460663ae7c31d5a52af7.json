{"remainingRequest":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/babel-loader/lib/index.js!/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quan/Documents/Projects/django-vue/frontend_test/src/views/user/menu-detail/modals/delete.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/src/views/user/menu-detail/modals/delete.vue","mtime":1615822194522},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Modal from \"../../../../components/partials/modal\";\nimport Button from \"../../../../components/partials/button\";\nimport DishApi from \"../../../../services/dish\";\nexport default {\n  components: {\n    Modal: Modal,\n    Button: Button\n  },\n  props: {\n    onClose: {\n      type: Function\n    },\n    menu: {\n      type: Object\n    },\n    dishIndex: {\n      type: Number\n    }\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.dish = this.menu.dishes[this.dishIndex];\n              _context.next = 3;\n              return DishApi.listDish();\n\n            case 3:\n              this.dishes = _context.sent;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }()\n};",{"version":3,"sources":["delete.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAcA,OAAA,KAAA;AACA,OAAA,MAAA;AACA,OAAA,OAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,MAAA,EAAA;AAFA,GADA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KADA;AAIA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAJA;AAOA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AAPA,GALA;AAiBA,EAAA,OAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA,mBAAA,IAAA,GAAA,KAAA,IAAA,CAAA,MAAA,CAAA,KAAA,SAAA,CAAA;AAlBA;AAAA,qBAmBA,OAAA,CAAA,QAAA,EAnBA;;AAAA;AAmBA,mBAAA,MAnBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAA","sourcesContent":["<template>\n  <Modal title=\"割の削除\" @updateModalVisible=\"onClose()\" width=\"60%\">\n    <div class=\"text-left\">\n      この割を削除します。<br>\n      よろしい場合は削除を選択してください。\n    </div>\n    <template slot=\"footer\">\n      <Button class=\"btn__submit\" :click=\"onClose\" backgroundColor=\"#fff\" color=\"#861142\" width=\"200px\">キャンセル</Button>\n      <Button class=\"btn__submit\" :click=\"() => onClose(true)\" backgroundColor=\"#861142\" width=\"200px\">削除する</Button>\n    </template>\n  </Modal>\n</template>\n\n<script>\nimport Modal from '../../../../components/partials/modal'\nimport Button from '../../../../components/partials/button'\nimport DishApi from '../../../../services/dish'\n\nexport default {\n  components: {\n    Modal,\n    Button\n  },\n  props: {\n    onClose: {\n      type: Function\n    },\n    menu: {\n      type: Object\n    },\n    dishIndex: {\n      type: Number\n    }\n  },\n\n  async mounted () {\n    this.dish = this.menu.dishes[this.dishIndex]\n    this.dishes = await DishApi.listDish()\n  }\n}\n</script>\n"],"sourceRoot":"src/views/user/menu-detail/modals"}]}