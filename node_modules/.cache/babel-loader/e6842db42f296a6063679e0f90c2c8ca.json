{"remainingRequest":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/babel-loader/lib/index.js!/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quan/Documents/Projects/django-vue/frontend_test/src/views/user/menu-detail/modals/material.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/src/views/user/menu-detail/modals/material.vue","mtime":1615822194522},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.map\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.filter\";\nimport _defineProperty from \"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Modal from \"../../../../components/partials/modal\";\nimport Button from \"../../../../components/partials/button\";\nimport TextBox from \"../../../../components/partials/textbox\"; // import MenuApi from '../../../../services/menu'\n\nimport DishApi from \"../../../../services/dish\";\nimport { mapGetters } from 'vuex';\nimport { SET_LOADING } from '@/store/types'; // import UnitsApi from '../../../../services/setting'\n\nimport { materialUnits, categories } from '@/constants/material'; // import MenuApi from '../../../../services/menu'\n\nexport default {\n  components: {\n    Modal: Modal,\n    Button: Button,\n    TextBox: TextBox\n  },\n  data: function data() {\n    return {\n      modalTitle: '割の登録',\n      buttonText: '登録する',\n      activeItem: 'addExisting',\n      errors: {\n        name_dish: '',\n        name_material: '',\n        value: '',\n        unit: ''\n      },\n      materialModal: {\n        isShowEditMaterial: false,\n        isShowInputValue: true,\n        currentMaterial: null,\n        errors: {\n          value: '',\n          name: '',\n          unit: ''\n        },\n        form: {\n          unit: '',\n          value: '',\n          name: ''\n        }\n      },\n      isAddNewMaterial: false,\n      isShowMaterialOptions: true,\n      isShowInputValue: true,\n      isShowValue: true,\n      categories: categories,\n      valueMaterial: '',\n      unitMaterial: '',\n      nameMaterial: '',\n      material_index: 0,\n      form: {\n        name: '',\n        category: '0-漬け地',\n        materials: []\n      },\n      units: materialUnits,\n      checkedUnits: [],\n      materialList: []\n    };\n  },\n  props: {\n    onClose: {\n      type: Function\n    },\n    menu: {\n      type: Object\n    },\n    dish: {\n      type: Object\n    },\n    dishes: {\n      type: Array\n    }\n  },\n  mounted: function mounted() {\n    this.checkedUnits = this.store.units;\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    store: 'store',\n    setLoading: SET_LOADING\n  })), {}, {\n    uncheckedUnits: function uncheckedUnits() {\n      var _this = this;\n\n      return this.units.filter(function (item) {\n        return !_this.checkedUnits.includes(item);\n      });\n    }\n  }),\n  beforeMount: function () {\n    var _beforeMount = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var currentDishId;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              currentDishId = (this.dish || {})._id;\n\n              if (currentDishId) {\n                this.modalTitle = '割の編集';\n                this.buttonText = '更新する';\n              }\n\n              if (this.dish) {\n                this.form.materials = (this.dish.materials || []).map(function (item) {\n                  return {\n                    name: item.name,\n                    unit: item.unit,\n                    value: item.value\n                  };\n                });\n                this.form.name = this.dish.name || '';\n                this.form.category = this.dish.category || '0-漬け地';\n              }\n\n              this.materialList = this.form.materials;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function beforeMount() {\n      return _beforeMount.apply(this, arguments);\n    }\n\n    return beforeMount;\n  }(),\n  methods: {\n    isActive: function isActive(menuItem) {\n      return this.activeItem === menuItem;\n    },\n    setActive: function setActive(menuItem) {\n      this.errors.value = '';\n      this.errors.name = '';\n      this.activeItem = menuItem;\n    },\n    onDelete: function onDelete(i) {\n      this.$delete(this.form.materials, i);\n    },\n    addNewMat: function () {\n      var _addNewMat = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var isValid;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                isValid = true;\n\n                if (!this.nameMaterial) {\n                  isValid = false;\n                  this.errors.name_material = '材料名を入力してください。';\n                } else {\n                  this.errors.name_material = '';\n                }\n\n                if (!this.valueMaterial && this.isShowMaterialValue(this.unitMaterial)) {\n                  isValid = false;\n                  this.errors.value = '値は数値です';\n                } else if (this.valueMaterial < 0) {\n                  isValid = false;\n                  this.errors.value = '値は負の数ではありません';\n                } else {\n                  this.errors.value = '';\n                }\n\n                if (!this.unitMaterial) {\n                  isValid = false;\n                  this.errors.unit = '単位を選んでください。';\n                } else {\n                  this.errors.unit = '';\n                }\n\n                if (isValid) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 6:\n                this.form.materials.push({\n                  name: this.nameMaterial,\n                  value: this.valueMaterial,\n                  unit: this.unitMaterial\n                });\n                this.nameMaterial = '';\n                this.valueMaterial = '';\n                this.unitMaterial = '';\n                this.isShowInputValue = true;\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function addNewMat() {\n        return _addNewMat.apply(this, arguments);\n      }\n\n      return addNewMat;\n    }(),\n    onSaveDish: function () {\n      var _onSaveDish = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var saveDish, currentDishId, res, _res;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.form.name) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                this.errors.name_dish = '割名を入力してください。';\n                return _context3.abrupt(\"return\");\n\n              case 5:\n                this.errors.name_dish = '';\n\n              case 6:\n                saveDish = {\n                  name: this.form.name,\n                  category: this.form.category,\n                  materials: this.form.materials\n                };\n                currentDishId = (this.dish || {})._id; // console.log('current dish id', currentDishId)\n\n                if (!currentDishId) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                _context3.next = 11;\n                return DishApi.updateToDish(this.dish._id, saveDish);\n\n              case 11:\n                res = _context3.sent;\n                this.dishes.map(function (dish) {\n                  if (dish._id === currentDishId) {\n                    dish.materials = res.dish.materials;\n                    dish.name = res.dish.name;\n                    dish.category = res.dish.category;\n                  }\n                });\n                _context3.next = 20;\n                break;\n\n              case 15:\n                _context3.next = 17;\n                return DishApi.createDish(saveDish);\n\n              case 17:\n                _res = _context3.sent;\n                // console.log(res)\n                currentDishId = _res._id; // const updateDish = {\n                //   name: this.menu.name,\n                //   note: this.menu.note,\n                //   dishes: currentDishId\n                // }\n                // await MenuApi.updateMenu(this.menu._id, updateDish)\n                // console.log(updateDish)\n\n                this.dishes.unshift(saveDish);\n\n              case 20:\n                if (this.onClose) {\n                  this.onClose(_objectSpread({\n                    _id: currentDishId\n                  }, saveDish));\n                }\n\n              case 21:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function onSaveDish() {\n        return _onSaveDish.apply(this, arguments);\n      }\n\n      return onSaveDish;\n    }(),\n    onChangeUnit: function onChangeUnit(event) {\n      var current = event.target.value;\n\n      if (current === '少々' || current === '適量') {\n        this.isShowInputValue = false;\n        this.valueMaterial = '';\n      } else {\n        this.isShowInputValue = true;\n      }\n    },\n    isShowMaterialValue: function isShowMaterialValue(unit) {\n      return unit !== '少々' && unit !== '適量';\n    },\n    // For edit material\n    openEditMaterialModal: function openEditMaterialModal(mat, index) {\n      this.materialModal.currentMaterial = mat;\n      this.materialModal.currentMaterialIndex = index;\n      this.materialModal.form = {\n        name: mat.name,\n        value: mat.value,\n        unit: mat.unit\n      };\n      this.materialModal.isShowEditMaterial = true;\n    },\n    editMaterialOnChangeUnit: function editMaterialOnChangeUnit() {\n      var form = this.materialModal.form;\n      this.materialModal.isShowInputValue = this.isShowMaterialValue(form.unit);\n\n      if (!this.materialModal.isShowInputValue) {\n        this.materialModal.form.value = '';\n      }\n    },\n    closeEditMaterialForm: function closeEditMaterialForm() {\n      this.materialModal.isShowEditMaterial = false;\n    },\n    onSaveMaterial: function () {\n      var _onSaveMaterial = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var currentMaterialIndex, form, isValid;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                currentMaterialIndex = this.materialModal.currentMaterialIndex;\n                form = this.materialModal.form; // validate form\n\n                isValid = true;\n\n                if (!form.name.length) {\n                  isValid = false;\n                  this.materialModal.errors.name = '材料名を入力してください。';\n                }\n\n                if (this.isShowMaterialValue(form.unit) && !form.value.length) {\n                  isValid = false;\n                  this.materialModal.errors.value = '値は負の数ではありません';\n                }\n\n                if (!this.materialModal.form.unit) {\n                  isValid = false;\n                  this.materialModal.errors.unit = '単位を選んでください。';\n                } else {\n                  this.materialModal.errors.unit = '';\n                }\n\n                if (isValid) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 8:\n                // bin new material to list\n                // const\n                this.materialList[currentMaterialIndex].name = this.materialModal.form.name;\n                this.materialList[currentMaterialIndex].unit = this.materialModal.form.unit;\n                this.materialList[currentMaterialIndex].value = this.materialModal.form.value;\n\n                if (!this.isShowMaterialValue(this.materialModal.form.unit)) {\n                  this.materialList[currentMaterialIndex].value = '';\n                } else {\n                  this.materialList[currentMaterialIndex].value = this.materialModal.form.value;\n                } // close edit material form\n\n\n                this.closeEditMaterialForm();\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function onSaveMaterial() {\n        return _onSaveMaterial.apply(this, arguments);\n      }\n\n      return onSaveMaterial;\n    }()\n  }\n};",{"version":3,"sources":["material.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <Modal :title=\"modalTitle\" @updateModalVisible=\"onClose\" width=\"90%\" v-if=\"!materialModal.isShowEditMaterial\">\n      <div class=\"check__material\">\n        <div class=\"row\">\n          <div class=\"col-md-1 material__title\">割名</div>\n          <div class=\"col-md-4 menu__textbox\">\n            <TextBox\n              type=\"text\"\n              v-model=\"form.name\"\n              placeholder=\"割名\"\n              pleft=\"14px\"\n              autocomplete=\"off\"\n            />\n            <small style=\"color: #ff0000\">{{ errors.name_dish }}</small>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-1 material__title\">分類</div>\n          <form class=\"col-md-11 menu__textbox\">\n            <div class=\"menu__mass\" v-for=\"(cate, key) in categories\" :key=\"key\">\n              <input\n                type=\"radio\"\n                name=\"unit\"\n                v-model=\"form.category\"\n                :value=\"cate\"\n                :id=\"`cat-${key}`\"\n              >\n              <label :for=\"`cat-${key}`\">{{ cate.split('-').reverse()[0] }}</label>\n            </div>\n          </form>\n        </div>\n      </div>\n\n      <div class=\"menu__input\">\n        <div class=\"menu__input__title\">材料</div>\n        <div class=\"row mate__list\">\n          <div class=\"col-md-12 mate__name\" style=\"margin-bottom: 5px\">\n            <label class=\"lable--input\" for=\"mate-name\">材料名</label>\n            <input class=\"value--input\"\n                   id=\"mate-name\"\n                   type=\"text\"\n                   placeholder=\"材料名\"\n                   autocomplete=\"off\"\n                   v-model=\"nameMaterial\"\n            />\n            <small style=\"color: red\">{{ errors.name_material }}</small>\n          </div>\n          <div class=\"col-md-12 mate__value\" v-if=\"isShowInputValue\">\n            <label class=\"lable--input value\" for=\"mate-value\">値</label>\n            <input class=\"value--input\"\n                   id=\"mate-value\"\n                   type=\"number\"\n                   autocomplete=\"off\"\n                   v-model=\"valueMaterial\"\n                   min=\"0\"\n                   step=\"1\"\n            />\n            <small style=\"color: red\">{{ errors.value }}</small>\n          </div>\n          <div class=\"col-md-12\">\n            <div class=\"form-area row\">\n              <div class=\"col-md-1 unit__title\">単位</div>\n              <form class=\"col-md-6\">\n                <div id=\"unit_material\" class=\"input-item\" v-for=\"unit in checkedUnits\" :key=\"unit\">\n                  <input\n                    type=\"radio\"\n                    name=\"unit\"\n                    v-model=\"unitMaterial\"\n                    :value=\"unit\"\n                    :id=\"unit\"\n                    @change=\"onChangeUnit\">\n                  <label :for=\"unit\">{{ unit }}</label>\n                </div>\n                <div style=\"color: #ff0000\">{{ errors.unit }}</div>\n              </form>\n              <select class=\"col-md-1 mate__options\" v-model=\"unitMaterial\" @change=\"onChangeUnit\">\n                <option disabled value=\"\">その他</option>\n                <option v-for=\"(value, key) in uncheckedUnits\" :key=\"key\" :value=\"value\">{{value}}</option>\n              </select>\n\n              <div class=\"col-md-2 mate__btn\">\n                <Button border-radius=\"10px\"\n                        :click=\"addNewMat\" class=\"menu__button add__btn__mate\">\n                  <span>追加</span>\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"materials__table\">\n          <div class=\"material__table--item\" v-for=\"(mate, i) in materialList\" :key=\"i\">\n              <span class=\"material__item\" @click=\"() => openEditMaterialModal(mate, i)\">\n                <span class=\"material__button\">\n                  {{ `${mate.name} ${mate.value}${mate.unit}` }}\n                </span>\n              </span>\n            <a class=\"btn__delete\" @click=\"onDelete(i)\">×</a>\n          </div>\n        </div>\n      </div>\n\n      <template slot=\"footer\">\n        <Button :click=\"onClose\" backgroundColor=\"#fff\" color=\"#151e5d\" width=\"150px\">キャンセル</Button>\n        <Button :click=\"onSaveDish\" width=\"150px\">{{ buttonText }}</Button>\n      </template>\n    </Modal>\n\n    <Modal v-else title=\"材料の編集\" @updateModalVisible=\"closeEditMaterialForm\" width=\"90%\">\n      <div class=\"row mate__list\">\n        <div class=\"col-md-12\">\n          <label class=\"lable--input\" for=\"edit-mate-name\">材料名</label>\n          <input class=\"value--input\"\n                 id=\"edit-mate-name\"\n                 type=\"text\"\n                 placeholder=\"材料名\"\n                 autocomplete=\"off\"\n                 v-model=\"materialModal.form.name\"\n          />\n          <small style=\"color: red\">{{ materialModal.errors.name }}</small>\n        </div>\n        <div class=\"col-md-12\" v-if=\"materialModal.isShowInputValue\">\n          <label class=\"lable--input\" style=\"padding-right: 30px\" for=\"edit-mate-value\">値</label>\n          <input class=\"value--input\"\n                 id=\"edit-mate-value\"\n                 type=\"number\"\n                 min=\"0\"\n                 autocomplete=\"off\"\n                 v-model=\"materialModal.form.value\"\n          />\n          <small style=\"color: red\">{{ materialModal.errors.value }}</small>\n        </div>\n        <div class=\"col-md-12\">\n          <div class=\"form-area\">\n            <div class=\"col-md-1 unit__title\">単位</div>\n            <form id=\"edit_unit_materials\" class=\"input-item\" v-for=\"unit in checkedUnits\" :key=\"unit\">\n              <input\n                v-model=\"materialModal.form.unit\"\n                type=\"radio\" name=\"unit\"\n                :value=\"unit\"\n                :id=\"unit\"\n                @change=\"editMaterialOnChangeUnit\">\n              <label :for=\"unit\">{{ unit }}</label>\n            </form>\n            <select v-model=\"materialModal.form.unit\" @change=\"onChangeUnit\">\n              <option disabled value=\"\">その他</option>\n              <option v-for=\"(value, key) in uncheckedUnits\" :key=\"key\" :value=\"value\">{{ value }}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <template slot=\"footer\">\n        <Button :click=\"closeEditMaterialForm\" backgroundColor=\"#fff\" color=\"#151e5d\" width=\"150px\">キャンセル</Button>\n        <Button :click=\"onSaveMaterial\" width=\"150px\">{{ buttonText }}</Button>\n      </template>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport Modal from '../../../../components/partials/modal'\nimport Button from '../../../../components/partials/button'\nimport TextBox from '../../../../components/partials/textbox'\n// import MenuApi from '../../../../services/menu'\nimport DishApi from '../../../../services/dish'\nimport { mapGetters } from 'vuex'\nimport { SET_LOADING } from '@/store/types'\n// import UnitsApi from '../../../../services/setting'\nimport { materialUnits, categories } from '@/constants/material'\n// import MenuApi from '../../../../services/menu'\n\nexport default {\n  components: {\n    Modal,\n    Button,\n    TextBox\n  },\n\n  data () {\n    return {\n      modalTitle: '割の登録',\n      buttonText: '登録する',\n      activeItem: 'addExisting',\n      errors: {\n        name_dish: '',\n        name_material: '',\n        value: '',\n        unit: ''\n      },\n      materialModal: {\n        isShowEditMaterial: false,\n        isShowInputValue: true,\n        currentMaterial: null,\n        errors: {\n          value: '',\n          name: '',\n          unit: ''\n        },\n        form: {\n          unit: '',\n          value: '',\n          name: ''\n        }\n      },\n      isAddNewMaterial: false,\n      isShowMaterialOptions: true,\n      isShowInputValue: true,\n      isShowValue: true,\n      categories: categories,\n      valueMaterial: '',\n      unitMaterial: '',\n      nameMaterial: '',\n      material_index: 0,\n      form: {\n        name: '',\n        category: '0-漬け地',\n        materials: []\n      },\n      units: materialUnits,\n      checkedUnits: [],\n      materialList: []\n    }\n  },\n\n  props: {\n    onClose: {\n      type: Function\n    },\n    menu: {\n      type: Object\n    },\n    dish: {\n      type: Object\n    },\n    dishes: {\n      type: Array\n    }\n  },\n\n  mounted () {\n    this.checkedUnits = this.store.units\n  },\n\n  computed: {\n    ...mapGetters({\n      store: 'store',\n      setLoading: SET_LOADING\n    }),\n    uncheckedUnits () {\n      return this.units.filter((item) => !this.checkedUnits.includes(item))\n    }\n  },\n\n  async beforeMount () {\n    let currentDishId = (this.dish || {})._id\n    if (currentDishId) {\n      this.modalTitle = '割の編集'\n      this.buttonText = '更新する'\n    }\n\n    if (this.dish) {\n      this.form.materials = (this.dish.materials || [])\n        .map((item) => {\n          return {\n            name: item.name,\n            unit: item.unit,\n            value: item.value\n          }\n        })\n      this.form.name = this.dish.name || ''\n      this.form.category = this.dish.category || '0-漬け地'\n    }\n\n    this.materialList = this.form.materials\n  },\n\n  methods: {\n\n    isActive (menuItem) {\n      return this.activeItem === menuItem\n    },\n    setActive (menuItem) {\n      this.errors.value = ''\n      this.errors.name = ''\n      this.activeItem = menuItem\n    },\n    onDelete (i) {\n      this.$delete(this.form.materials, i)\n    },\n\n    async addNewMat () {\n      let isValid = true\n      if (!this.nameMaterial) {\n        isValid = false\n        this.errors.name_material = '材料名を入力してください。'\n      } else {\n        this.errors.name_material = ''\n      }\n\n      if (!this.valueMaterial && this.isShowMaterialValue(this.unitMaterial)) {\n        isValid = false\n        this.errors.value = '値は数値です'\n      } else if (this.valueMaterial < 0) {\n        isValid = false\n        this.errors.value = '値は負の数ではありません'\n      } else {\n        this.errors.value = ''\n      }\n\n      if (!this.unitMaterial) {\n        isValid = false\n        this.errors.unit = '単位を選んでください。'\n      } else {\n        this.errors.unit = ''\n      }\n\n      if (!isValid) {\n        return\n      }\n\n      this.form.materials.push({\n        name: this.nameMaterial,\n        value: this.valueMaterial,\n        unit: this.unitMaterial\n      })\n\n      this.nameMaterial = ''\n      this.valueMaterial = ''\n      this.unitMaterial = ''\n      this.isShowInputValue = true\n    },\n\n    async onSaveDish () {\n      // console.log('form data', this.form)\n\n      if (!this.form.name) {\n        this.errors.name_dish = '割名を入力してください。'\n        return\n      } else {\n        this.errors.name_dish = ''\n      }\n\n      const saveDish = {\n        name: this.form.name,\n        category: this.form.category,\n        materials: this.form.materials\n      }\n\n      let currentDishId = (this.dish || {})._id\n\n      // console.log('current dish id', currentDishId)\n\n      if (currentDishId) {\n        const res = await DishApi.updateToDish(this.dish._id, saveDish)\n\n        this.dishes.map(dish => {\n          if (dish._id === currentDishId) {\n            dish.materials = res.dish.materials\n            dish.name = res.dish.name\n            dish.category = res.dish.category\n          }\n        })\n      } else {\n        const res = await DishApi.createDish(saveDish)\n\n        // console.log(res)\n\n        currentDishId = res._id\n\n        // const updateDish = {\n        //   name: this.menu.name,\n        //   note: this.menu.note,\n        //   dishes: currentDishId\n        // }\n\n        // await MenuApi.updateMenu(this.menu._id, updateDish)\n\n        // console.log(updateDish)\n        this.dishes.unshift(\n          saveDish\n        )\n      }\n      if (this.onClose) {\n        this.onClose({\n          _id: currentDishId,\n          ...saveDish\n        })\n      }\n    },\n\n    onChangeUnit (event) {\n      const current = event.target.value\n      if (current === '少々' || current === '適量') {\n        this.isShowInputValue = false\n        this.valueMaterial = ''\n      } else {\n        this.isShowInputValue = true\n      }\n    },\n    isShowMaterialValue (unit) {\n      return unit !== '少々' && unit !== '適量'\n    },\n\n    // For edit material\n    openEditMaterialModal (mat, index) {\n      this.materialModal.currentMaterial = mat\n      this.materialModal.currentMaterialIndex = index\n      this.materialModal.form = {\n        name: mat.name,\n        value: mat.value,\n        unit: mat.unit\n      }\n      this.materialModal.isShowEditMaterial = true\n    },\n    editMaterialOnChangeUnit () {\n      const { form } = this.materialModal\n      this.materialModal.isShowInputValue = this.isShowMaterialValue(form.unit)\n      if (!this.materialModal.isShowInputValue) {\n        this.materialModal.form.value = ''\n      }\n    },\n    closeEditMaterialForm () {\n      this.materialModal.isShowEditMaterial = false\n    },\n    async onSaveMaterial () {\n      const { currentMaterialIndex } = this.materialModal\n      const { form } = this.materialModal\n\n      // validate form\n      let isValid = true\n      if (!form.name.length) {\n        isValid = false\n        this.materialModal.errors.name = '材料名を入力してください。'\n      }\n\n      if (this.isShowMaterialValue(form.unit) && !form.value.length) {\n        isValid = false\n        this.materialModal.errors.value = '値は負の数ではありません'\n      }\n\n      if (!this.materialModal.form.unit) {\n        isValid = false\n        this.materialModal.errors.unit = '単位を選んでください。'\n      } else {\n        this.materialModal.errors.unit = ''\n      }\n\n      if (!isValid) {\n        return\n      }\n      // bin new material to list\n      // const\n      this.materialList[currentMaterialIndex].name = this.materialModal.form.name\n      this.materialList[currentMaterialIndex].unit = this.materialModal.form.unit\n      this.materialList[currentMaterialIndex].value = this.materialModal.form.value\n      if (!this.isShowMaterialValue(this.materialModal.form.unit)) {\n        this.materialList[currentMaterialIndex].value = ''\n      } else {\n        this.materialList[currentMaterialIndex].value = this.materialModal.form.value\n      }\n\n      // close edit material form\n      this.closeEditMaterialForm()\n    }\n  }\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  a {\n    cursor: pointer;\n  }\n\n  .material__item {\n    cursor: pointer;\n    user-select: none;\n  }\n\n  .menu__textbox {\n    margin-bottom: 16px;\n  }\n\n  .menu__mass {\n    display: inline-block;\n\n    input {\n      width: 20px;\n      height: 20px;\n      vertical-align: sub;\n      outline: none;\n    }\n\n    label {\n      margin: 0 25px 0 5px;\n    }\n\n    @media only screen and (max-width: 992px) {\n      width: 33%;\n      margin-bottom: 5px;\n    }\n\n    @media only screen and (max-width: 500px) {\n      width: 50%;\n      label {\n        font-size: 11px;\n      }\n    }\n  }\n\n  .mb-10 {\n    margin-bottom: 10px;\n  }\n\n  .input-item {\n    display: inline-block;\n    margin-right: 10px;\n    margin-bottom: 10px;\n\n    label {\n      margin-left: 5px;\n      color: #151e5d;\n    }\n\n    @media only screen and (max-width: 767px) {\n      width: 44%;\n    }\n  }\n\n  label {\n    font-size: 14px;\n    font-weight: bold;\n    margin-right: 10px;\n  }\n\n  .menu__input {\n    width: 100%;\n    padding: 16px 0;\n    margin: 20px 0;\n    border: 5px solid #d8d8d8;\n    border-radius: 5px;\n    box-sizing: border-box;\n\n    .menu__input__title {\n      font-size: 18px;\n      font-weight: bold;\n      margin: 0 0 15px 25px;\n      @media only screen and (max-width: 767px) {\n        margin: 0 0 -10px 10px;\n      }\n    }\n\n    .value {\n      margin-right: 40px;\n      @media only screen and (max-width: 992px) {\n        margin-left: 0;\n      }\n    }\n\n    .mate__list {\n      padding: 10px;\n\n      .col-md-6 {\n        margin-bottom: 10px;\n      }\n    }\n\n    .mate__options {\n      margin-bottom: 10px;\n    }\n\n    .mate__btn {\n      text-align: center;\n    }\n  }\n\n  .material {\n    &__button {\n      display: inline-block;\n      font-weight: 500;\n      margin: 5px 15px 15px 0;\n      padding: 10px;\n      color: #44a0e5;\n      border-radius: 4px;\n      border: 1px solid #44a0e5;\n    }\n\n    &__item {\n      position: relative;\n    }\n\n    @media only screen and (max-width: 992px) {\n      .col-md-2 {\n        margin: 10px 0;\n      }\n\n    }\n  }\n\n  .materials__table {\n    .material__table--item {\n      display: inline-block;\n      /*margin-right: 20px;*/\n      position: relative;\n    }\n\n    a {\n      position: absolute;\n      top: -5px;\n      left: -10px;\n      z-index: 99999;\n    }\n\n    font-size: 16px;\n    border-top: 1px solid #d8d8d8;\n    padding: 10px 25px;\n\n    .mate__input {\n      width: 5%;\n      float: left;\n    }\n\n    .mate__name {\n      width: 15%;\n      float: left;\n    }\n\n    .mate__cat {\n      width: 15%;\n      float: left;\n    }\n\n    .mate__unit {\n      width: 65%;\n      float: left;\n    }\n\n    @media only screen and (max-width: 992px) {\n      .mate__input {\n        width: 15%;\n      }\n\n      .mate__name {\n        width: 40%;\n      }\n\n      .mate__cat {\n        width: 40%;\n      }\n\n      .mate__unit {\n        width: 85%;\n        float: right;\n      }\n    }\n\n    input {\n      width: 20px;\n      height: 28px;\n      vertical-align: middle;\n      outline: none;\n    }\n  }\n\n  .menu__button {\n    width: 150px !important;\n    border-radius: 20px !important;\n    display: inline-block;\n    padding: 3px;\n    text-align: center;\n  }\n\n  .btn__delete {\n    position: absolute;\n    top: -100%;\n    left: -8%;\n    color: #ffffff;\n    background-color: red;\n    font-size: 14px;\n    text-align: center;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    padding: 1px 5px;\n  }\n\n  .unit__name {\n    width: 100%;\n    color: #151e5d;\n    padding: 5px;\n    font-weight: bold;\n    /*border-radius: 15px;*/\n    border: 1px solid #151e5d;\n    font-size: 14px\n  }\n\n  .value--input {\n    height: 33px !important;\n    border: 1px solid #e9ebf1;\n    outline: none;\n    width: 250px;\n    margin-left: 30px;\n    padding: 0 10px;\n    font-size: 16px;\n\n    @media only screen and (max-width: 424px) {\n      margin-left: 0;\n    }\n  }\n\n  .lable--input {\n    margin-bottom: 16px;\n    display: inline-block;\n    @media only screen and (max-width: 500px) {\n      margin-top: 15px;\n      margin-bottom: 5px;\n    }\n  }\n\n  @media only screen and (max-width: 500px) {\n    .menu__input .mate__btn {\n      margin-left: 12%;\n    }\n    .menu__input .mate__options {\n      margin-bottom: 30px;\n      margin-left: 15px;\n    }\n    .form-area select {\n      padding: 3px 15px !important;\n    }\n  }\n\n  .form-area {\n    margin-top: 20px;\n\n    .unit__title {\n      padding: 0;\n      margin-bottom: 10px;\n      font-weight: bold;\n    }\n\n    select {\n      padding: 5px 15px;\n      color: #151e5d;\n      font-weight: bold;\n      border: 1px solid #151e5d;\n      border-radius: 5px;\n      outline: none;\n    }\n  }\n\n  .material__title {\n    margin-bottom: 10px;\n    font-weight: bold;\n    font-size: 16px;\n  }\n\n  .nav {\n    padding: 5px;\n    margin-top: 20px;\n\n    .nav-item {\n      display: inline-block;\n      padding: 0 10px;\n\n      a {\n        color: #151e5d;\n        display: block;\n        padding-bottom: 5px;\n\n        &.active {\n          color: #000;\n          border-bottom: 3px solid #151e5d;\n        }\n      }\n    }\n  }\n\n  small {\n    color: red;\n    margin-left: 20px;\n  }\n\n</style>\n"],"sourceRoot":"src/views/user/menu-detail/modals"}]}