{"remainingRequest":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/babel-loader/lib/index.js!/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/eslint-loader/index.js??ref--13-0!/home/quan/Documents/Projects/django-vue/frontend_test/src/plugins/jpconverter.js","dependencies":[{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/src/plugins/jpconverter.js","mtime":1615822194522},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.string.trim\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport KuromojiAnalyzer from 'kuroshiro-analyzer-kuromoji';\nimport Kuroshiro from 'kuroshiro'; // import { filter } from 'lodash'\n\nexport var kuroshiro = new Kuroshiro();\nexport function initConverter() {\n  return _initConverter.apply(this, arguments);\n}\n\nfunction _initConverter() {\n  _initConverter = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return kuroshiro.init(new KuromojiAnalyzer({\n              dictPath: '/dict/'\n            }));\n\n          case 2:\n            console.log('Init dict...');\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _initConverter.apply(this, arguments);\n}\n\nexport function doSearchInArray(_x, _x2) {\n  return _doSearchInArray.apply(this, arguments);\n}\n\nfunction _doSearchInArray() {\n  _doSearchInArray = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(search, array) {\n    var ids, i, cvt, cvt2;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            search = search.trim().toLowerCase();\n\n            if (search.length) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", array);\n\n          case 3:\n            ids = [];\n            i = 0;\n\n          case 5:\n            if (!(i < array.length)) {\n              _context2.next = 20;\n              break;\n            }\n\n            if (!array[i].name.toLowerCase().includes(search)) {\n              _context2.next = 10;\n              break;\n            }\n\n            ids.push(array[i]);\n            _context2.next = 17;\n            break;\n\n          case 10:\n            _context2.next = 12;\n            return kuroshiro.convert(search, {\n              to: 'hiragana'\n            });\n\n          case 12:\n            cvt = _context2.sent;\n            _context2.next = 15;\n            return kuroshiro.convert(search, {\n              to: 'katakana'\n            });\n\n          case 15:\n            cvt2 = _context2.sent;\n\n            if (array[i].name.includes(cvt) || array[i].name.includes(cvt2)) {\n              ids.push(array[i]);\n            }\n\n          case 17:\n            i++;\n            _context2.next = 5;\n            break;\n\n          case 20:\n            return _context2.abrupt(\"return\", ids);\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _doSearchInArray.apply(this, arguments);\n}",{"version":3,"sources":["/home/quan/Documents/Projects/django-vue/frontend_test/src/plugins/jpconverter.js"],"names":["KuromojiAnalyzer","Kuroshiro","kuroshiro","initConverter","init","dictPath","console","log","doSearchInArray","search","array","trim","toLowerCase","length","ids","i","name","includes","push","convert","to","cvt","cvt2"],"mappings":";;;;;;AAAA,OAAOA,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CACA;;AAEA,OAAO,IAAMC,SAAS,GAAG,IAAID,SAAJ,EAAlB;AAEP,gBAAsBE,aAAtB;AAAA;AAAA;;;2EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCD,SAAS,CAACE,IAAV,CAAe,IAAIJ,gBAAJ,CAAqB;AAAEK,cAAAA,QAAQ,EAAE;AAAZ,aAArB,CAAf,CADD;;AAAA;AAELC,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKP,gBAAsBC,eAAtB;AAAA;AAAA;;;6EAAO,kBAAgCC,MAAhC,EAAwCC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AACLD,YAAAA,MAAM,GAAGA,MAAM,CAACE,IAAP,GAAcC,WAAd,EAAT;;AADK,gBAGAH,MAAM,CAACI,MAHP;AAAA;AAAA;AAAA;;AAAA,8CAIIH,KAJJ;;AAAA;AAMCI,YAAAA,GAND,GAMO,EANP;AAQIC,YAAAA,CARJ,GAQQ,CARR;;AAAA;AAAA,kBAQWA,CAAC,GAAGL,KAAK,CAACG,MARrB;AAAA;AAAA;AAAA;;AAAA,iBASCH,KAAK,CAACK,CAAD,CAAL,CAASC,IAAT,CAAcJ,WAAd,GAA4BK,QAA5B,CAAqCR,MAArC,CATD;AAAA;AAAA;AAAA;;AAUDK,YAAAA,GAAG,CAACI,IAAJ,CAASR,KAAK,CAACK,CAAD,CAAd;AAVC;AAAA;;AAAA;AAAA;AAAA,mBAYiBb,SAAS,CAACiB,OAAV,CAAkBV,MAAlB,EAA0B;AAAEW,cAAAA,EAAE,EAAE;AAAN,aAA1B,CAZjB;;AAAA;AAYKC,YAAAA,GAZL;AAAA;AAAA,mBAakBnB,SAAS,CAACiB,OAAV,CAAkBV,MAAlB,EAA0B;AAAEW,cAAAA,EAAE,EAAE;AAAN,aAA1B,CAblB;;AAAA;AAaKE,YAAAA,IAbL;;AAeD,gBAAIZ,KAAK,CAACK,CAAD,CAAL,CAASC,IAAT,CAAcC,QAAd,CAAuBI,GAAvB,KAA+BX,KAAK,CAACK,CAAD,CAAL,CAASC,IAAT,CAAcC,QAAd,CAAuBK,IAAvB,CAAnC,EAAiE;AAC/DR,cAAAA,GAAG,CAACI,IAAJ,CAASR,KAAK,CAACK,CAAD,CAAd;AACD;;AAjBA;AAQ6BA,YAAAA,CAAC,EAR9B;AAAA;AAAA;;AAAA;AAAA,8CAgCED,GAhCF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import KuromojiAnalyzer from 'kuroshiro-analyzer-kuromoji'\nimport Kuroshiro from 'kuroshiro'\n// import { filter } from 'lodash'\n\nexport const kuroshiro = new Kuroshiro()\n\nexport async function initConverter () {\n  await kuroshiro.init(new KuromojiAnalyzer({ dictPath: '/dict/' }))\n  console.log('Init dict...')\n}\n\nexport async function doSearchInArray (search, array) {\n  search = search.trim().toLowerCase()\n\n  if (!search.length) {\n    return array\n  }\n  const ids = []\n\n  for (let i = 0; i < array.length; i++) {\n    if (array[i].name.toLowerCase().includes(search)) {\n      ids.push(array[i])\n    } else {\n      const cvt = await kuroshiro.convert(search, { to: 'hiragana' })\n      const cvt2 = await kuroshiro.convert(search, { to: 'katakana' })\n\n      if (array[i].name.includes(cvt) || array[i].name.includes(cvt2)) {\n        ids.push(array[i])\n      }\n    }\n  }\n\n  /* const tmp =  filter(array, (v)=>{\n    const cvt =  kuroshiro.convert(search, { to: 'hiragana' })\n    const cvt2 =  kuroshiro.convert(search, { to: 'katakana' })\n\n    console.log(v.name, v.name.includes(cvt))\n\n    return /!*v.name.toLowerCase().includes(search) ||*!/ v.name.includes(cvt) || v.name.includes(cvt2);\n  })\n\n  return tmp; */\n\n  return ids\n}\n"]}]}