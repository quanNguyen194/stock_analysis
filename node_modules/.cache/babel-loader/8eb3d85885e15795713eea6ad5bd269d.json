{"remainingRequest":"/home/quan/Documents/Projects/stock_analysis/node_modules/babel-loader/lib/index.js!/home/quan/Documents/Projects/stock_analysis/node_modules/eslint-loader/index.js??ref--13-0!/home/quan/Documents/Projects/stock_analysis/src/services/store.js","dependencies":[{"path":"/home/quan/Documents/Projects/stock_analysis/src/services/store.js","mtime":1615822194522},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/quan/Documents/Projects/stock_analysis/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { getStore, addStore, deleteStore as _deleteStore, updateStore as _updateStore } from \"../constants/admin.api\";\nimport { Api } from \"./api\";\nexport default {\n  getStores: function () {\n    var _getStores = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(id) {\n      var dataStore;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return Api.requestWithToken({\n                url: \"\".concat(getStore.url, \"/\").concat(id, \"/stores\"),\n                method: getStore.method\n              });\n\n            case 3:\n              dataStore = _context.sent;\n\n              if (!dataStore.status) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", dataStore.data.stores);\n\n            case 6:\n              return _context.abrupt(\"return\", []);\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", []);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    function getStores(_x) {\n      return _getStores.apply(this, arguments);\n    }\n\n    return getStores;\n  }(),\n  updateStore: function () {\n    var _updateStore2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id, idStore, data) {\n      var dataStore;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return Api.requestWithToken({\n                url: \"\".concat(_updateStore.url, \"/\").concat(id, \"/stores/\").concat(idStore),\n                method: _updateStore.method,\n                data: data\n              });\n\n            case 3:\n              dataStore = _context2.sent;\n\n              if (!dataStore.status) {\n                _context2.next = 6;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", dataStore.data.store);\n\n            case 6:\n              return _context2.abrupt(\"return\", []);\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              return _context2.abrupt(\"return\", _context2.t0.response.data);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    function updateStore(_x2, _x3, _x4) {\n      return _updateStore2.apply(this, arguments);\n    }\n\n    return updateStore;\n  }(),\n  addToStore: function () {\n    var _addToStore = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(id, store) {\n      var dataStore;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return Api.requestWithToken({\n                url: \"\".concat(addStore.url, \"/\").concat(id, \"/stores\"),\n                method: addStore.method,\n                data: store\n              });\n\n            case 3:\n              dataStore = _context3.sent;\n\n              if (!dataStore.status) {\n                _context3.next = 6;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", dataStore.data.store);\n\n            case 6:\n              return _context3.abrupt(\"return\", []);\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              return _context3.abrupt(\"return\", _context3.t0.response.data);\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 9]]);\n    }));\n\n    function addToStore(_x5, _x6) {\n      return _addToStore.apply(this, arguments);\n    }\n\n    return addToStore;\n  }(),\n  deleteStore: function () {\n    var _deleteStore2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(id, idStore) {\n      var delStore;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return Api.requestWithToken({\n                url: \"\".concat(_deleteStore.url, \"/\").concat(id, \"/stores/\").concat(idStore),\n                method: _deleteStore.method\n              });\n\n            case 3:\n              delStore = _context4.sent;\n\n              if (!delStore.status) {\n                _context4.next = 6;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", delStore.data.store);\n\n            case 6:\n              return _context4.abrupt(\"return\", []);\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](0);\n              return _context4.abrupt(\"return\", _context4.t0.re);\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 9]]);\n    }));\n\n    function deleteStore(_x7, _x8) {\n      return _deleteStore2.apply(this, arguments);\n    }\n\n    return deleteStore;\n  }()\n};",{"version":3,"sources":["/home/quan/Documents/Projects/stock_analysis/src/services/store.js"],"names":["getStore","addStore","deleteStore","updateStore","Api","getStores","id","requestWithToken","url","method","dataStore","status","data","stores","idStore","store","response","addToStore","delStore","re"],"mappings":"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","sourcesContent":["import { getStore, addStore, deleteStore, updateStore } from '../constants/admin.api'\nimport { Api } from './api'\n\nexport default {\n  async getStores (id) {\n    try {\n      const dataStore = await Api.requestWithToken({\n        url: `${getStore.url}/${id}/stores`,\n        method: getStore.method\n      })\n      if (dataStore.status) {\n        return dataStore.data.stores\n      }\n      return []\n    } catch (e) {\n      return []\n    }\n  },\n  async updateStore (id, idStore, data) {\n    try {\n      const dataStore = await Api.requestWithToken({\n        url: `${updateStore.url}/${id}/stores/${idStore}`,\n        method: updateStore.method,\n        data: data\n      })\n      if (dataStore.status) {\n        return dataStore.data.store\n      }\n      return []\n    } catch (e) {\n      return e.response.data\n    }\n  },\n\n  async addToStore (id, store) {\n    try {\n      const dataStore = await Api.requestWithToken({\n        url: `${addStore.url}/${id}/stores`,\n        method: addStore.method,\n        data: store\n      })\n      if (dataStore.status) {\n        return dataStore.data.store\n      }\n      return []\n    } catch (e) {\n      return e.response.data\n    }\n  },\n\n  async deleteStore (id, idStore) {\n    try {\n      const delStore = await Api.requestWithToken({\n        url: `${deleteStore.url}/${id}/stores/${idStore}`,\n        method: deleteStore.method\n      })\n      if (delStore.status) {\n        return delStore.data.store\n      }\n      return []\n    } catch (e) {\n      return e.re\n    }\n  }\n\n}\n"]}]}