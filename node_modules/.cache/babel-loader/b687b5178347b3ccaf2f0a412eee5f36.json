{"remainingRequest":"/home/quan/Documents/Projects/stock_analysis/node_modules/babel-loader/lib/index.js!/home/quan/Documents/Projects/stock_analysis/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/quan/Documents/Projects/stock_analysis/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quan/Documents/Projects/stock_analysis/src/views/user/setting/tabs/setting-profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quan/Documents/Projects/stock_analysis/src/views/user/setting/tabs/setting-profile.vue","mtime":1615822194522},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/quan/Documents/Projects/stock_analysis/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/quan/Documents/Projects/stock_analysis/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TextBox from \"../../../../components/partials/textbox\";\nimport Button from \"../../../../components/partials/button\";\nimport Modal from \"../../../../components/partials/modal\";\nimport SettingApi from \"../../../../services/setting\";\nimport Message from '@/components/partials/message';\nimport { SET_LOADING } from \"../../../../store/types\";\nimport { mapActions, mapGetters } from 'vuex';\nimport { API_URL } from \"../../../../constants/api\";\nexport default {\n  name: 'setting-profile',\n  components: {\n    TextBox: TextBox,\n    Button: Button,\n    Modal: Modal,\n    Message: Message\n  },\n  computed: _objectSpread({}, mapGetters({\n    profile: 'user',\n    company: 'company',\n    store: 'store',\n    isLoading: 'isLoading'\n  })),\n  data: function data() {\n    return {\n      errors: {\n        name: '',\n        name_kana: '',\n        email: '',\n        password: '',\n        phone: ''\n      },\n      form: {\n        avatar: '',\n        avatar_url: '',\n        name: '',\n        name_kana: '',\n        email: '',\n        phone: '',\n        company: ''\n      },\n      password: {\n        current: '',\n        new: '',\n        confirm: ''\n      },\n      visible: false,\n      notifications: {\n        status: true,\n        show: false,\n        content: ''\n      }\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.setLoading(true);\n    this.form = this.profile;\n    this.form.avatar_url = !this.form.avatar_url ? API_URL + '/' + this.profile.avatar : this.form.avatar_url;\n    this.setLoading(false);\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    setLoading: SET_LOADING\n  })), {}, {\n    onKeyUp: function onKeyUp(e) {\n      if (e.key === 'Enter') {\n        this.savePassword();\n      }\n\n      if (e.key === 'Escape') {\n        this.toggleVisible();\n      }\n    },\n    onSave: function () {\n      var _onSave = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var canSave, formData, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                canSave = true;\n                formData = new FormData(); // validate form\n\n                if (!this.form.name) {\n                  this.errors.name = 'この項目は必須です。';\n                  canSave = false;\n                } else {\n                  this.errors.name = '';\n                }\n\n                if (!this.form.email) {\n                  this.errors.email = 'この項目は必須です。';\n                  canSave = false;\n                } else if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(this.form.email)) {\n                  this.errors.email = '無効な形式！ このフィールドは電子メールである必要があります。';\n                  canSave = false;\n                } else {\n                  this.errors.email = '';\n                }\n\n                if (!this.form.name_kana) {\n                  this.errors.name_kana = 'この項目は必須です。';\n                  canSave = false;\n                } else {\n                  this.errors.name_kana = '';\n                }\n\n                if (canSave) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 7:\n                // call api\n                this.$store.dispatch(SET_LOADING, true);\n\n                if (this.form.avatar) {\n                  formData.append('avatar', this.form.avatar);\n                }\n\n                formData.append('name', this.form.name);\n                formData.append('name_kana', this.form.name_kana);\n                formData.append('phone', this.form.phone);\n                formData.append('company', this.form.company);\n                formData.append('email', this.form.email); // eslint-disable-next-line no-unused-vars\n\n                _context.next = 16;\n                return SettingApi.updateProfile(formData);\n\n              case 16:\n                res = _context.sent;\n                this.$store.dispatch(SET_LOADING, false); // disable loading\n\n                if (res.status) {\n                  this.toggleMessage(true, 'プロフィール情報が変更されました。');\n                  this.form.avatar_url = API_URL + '/' + res.data.user.avatar;\n                  console.log(this.form);\n                }\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onSave() {\n        return _onSave.apply(this, arguments);\n      }\n\n      return onSave;\n    }(),\n    savePassword: function () {\n      var _savePassword = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var canSave, res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                canSave = true;\n\n                if (!this.password.current || !this.password.new || !this.password.confirm) {\n                  this.errors.password = '全ての項目を埋めてください。';\n                  canSave = false;\n                } else if (this.password.confirm !== this.password.new) {\n                  this.errors.password = '確認したパスワードが一致しません。もう一度確認してください。';\n                  canSave = false;\n                } else {\n                  this.errors.password = '';\n                }\n\n                if (canSave) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 4:\n                // Call API\n                // Enable Loading\n                this.$store.dispatch(SET_LOADING, true);\n                _context2.prev = 5;\n                _context2.next = 8;\n                return SettingApi.changePassword({\n                  old_password: this.password.current,\n                  new_password: this.password.new\n                });\n\n              case 8:\n                res = _context2.sent;\n\n                if (res.status) {\n                  this.toggleVisible();\n                  this.toggleMessage(true, 'パスワードが変更されました。');\n                }\n\n                _context2.next = 15;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](5);\n                this.errors.password = 'パスワードが正しくありません。もう一度やり直してください。';\n\n              case 15:\n                // Disable loading\n                this.$store.dispatch(SET_LOADING, false);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 12]]);\n      }));\n\n      function savePassword() {\n        return _savePassword.apply(this, arguments);\n      }\n\n      return savePassword;\n    }(),\n    toggleVisible: function toggleVisible() {\n      this.visible = !this.visible;\n    },\n    toggleMessage: function toggleMessage(status, content) {\n      this.notifications.status = status;\n      this.notifications.content = content;\n      this.notifications.show = true;\n    },\n    onFileChange: function onFileChange(e) {\n      var file = e.target.files[0];\n      this.form.avatar = file;\n      this.form.avatar_url = URL.createObjectURL(file);\n    }\n  })\n};",{"version":3,"sources":["setting-profile.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"setting-profile\" v-if=\"!isLoading\">\n    <Message :success=\"notifications.status\" v-if=\"notifications.show\" :close=\"true\">\n      {{ this.notifications.content }}\n    </Message>\n<!---------------------------------------------------------NAME--------------------------------------------------------->\n    <div class=\"setting-profile-edit\">\n      <div class=\"setting-profile__title \">\n        氏名\n      </div>\n      <div class=\"setting-profile__input \">\n        <TextBox\n          type=\"text\"\n          v-model=\"form.name\"\n          placeholder=\"テストユーザー\"\n        />\n        <span class=\"error-message\" v-if=\"errors.name.length\">{{ errors.name }}</span>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n<!------------------------------------------------------NAME-KANA------------------------------------------------------>\n    <div class=\"setting-profile-edit\">\n      <div class=\"setting-profile__title\">\n        氏名(カナ)\n      </div>\n      <div class=\"setting-profile__input\">\n        <TextBox\n          type=\"text\"\n          v-model=\"form.name_kana\"\n          placeholder=\"例：ヤマダ タケシ\"\n        />\n        <span class=\"error-message\" v-if=\"errors.name_kana.length\">{{ errors.name_kana }}</span>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n<!--------------------------------------------------------EMAIL-------------------------------------------------------->\n    <div class=\"setting-profile-edit\">\n      <div class=\"setting-profile__title\">\n        メールアドレス\n      </div>\n      <div class=\"setting-profile__input\">\n        <TextBox\n          name=\"email\"\n          type=\"email\"\n          v-model=\"form.email\"\n          placeholder=\"abc@gmail.com\"\n          :disabled=true\n        />\n        <span class=\"error-message\" v-if=\"errors.email.length\">{{ errors.email }}</span>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n    <!--------------------------------------------------------PHONE-------------------------------------------------------->\n    <div class=\"setting-profile-edit\">\n      <div class=\"setting-profile__title\">\n        電話番号\n      </div>\n      <div class=\"setting-profile__input\">\n        <TextBox\n          name=\"email\"\n          type=\"email\"\n          v-model=\"form.phone\"\n        />\n        <span class=\"error-message\" v-if=\"errors.phone.length\">{{ errors.phone }}</span>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n<!-------------------------------------------------------COMPANY------------------------------------------------------->\n    <div class=\"setting-profile-edit\">\n      <div class=\"setting-profile__title\">\n        所属会社\n      </div>\n      <div class=\"setting-profile__input\">\n        <TextBox\n          id=\"company\"\n          name=\"company\"\n          type=\"text\"\n          v-model=\"company.name\"\n          placeholder=\"株式会社ブライトキット\"\n          :disabled=true\n        />\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n<!--------------------------------------------------------STORE-------------------------------------------------------->\n    <div class=\"setting-profile-edit\">\n      <div class=\"setting-profile__title\">\n        店舗\n      </div>\n      <div class=\"setting-profile__input\">\n        <TextBox\n          id=\"store\"\n          name=\"store\"\n          type=\"text\"\n          v-model=\"store.name\"\n          placeholder=\"日本橋支店\"\n          :disabled=true\n        />\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n<!-------------------------------------------------------AVATAR------------------------------------------------------->\n    <div class=\"setting-profile-edit\">\n      <div class=\"setting-profile__title\">\n        プロフィール写真\n      </div>\n      <div class=\"setting-profile__input\">\n        <img class=\"avatar\" v-if=\"form.avatar\" :src=\"form.avatar_url\" alt=\"\">\n        <label class=\"change-avatar\">\n          画像を選択する\n          <input type=\"file\" ref=\"file\" accept=\"image/jpeg, image/png\" @change=\"onFileChange\">\n        </label>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n\n<!-------------------------------------------------------PASSWORD------------------------------------------------------->\n    <div class=\"setting-profile-edit\">\n      <div class=\"setting-profile__title\">\n        パスワード\n      </div>\n      <div class=\"setting-profile__input\">\n        <Button :click=\"toggleVisible\" width=\"150px\">変更する</Button>\n        <Modal v-if=\"visible\" @updateModalVisible=\"visible = false\" title=\"パスワードを変更する\">\n          <form autocomplete=\"off\">\n            <TextBox\n              id=\"current-password\"\n              class=\"password-input\"\n              type=\"password\"\n              placeholder=\"現在のパスワード\"\n              v-model=\"password.current\"\n              autocomplete=\"off\"\n              :keyup=\"onKeyUp\"\n            />\n            <TextBox\n              id=\"new-password\"\n              class=\"password-input\"\n              type=\"password\"\n              placeholder=\"新しいパスワード\"\n              v-model=\"password.new\"\n              autocomplete=\"off\"\n              :keyup=\"onKeyUp\"\n            />\n            <TextBox\n              id=\"confirm-password\"\n              class=\"password-input\"\n              type=\"password\"\n              placeholder=\"パスワードを認証する\"\n              v-model=\"password.confirm\"\n              autocomplete=\"off\"\n              :keyup=\"onKeyUp\"\n            />\n          </form>\n          <div>\n            <span class=\"error-message\" v-if=\"errors.password.length\">{{ this.errors.password }}</span>\n          </div>\n          <template slot=\"footer\">\n            <Button :click=\"savePassword\" width=\"150px\" height=\"40px\" padding=\"1px\">保存する</Button>\n          </template>\n        </Modal>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n\n    <div class=\"button-submit mt-25\">\n      <Button :click=\"onSave\" width=\"206px\" height=\"46px\" padding=\"5px\">保存する</Button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TextBox from '../../../../components/partials/textbox'\nimport Button from '../../../../components/partials/button'\nimport Modal from '../../../../components/partials/modal'\nimport SettingApi from '../../../../services/setting'\nimport Message from '@/components/partials/message'\nimport { SET_LOADING } from '../../../../store/types'\nimport { mapActions, mapGetters } from 'vuex'\nimport { API_URL } from '../../../../constants/api'\n\nexport default {\n  name: 'setting-profile',\n  components: {\n    TextBox,\n    Button,\n    Modal,\n    Message\n  },\n  computed: {\n    ...mapGetters({\n      profile: 'user',\n      company: 'company',\n      store: 'store',\n      isLoading: 'isLoading'\n    })\n  },\n  data () {\n    return {\n      errors: {\n        name: '',\n        name_kana: '',\n        email: '',\n        password: '',\n        phone: ''\n      },\n      form: {\n        avatar: '',\n        avatar_url: '',\n        name: '',\n        name_kana: '',\n        email: '',\n        phone: '',\n        company: ''\n      },\n      password: {\n        current: '',\n        new: '',\n        confirm: ''\n      },\n      visible: false,\n      notifications: {\n        status: true,\n        show: false,\n        content: ''\n      }\n    }\n  },\n  beforeMount () {\n    this.setLoading(true)\n    this.form = this.profile\n    this.form.avatar_url = !this.form.avatar_url ? API_URL + '/' + this.profile.avatar : this.form.avatar_url\n    this.setLoading(false)\n  },\n  methods: {\n    ...mapActions({\n      setLoading: SET_LOADING\n    }),\n    onKeyUp (e) {\n      if (e.key === 'Enter') {\n        this.savePassword()\n      }\n      if (e.key === 'Escape') {\n        this.toggleVisible()\n      }\n    },\n    async onSave () {\n      let canSave = true\n      let formData = new FormData()\n      // validate form\n      if (!this.form.name) {\n        this.errors.name = 'この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.name = ''\n      }\n\n      if (!this.form.email) {\n        this.errors.email = 'この項目は必須です。'\n        canSave = false\n      } else if (!(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(this.form.email))) {\n        this.errors.email = '無効な形式！ このフィールドは電子メールである必要があります。'\n        canSave = false\n      } else {\n        this.errors.email = ''\n      }\n\n      if (!this.form.name_kana) {\n        this.errors.name_kana = 'この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.name_kana = ''\n      }\n\n      if (!canSave) {\n        return\n      }\n      // call api\n      this.$store.dispatch(SET_LOADING, true)\n\n      if (this.form.avatar) {\n        formData.append('avatar', this.form.avatar)\n      }\n      formData.append('name', this.form.name)\n      formData.append('name_kana', this.form.name_kana)\n      formData.append('phone', this.form.phone)\n      formData.append('company', this.form.company)\n      formData.append('email', this.form.email)\n\n      // eslint-disable-next-line no-unused-vars\n      const res = await SettingApi.updateProfile(formData)\n      this.$store.dispatch(SET_LOADING, false)\n      // disable loading\n      if (res.status) {\n        this.toggleMessage(true, 'プロフィール情報が変更されました。')\n        this.form.avatar_url = API_URL + '/' + res.data.user.avatar\n        console.log(this.form)\n      }\n    },\n\n    async savePassword () {\n      let canSave = true\n      if (!this.password.current || !this.password.new || !this.password.confirm) {\n        this.errors.password = '全ての項目を埋めてください。'\n        canSave = false\n      } else if (this.password.confirm !== this.password.new) {\n        this.errors.password = '確認したパスワードが一致しません。もう一度確認してください。'\n        canSave = false\n      } else {\n        this.errors.password = ''\n      }\n\n      if (!canSave) {\n        return\n      }\n      // Call API\n\n      // Enable Loading\n      this.$store.dispatch(SET_LOADING, true)\n\n      try {\n        const res = await SettingApi.changePassword({\n          old_password: this.password.current,\n          new_password: this.password.new\n        })\n        if (res.status) {\n          this.toggleVisible()\n          this.toggleMessage(true, 'パスワードが変更されました。')\n        }\n      } catch (e) {\n        this.errors.password = 'パスワードが正しくありません。もう一度やり直してください。'\n      }\n\n      // Disable loading\n      this.$store.dispatch(SET_LOADING, false)\n    },\n\n    toggleVisible () {\n      this.visible = !this.visible\n    },\n\n    toggleMessage (status, content) {\n      this.notifications.status = status\n      this.notifications.content = content\n      this.notifications.show = true\n    },\n\n    onFileChange (e) {\n      const file = e.target.files[0]\n      this.form.avatar = file\n      this.form.avatar_url = URL.createObjectURL(file)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n.button-submit {\n  width: 206px;\n  margin: auto;\n}\n\n.mt-25{\n  margin-top: 25px;\n}\n\n.setting-profile {\n  margin-bottom: 60px;\n\n  a {\n    color: #151e5d;\n  }\n\n  &-edit {\n    background-color: #fff;\n    border-top: 1px solid #efefef;\n    padding: 20px;\n    border-bottom: 1px solid #efefef;\n\n    &:first-child {\n      border-top: 1px solid #efefef;\n    }\n\n    &:last-child {\n      margin-top: 30px;\n    }\n  }\n\n  &__title {\n    color: #151e5d;\n    width: 220px;\n    font-size: 16px;\n    font-weight: 600;\n    display: inline-block;\n    vertical-align: top;\n  }\n\n  &__input {\n    width: 326px;\n    font-size: 14px;\n    display: inline-block;\n\n    .avatar{\n      width: 100px;\n      margin-right: 10px;\n    }\n    .change-avatar{\n      vertical-align: top;\n      color: #151e5d;\n      &:hover{\n        cursor: pointer\n      }\n    }\n    input{\n      display: none;\n    }\n  }\n\n  &__phone {\n    display: inline-block;\n    color: #151e5d;\n    font-size: 14px;\n    width: 640px;\n  }\n\n  &__url {\n    font-size: 14px;\n    display: inline-block;\n    margin-left: 100px;\n  }\n\n  .password-input {\n    margin-bottom: 10px;\n  }\n  .error-message{\n    color: red;\n  }\n\n  .success-message{\n    color: #2e7230;\n  }\n}\n\n@media (max-width: 1200px) {\n  .setting-profile{\n    &__title{\n      vertical-align: top;\n    }\n    &__phone{\n      width: 450px;\n    }\n    &__url{\n      display: block;\n      margin-left: 0;\n    }\n  }\n}\n@media (max-width: 992px) {\n  .setting-profile{\n    &__title{\n      width: 250px;\n    }\n    &__phone{\n    }\n    &__input{\n    }\n  }\n}\n\n@media (max-width: 768px) {\n  .setting-profile{\n    &__title{\n      width: auto;\n      float: left;\n    }\n    &__input{\n      float: right;\n      width: 60%;\n    }\n    &__phone{\n      width: auto;\n      float: right;\n    }\n  }\n}\n@media (max-width: 539px){\n  .setting-profile{\n    &__title{\n      width: 100%;\n    }\n    &__input{\n      width: 100%;\n      max-width: 100%;\n      margin-top: 20px;\n    }\n  }\n}\n@media (max-width: 374px){\n  .setting-profile{\n    &__url{\n      font-size: 12px;\n    }\n  }\n}\n\n</style>\n"],"sourceRoot":"src/views/user/setting/tabs"}]}