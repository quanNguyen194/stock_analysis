{"remainingRequest":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/babel-loader/lib/index.js!/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quan/Documents/Projects/django-vue/frontend_test/src/views/user/setting/add-user.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/src/views/user/setting/add-user.vue","mtime":1615822194522},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.string.trim\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/quan/Documents/Projects/django-vue/frontend_test/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DefaultLayout from '@/views/layouts/default-layout';\nimport TextBox from '@/components/partials/textbox';\nimport Button from '@/components/partials/button';\nimport Message from '@/components/partials/message';\nimport SettingApi from '@/services/setting';\nimport { SET_LOADING } from '@/store/types';\nimport { mapActions } from 'vuex';\nexport default {\n  name: 'add-user-page',\n  components: {\n    DefaultLayout: DefaultLayout,\n    TextBox: TextBox,\n    Button: Button,\n    Message: Message\n  },\n  data: function data() {\n    return {\n      isLoading: true,\n      errors: {\n        name: '',\n        name_kana: '',\n        email: '',\n        phone: '',\n        password: '',\n        company: ''\n      },\n      form: {\n        phone: '',\n        name: '',\n        name_kana: '',\n        email: '',\n        password: '',\n        company: ''\n      },\n      messages: {\n        'email_or_phone_already_exists': 'メールアドレスまたは電話番号はすでに存在します。',\n        'max_of_users': 'ユーザー数が制限に達しました。',\n        'store_not_found': 'ストアが見つかりません。',\n        'add_user_successfully': 'ユーザーを正常に追加。',\n        'update_user_successfully': 'ユーザーの情報が更新されました。'\n      },\n      notifications: {\n        status: true,\n        show: false,\n        content: ''\n      }\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var currentUser;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.$route.params.id) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return SettingApi.getUsers(this.$route.params.id);\n\n            case 3:\n              currentUser = _context.sent;\n              this.form = currentUser.data.user;\n\n            case 5:\n              this.isLoading = false;\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    setLoading: SET_LOADING\n  })), {}, {\n    onKeyUp: function onKeyUp(e) {\n      console.log(e);\n\n      if (e.key === 'Enter') {\n        this.onSave();\n      }\n    },\n    onSave: function () {\n      var _onSave = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var canSave, res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                canSave = true;\n\n                if (!this.form.phone) {\n                  this.errors.phone = 'この項目は必須です。';\n                  canSave = false;\n                } else if (!/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s/./0-9]*$/.test(this.form.phone)) {\n                  this.errors.phone = '無効な電話番号';\n                  canSave = false;\n                } else {\n                  this.errors.phone = '';\n                }\n\n                if (!this.form.name) {\n                  this.errors.name = 'この項目は必須です。';\n                  canSave = false;\n                } else {\n                  this.errors.name = '';\n                }\n\n                if (!this.form.name_kana) {\n                  this.errors.name_kana = 'この項目は必須です';\n                  canSave = false;\n                } else {\n                  this.errors.name_kana = '';\n                }\n\n                if (!this.$route.params.id) {\n                  if (!this.form.password) {\n                    this.errors.password = 'この項目は必須です';\n                    canSave = false;\n                  } else {\n                    this.errors.password = '';\n                  }\n                } else {\n                  this.errors.password = '';\n                }\n\n                if (!this.form.email) {\n                  this.errors.email = 'この項目は必須です';\n                  canSave = false;\n                } else if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(this.form.email)) {\n                  this.errors.email = '無効な形式！ このフィールドは電子メールである必要があります。';\n                  canSave = false;\n                } else {\n                  this.errors.email = '';\n                }\n\n                if (canSave) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                this.setLoading(true);\n\n                if (this.$route.params.id) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                _context2.next = 12;\n                return SettingApi.addUser({\n                  phone: this.form.phone,\n                  name: this.form.name,\n                  name_kana: this.form.name_kana,\n                  email: this.form.email.toLowerCase().trim(),\n                  password: this.form.password\n                });\n\n              case 12:\n                res = _context2.sent;\n                _context2.next = 18;\n                break;\n\n              case 15:\n                _context2.next = 17;\n                return SettingApi.updateUser(this.$route.params.id, {\n                  phone: this.form.phone,\n                  name: this.form.name,\n                  name_kana: this.form.name_kana,\n                  email: this.form.email.toLowerCase().trim(),\n                  password: this.form.password\n                });\n\n              case 17:\n                res = _context2.sent;\n\n              case 18:\n                this.$store.dispatch(SET_LOADING, false);\n                this.setLoading(false);\n                this.notifications.status = res.status;\n\n                if (res.status) {\n                  // Get and show message\n                  this.notifications.content = this.messages[res.message];\n                  this.notifications.show = true;\n\n                  if (!this.$route.params.id) {\n                    this.$router.push('/setting');\n                  }\n                } else {\n                  this.notifications.content = this.messages[res.error];\n                  this.notifications.show = true;\n                }\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function onSave() {\n        return _onSave.apply(this, arguments);\n      }\n\n      return onSave;\n    }()\n  })\n};",{"version":3,"sources":["add-user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA,OAAA,aAAA,MAAA,gCAAA;AACA,OAAA,OAAA,MAAA,+BAAA;AACA,OAAA,MAAA,MAAA,8BAAA;AACA,OAAA,OAAA,MAAA,+BAAA;AACA,OAAA,UAAA,MAAA,oBAAA;AACA,SAAA,WAAA,QAAA,eAAA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA,aADA;AAEA,IAAA,OAAA,EAAA,OAFA;AAGA,IAAA,MAAA,EAAA,MAHA;AAIA,IAAA,OAAA,EAAA;AAJA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA,MAAA,MAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,KAAA,EAAA,EAJA;AAKA,QAAA,QAAA,EAAA,EALA;AAMA,QAAA,OAAA,EAAA;AANA,OAFA;AAUA,MAAA,IAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA,EAFA;AAGA,QAAA,SAAA,EAAA,EAHA;AAIA,QAAA,KAAA,EAAA,EAJA;AAKA,QAAA,QAAA,EAAA,EALA;AAMA,QAAA,OAAA,EAAA;AANA,OAVA;AAkBA,MAAA,QAAA,EAAA;AACA,yCAAA,0BADA;AAEA,wBAAA,iBAFA;AAGA,2BAAA,cAHA;AAIA,iCAAA,aAJA;AAKA,oCAAA;AALA,OAlBA;AAyBA,MAAA,aAAA,EAAA;AACA,QAAA,MAAA,EAAA,IADA;AAEA,QAAA,IAAA,EAAA,KAFA;AAGA,QAAA,OAAA,EAAA;AAHA;AAzBA,KAAA;AA+BA,GAxCA;AAyCA,EAAA,OAzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA0CA,KAAA,MAAA,CAAA,MAAA,CAAA,EA1CA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBA2CA,UAAA,CAAA,QAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CA3CA;;AAAA;AA2CA,cAAA,WA3CA;AA4CA,mBAAA,IAAA,GAAA,WAAA,CAAA,IAAA,CAAA,IAAA;;AA5CA;AA8CA,mBAAA,SAAA,GAAA,KAAA;;AA9CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgDA,EAAA,OAAA,kCACA,UAAA,CAAA;AACA,IAAA,UAAA,EAAA;AADA,GAAA,CADA;AAIA,IAAA,OAJA,mBAIA,CAJA,EAIA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,CAAA;;AACA,UAAA,CAAA,CAAA,GAAA,KAAA,OAAA,EAAA;AACA,aAAA,MAAA;AACA;AACA,KATA;AAUA,IAAA,MAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,gBAAA,OAXA,GAWA,IAXA;;AAYA,oBAAA,CAAA,KAAA,IAAA,CAAA,KAAA,EAAA;AACA,uBAAA,MAAA,CAAA,KAAA,GAAA,YAAA;AACA,kBAAA,OAAA,GAAA,KAAA;AACA,iBAHA,MAGA,IAAA,CAAA,+CAAA,IAAA,CAAA,KAAA,IAAA,CAAA,KAAA,CAAA,EAAA;AACA,uBAAA,MAAA,CAAA,KAAA,GAAA,SAAA;AACA,kBAAA,OAAA,GAAA,KAAA;AACA,iBAHA,MAGA;AACA,uBAAA,MAAA,CAAA,KAAA,GAAA,EAAA;AACA;;AACA,oBAAA,CAAA,KAAA,IAAA,CAAA,IAAA,EAAA;AACA,uBAAA,MAAA,CAAA,IAAA,GAAA,YAAA;AACA,kBAAA,OAAA,GAAA,KAAA;AACA,iBAHA,MAGA;AACA,uBAAA,MAAA,CAAA,IAAA,GAAA,EAAA;AACA;;AAEA,oBAAA,CAAA,KAAA,IAAA,CAAA,SAAA,EAAA;AACA,uBAAA,MAAA,CAAA,SAAA,GAAA,WAAA;AACA,kBAAA,OAAA,GAAA,KAAA;AACA,iBAHA,MAGA;AACA,uBAAA,MAAA,CAAA,SAAA,GAAA,EAAA;AACA;;AAEA,oBAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA;AACA,sBAAA,CAAA,KAAA,IAAA,CAAA,QAAA,EAAA;AACA,yBAAA,MAAA,CAAA,QAAA,GAAA,WAAA;AACA,oBAAA,OAAA,GAAA,KAAA;AACA,mBAHA,MAGA;AACA,yBAAA,MAAA,CAAA,QAAA,GAAA,EAAA;AACA;AACA,iBAPA,MAOA;AACA,uBAAA,MAAA,CAAA,QAAA,GAAA,EAAA;AACA;;AAEA,oBAAA,CAAA,KAAA,IAAA,CAAA,KAAA,EAAA;AACA,uBAAA,MAAA,CAAA,KAAA,GAAA,WAAA;AACA,kBAAA,OAAA,GAAA,KAAA;AACA,iBAHA,MAGA,IAAA,CAAA,uEAAA,IAAA,CAAA,KAAA,IAAA,CAAA,KAAA,CAAA,EAAA;AACA,uBAAA,MAAA,CAAA,KAAA,GAAA,iCAAA;AACA,kBAAA,OAAA,GAAA,KAAA;AACA,iBAHA,MAGA;AACA,uBAAA,MAAA,CAAA,KAAA,GAAA,EAAA;AACA;;AAtDA,oBAwDA,OAxDA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AA2DA,qBAAA,UAAA,CAAA,IAAA;;AA3DA,oBA8DA,KAAA,MAAA,CAAA,MAAA,CAAA,EA9DA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA+DA,UAAA,CAAA,OAAA,CAAA;AACA,kBAAA,KAAA,EAAA,KAAA,IAAA,CAAA,KADA;AAEA,kBAAA,IAAA,EAAA,KAAA,IAAA,CAAA,IAFA;AAGA,kBAAA,SAAA,EAAA,KAAA,IAAA,CAAA,SAHA;AAIA,kBAAA,KAAA,EAAA,KAAA,IAAA,CAAA,KAAA,CAAA,WAAA,GAAA,IAAA,EAJA;AAKA,kBAAA,QAAA,EAAA,KAAA,IAAA,CAAA;AALA,iBAAA,CA/DA;;AAAA;AA+DA,gBAAA,GA/DA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAuEA,UAAA,CAAA,UAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA;AACA,kBAAA,KAAA,EAAA,KAAA,IAAA,CAAA,KADA;AAEA,kBAAA,IAAA,EAAA,KAAA,IAAA,CAAA,IAFA;AAGA,kBAAA,SAAA,EAAA,KAAA,IAAA,CAAA,SAHA;AAIA,kBAAA,KAAA,EAAA,KAAA,IAAA,CAAA,KAAA,CAAA,WAAA,GAAA,IAAA,EAJA;AAKA,kBAAA,QAAA,EAAA,KAAA,IAAA,CAAA;AALA,iBAAA,CAvEA;;AAAA;AAuEA,gBAAA,GAvEA;;AAAA;AAgFA,qBAAA,MAAA,CAAA,QAAA,CAAA,WAAA,EAAA,KAAA;AACA,qBAAA,UAAA,CAAA,KAAA;AACA,qBAAA,aAAA,CAAA,MAAA,GAAA,GAAA,CAAA,MAAA;;AAEA,oBAAA,GAAA,CAAA,MAAA,EAAA;AACA;AACA,uBAAA,aAAA,CAAA,OAAA,GAAA,KAAA,QAAA,CAAA,GAAA,CAAA,OAAA,CAAA;AACA,uBAAA,aAAA,CAAA,IAAA,GAAA,IAAA;;AAEA,sBAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA;AACA,yBAAA,OAAA,CAAA,IAAA,CAAA,UAAA;AACA;AACA,iBARA,MAQA;AACA,uBAAA,aAAA,CAAA,OAAA,GAAA,KAAA,QAAA,CAAA,GAAA,CAAA,KAAA,CAAA;AACA,uBAAA,aAAA,CAAA,IAAA,GAAA,IAAA;AACA;;AA/FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAhDA,CAAA","sourcesContent":["<template>\n  <default-layout>\n    <div class=\"add-user\" v-if=\"!isLoading\">\n      <div class=\"page-return\">\n        <router-link :to=\"{name: 'setting'}\"><i class=\"fas fa-arrow-left\" style=\"margin-right:8px\"/>従業員一覧へ戻る\n        </router-link>\n      </div>\n      <h1 class=\"page-title\">従業員情報登録</h1>\n      <Message :success=notifications.status v-if=\"notifications.show\" :close=\"true\">\n        {{ this.notifications.content }}\n      </Message>\n<!--------------------------------------------------------PHONE-------------------------------------------------------->\n      <form autocomplete=\"off\">\n        <div class=\"form__area\">\n          <div class=\"form__item\">\n            <div class=\"form__title\">\n              電話番号 <span class=\"notice\">必須</span>\n            </div>\n            <div class=\"form__input\">\n              <TextBox\n                type=\"text\"\n                v-model=\"form.phone\"\n                placeholder=\"例：09012341234\"\n                :keyup=\"onKeyUp\"\n              />\n              <span class=\"error-message\" v-if=\"errors.phone.length\">{{ errors.phone }}</span>\n            </div>\n          </div>\n<!--------------------------------------------------------NAME--------------------------------------------------------->\n          <div class=\"form__item\">\n            <div class=\"form__title\">\n              氏名 <span class=\"notice\">必須</span>\n            </div>\n            <div class=\"form__input\">\n              <TextBox\n                type=\"text\"\n                v-model=\"form.name\"\n                name=\"full_name\"\n                placeholder=\"例：鈴木 太郎\"\n                autocomplete=\"off\"\n                :keyup=\"onKeyUp\"\n              />\n              <span class=\"error-message\" v-if=\"errors.name.length\">{{ errors.name }}</span>\n            </div>\n          </div>\n<!------------------------------------------------------NAME_KANA------------------------------------------------------>\n          <div class=\"form__item\">\n            <div class=\"form__title\">\n              氏名(カナ) <span class=\"notice\">必須</span>\n            </div>\n            <div class=\"form__input\">\n              <TextBox\n                type=\"text\"\n                v-model=\"form.name_kana\"\n                placeholder=\"例：スズキ タロウ\"\n                autocomplete=\"false\"\n                :keyup=\"onKeyUp\"\n              />\n              <span class=\"error-message\" v-if=\"errors.name_kana.length\">{{ errors.name_kana }}</span>\n            </div>\n          </div>\n<!------------------------------------------------------PASSWORD------------------------------------------------------->\n          <div class=\"form__item\">\n            <div class=\"form__title\">\n              パスワード <span class=\"notice\">{{!$route.params.id?'必須':''}}</span>\n            </div>\n            <div class=\"form__input\">\n              <TextBox\n                type=\"password\"\n                v-model=\"form.password\"\n                name=\"user_password\"\n                placeholder=\"パスワード\"\n                autocomplete=\"new-password\"\n                :keyup=\"onKeyUp\"\n              />\n              <span class=\"error-message\" v-if=\"errors.password.length\">{{ errors.password }}</span>\n            </div>\n          </div>\n\n<!--------------------------------------------------------EMAIL-------------------------------------------------------->\n          <div class=\"form__item\">\n            <div class=\"form__title\">\n              メールアドレス <span class=\"notice\">必須</span>\n            </div>\n            <div class=\"form__input\">\n              <TextBox\n                type=\"text\"\n                v-model=\"form.email\"\n                placeholder=\"例：abcdeft@mail.com\"\n                :keyup=\"onKeyUp\"\n\n              />\n              <span class=\"error-message\" v-if=\"errors.email.length\">{{ errors.email }}</span>\n            </div>\n          </div>\n\n        </div>\n      </form>\n      <div class=\"button-submit\">\n        <Button :click=\"onSave\" width=\"206px\" height=\"46px\" padding=\"5px\">保存する</Button>\n      </div>\n    </div>\n  </default-layout>\n</template>\n\n<script>\nimport DefaultLayout from '@/views/layouts/default-layout'\nimport TextBox from '@/components/partials/textbox'\nimport Button from '@/components/partials/button'\nimport Message from '@/components/partials/message'\nimport SettingApi from '@/services/setting'\nimport { SET_LOADING } from '@/store/types'\nimport { mapActions } from 'vuex'\n\nexport default {\n  name: 'add-user-page',\n  components: {\n    DefaultLayout,\n    TextBox,\n    Button,\n    Message\n  },\n  data () {\n    return {\n      isLoading: true,\n      errors: {\n        name: '',\n        name_kana: '',\n        email: '',\n        phone: '',\n        password: '',\n        company: ''\n      },\n      form: {\n        phone: '',\n        name: '',\n        name_kana: '',\n        email: '',\n        password: '',\n        company: ''\n      },\n      messages: {\n        'email_or_phone_already_exists': 'メールアドレスまたは電話番号はすでに存在します。',\n        'max_of_users': 'ユーザー数が制限に達しました。',\n        'store_not_found': 'ストアが見つかりません。',\n        'add_user_successfully': 'ユーザーを正常に追加。',\n        'update_user_successfully': 'ユーザーの情報が更新されました。'\n      },\n      notifications: {\n        status: true,\n        show: false,\n        content: ''\n      }\n    }\n  },\n  async mounted () {\n    if (this.$route.params.id) {\n      const currentUser = await SettingApi.getUsers(this.$route.params.id)\n      this.form = currentUser.data.user\n    }\n    this.isLoading = false\n  },\n  methods: {\n    ...mapActions({\n      setLoading: SET_LOADING\n    }),\n    onKeyUp (e) {\n      console.log(e)\n      if (e.key === 'Enter') {\n        this.onSave()\n      }\n    },\n    async onSave () {\n      let canSave = true\n      if (!this.form.phone) {\n        this.errors.phone = 'この項目は必須です。'\n        canSave = false\n      } else if (!(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s/./0-9]*$/.test(this.form.phone))) {\n        this.errors.phone = '無効な電話番号'\n        canSave = false\n      } else {\n        this.errors.phone = ''\n      }\n      if (!this.form.name) {\n        this.errors.name = 'この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.name = ''\n      }\n\n      if (!this.form.name_kana) {\n        this.errors.name_kana = 'この項目は必須です'\n        canSave = false\n      } else {\n        this.errors.name_kana = ''\n      }\n\n      if (!this.$route.params.id) {\n        if (!this.form.password) {\n          this.errors.password = 'この項目は必須です'\n          canSave = false\n        } else {\n          this.errors.password = ''\n        }\n      } else {\n        this.errors.password = ''\n      }\n\n      if (!this.form.email) {\n        this.errors.email = 'この項目は必須です'\n        canSave = false\n      } else if (!(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(this.form.email))) {\n        this.errors.email = '無効な形式！ このフィールドは電子メールである必要があります。'\n        canSave = false\n      } else {\n        this.errors.email = ''\n      }\n\n      if (!canSave) {\n        return\n      }\n      this.setLoading(true)\n      let res\n      // this.$store.dispatch(SET_LOADING, true)\n      if (!this.$route.params.id) {\n        res = await SettingApi.addUser({\n          phone: this.form.phone,\n          name: this.form.name,\n          name_kana: this.form.name_kana,\n          email: this.form.email.toLowerCase().trim(),\n          password: this.form.password\n        })\n      } else {\n        res = await SettingApi.updateUser(this.$route.params.id, {\n          phone: this.form.phone,\n          name: this.form.name,\n          name_kana: this.form.name_kana,\n          email: this.form.email.toLowerCase().trim(),\n          password: this.form.password\n        })\n      }\n\n      this.$store.dispatch(SET_LOADING, false)\n      this.setLoading(false)\n      this.notifications.status = res.status\n\n      if (res.status) {\n        // Get and show message\n        this.notifications.content = this.messages[res.message]\n        this.notifications.show = true\n\n        if (!this.$route.params.id) {\n          this.$router.push('/setting')\n        }\n      } else {\n        this.notifications.content = this.messages[res.error]\n        this.notifications.show = true\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n.add-user {\n  margin-bottom: 60px;\n}\n\n.page {\n  &-return {\n    position: relative;\n    margin-bottom: 16px;\n\n    a {\n      color: #44a0e5;\n      text-decoration: underline;\n      transition: all 0.5s ease-out;\n      font-size: 14px;\n    }\n  }\n\n  &-title {\n    color: #24374e;\n    font-size: 24px;\n    border-left: 4px solid #24387c;\n    padding: 8px 24px;\n    margin-bottom: 25px;\n  }\n}\n\n.form {\n  &__area {\n    margin-top: 25px;\n    margin-bottom: 30px;\n\n    .notice {\n      color: #ff001f;\n      font-size: 12px;\n    }\n  }\n\n  &__item {\n    background-color: #fff;\n    border-top: 1px solid #efefef;\n    padding: 20px;\n    border-bottom: 1px solid #efefef;\n\n    &:first-child {\n      border-top: 1px solid #efefef;\n    }\n  }\n\n  &__title {\n    color: #151e5d;\n    width: 220px;\n    font-size: 16px;\n    font-weight: 600;\n    display: inline-block;\n    vertical-align: top;\n  }\n\n  &__input {\n    width: 326px;\n    font-size: 14px;\n    display: inline-block;\n  }\n}\n\n.button-submit {\n  width: 206px;\n  margin: auto;\n}\n\n.error-message {\n  color: red;\n}\n\n//------------------------------------------------------RESPONSIVE------------------------------------------------------\n@media (max-width: 539px) {\n  .form {\n    &__input {\n      width: 100%;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/views/user/setting"}]}