{"remainingRequest":"/home/quan/Documents/Projects/stock_analysis/node_modules/babel-loader/lib/index.js!/home/quan/Documents/Projects/stock_analysis/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/quan/Documents/Projects/stock_analysis/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quan/Documents/Projects/stock_analysis/src/views/admin/edit-company.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quan/Documents/Projects/stock_analysis/src/views/admin/edit-company.vue","mtime":1615822194522},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/quan/Documents/Projects/stock_analysis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/quan/Documents/Projects/stock_analysis/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/quan/Documents/Projects/stock_analysis/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TextBox from \"../../components/partials/textbox\";\nimport Button from \"../../components/partials/button\";\nimport Modal from \"../../components/partials/modal\";\nimport AdminLayout from \"../layouts/admin-layout\";\nimport { SET_LOADING } from \"../../store/types\";\nimport { mapActions, mapGetters } from 'vuex';\nimport CompanyApi from \"../../services/company\";\nimport StoreApi from \"../../services/store\";\nimport SettingApi from \"../../services/setting\";\nexport default {\n  name: 'setting-profile',\n  components: {\n    TextBox: TextBox,\n    Button: Button,\n    Modal: Modal,\n    AdminLayout: AdminLayout\n  },\n  computed: _objectSpread({}, mapGetters({\n    profile: 'user'\n  })),\n  watch: {\n    name: function name(data) {}\n  },\n  data: function data() {\n    return {\n      id: this.$route.params.id,\n      modalTitle: {\n        name: ''\n      },\n      plans: [{\n        value: 3,\n        name: '～3名'\n      }, {\n        value: 9,\n        name: '4～9名'\n      }, {\n        value: 29,\n        name: '10～29名'\n      }, {\n        value: 50,\n        name: '30～50名'\n      }],\n      saveButton: '',\n      isShowRedirect: false,\n      currentIndex: '',\n      errors: this.resetErrors(),\n      isShow: false,\n      checkStore: true,\n      formType: '',\n      isShowFormDelete: false,\n      form: {\n        name: '',\n        post_code: '',\n        address: '',\n        representative_name: '',\n        phone: '',\n        email: '',\n        url: '',\n        nameStore: '',\n        passwordStore: '',\n        codeStore: '',\n        addressStore: '',\n        managerStore: '',\n        phoneStore: '',\n        emailStore: '',\n        planStore: ''\n      },\n      stores: [],\n      store: [],\n      company: {},\n      companies: [],\n      users: [],\n      visible: false\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var list;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.setLoading(true);\n              _context.next = 3;\n              return StoreApi.getStores(this.id);\n\n            case 3:\n              this.stores = _context.sent;\n              _context.next = 6;\n              return CompanyApi.getDetailACompany(this.id);\n\n            case 6:\n              this.company = _context.sent;\n              this.form.name = this.company.name;\n              this.form.post_code = this.company.post_code;\n              this.form.representative_name = this.company.representative_name;\n              this.form.address = this.company.address;\n              this.form.phone = this.company.phone;\n              this.form.email = this.company.email;\n              this.form.url = this.company.url;\n              _context.next = 16;\n              return CompanyApi.getCompany();\n\n            case 16:\n              this.companies = _context.sent;\n              _context.next = 19;\n              return SettingApi.listUsers();\n\n            case 19:\n              list = _context.sent;\n              this.users = list.data.users;\n              this.setLoading(false);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    setLoading: SET_LOADING\n  })), {}, {\n    encode: function encode(store) {\n      var res = {\n        name: store.name,\n        store_id: store._id,\n        admin_id: this.profile._id,\n        company_id: this.company._id\n      };\n      return Buffer.from(JSON.stringify(res)).toString('base64');\n    },\n    resetErrors: function resetErrors() {\n      return {\n        name: '',\n        post_code: '',\n        address: '',\n        representative_name: '',\n        phone: '',\n        email: '',\n        url: '',\n        nameStore: '',\n        passwordStore: '',\n        codeStore: '',\n        addressStore: '',\n        managerStore: '',\n        phoneStore: '',\n        emailStore: '',\n        planStore: ''\n      };\n    },\n\n    /* functions DELETE STORE */\n    confirmDeleteElement: function confirmDeleteElement(index) {\n      this.isShowFormDelete = true;\n      this.formType = 'delStore';\n      this.modalTitle.name = 'ストアを削除';\n      this.currentDelete = {\n        id: this.stores[index]._id,\n        index: index\n      };\n    },\n    onDelete: function () {\n      var _onDelete = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.formType === 'delStore')) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 3;\n                return StoreApi.deleteStore(this.id, this.currentDelete.id);\n\n              case 3:\n                this.$delete(this.stores, this.currentDelete.index);\n                this.isShowFormDelete = false;\n\n              case 5:\n                if (!(this.formType === 'delCompany')) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                _context2.next = 8;\n                return CompanyApi.deleteCompany(this.id);\n\n              case 8:\n                this.isShowFormDelete = false;\n                _context2.next = 11;\n                return this.$router.push('/admin/company/');\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function onDelete() {\n        return _onDelete.apply(this, arguments);\n      }\n\n      return onDelete;\n    }(),\n\n    /* functions EDIT STORE */\n    confirmEditElement: function confirmEditElement(index) {\n      this.formType = 'edit';\n      this.saveButton = '保存する';\n      this.currentIndex = this.stores[index];\n      this.errors = this.resetErrors();\n      this.form.passwordStore = '';\n      this.isShow = true;\n      this.isShowRedirect = true;\n      this.modalTitle.name = 'ストアを編集する';\n      this.currentEdit = {\n        id: this.stores[index]._id,\n        index: index\n      };\n      this.store = this.stores[index];\n      this.form.nameStore = this.store.name;\n      this.form.codeStore = this.store.post_code;\n      this.form.addressStore = this.store.address; // this.form.passwordStore = this.store.password\n\n      this.form.managerStore = this.store.representative_name;\n      this.form.phoneStore = this.store.phone;\n      this.form.emailStore = this.store.email;\n      this.form.planStore = this.store.max_users;\n    },\n    clearValueForm: function clearValueForm() {\n      this.form.nameStore = '';\n      this.form.codeStore = '';\n      this.form.addressStore = ''; // this.form.passwordStore = ''\n\n      this.form.managerStore = '';\n      this.form.phoneStore = '';\n      this.form.emailStore = '';\n      this.form.planStore = '';\n    },\n\n    /* functions CREATE STORE */\n    onFormAddStore: function onFormAddStore() {\n      this.clearValueForm();\n      this.formType = 'add';\n      this.saveButton = '登録する';\n      this.isShowRedirect = false;\n      this.errors = this.resetErrors();\n      this.isShow = true;\n      this.modalTitle.name = '店舗追加';\n    },\n    addStore: function () {\n      var _addStore = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var canSave, formData, res, _res;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                canSave = true;\n\n                if (!this.form.nameStore) {\n                  this.errors.nameStore = '*この項目は必須です。';\n                  canSave = false;\n                } else {\n                  this.errors.nameStore = '';\n                }\n\n                if (this.formType === 'add') {\n                  if (!this.form.passwordStore) {\n                    this.errors.passwordStore = '*この項目は必須です。';\n                    canSave = false;\n                  } else if (this.form.passwordStore.length < 4) {\n                    this.errors.passwordStore = '奇形';\n                    canSave = false;\n                  }\n                } else {\n                  this.errors.passwordStore = '';\n                }\n\n                if (!this.form.codeStore) {\n                  this.errors.codeStore = '*この項目は必須です。';\n                  canSave = false;\n                } else {\n                  this.errors.codeStore = '';\n                }\n\n                if (!this.form.addressStore) {\n                  this.errors.addressStore = '*この項目は必須です。';\n                  canSave = false;\n                } else {\n                  this.errors.addressStore = '';\n                }\n\n                if (!this.form.managerStore) {\n                  this.errors.managerStore = '*この項目は必須です。';\n                  canSave = false;\n                } else {\n                  this.errors.managerStore = '';\n                }\n\n                if (!this.form.phoneStore) {\n                  this.errors.phoneStore = '*この項目は必須です。';\n                  canSave = false;\n                } else {\n                  this.errors.phoneStore = '';\n                }\n\n                if (!this.form.emailStore) {\n                  this.errors.emailStore = '*この項目は必須です。';\n                  canSave = false;\n                } else if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(this.form.emailStore)) {\n                  this.errors.emailStore = '無効な形式！ このフィールドは電子メールである必要があります。';\n                  canSave = false;\n                } else {\n                  this.errors.emailStore = '';\n                }\n\n                if (!this.form.planStore) {\n                  this.errors.planStore = '*この項目は必須です。';\n                  canSave = false;\n                } else {\n                  this.errors.planStore = '';\n                }\n\n                if (!(canSave === true)) {\n                  _context3.next = 22;\n                  break;\n                }\n\n                formData = {\n                  name: this.form.nameStore,\n                  password: this.form.passwordStore,\n                  post_code: this.form.codeStore,\n                  address: this.form.addressStore,\n                  representative_name: this.form.managerStore,\n                  phone: this.form.phoneStore,\n                  email: this.form.emailStore,\n                  max_users: this.form.planStore\n                };\n\n                if (!(this.formType === 'add')) {\n                  _context3.next = 16;\n                  break;\n                }\n\n                _context3.next = 14;\n                return StoreApi.addToStore(this.id, formData);\n\n              case 14:\n                res = _context3.sent;\n\n                if (res.error) {\n                  canSave = false;\n\n                  if (res.error === 'email_or_phone_already_exists') {\n                    this.errors.emailStore = '*すでに使用済みのメールアドレスです';\n                  }\n                } else {\n                  this.stores.push({\n                    name: this.form.nameStore,\n                    password: this.form.passwordStore,\n                    post_code: this.form.codeStore,\n                    address: this.form.addressStore,\n                    representative_name: this.form.managerStore,\n                    phone: this.form.phoneStore,\n                    email: this.form.emailStore,\n                    max_users: this.form.planStore,\n                    _id: res._id,\n                    users_count: 1\n                  });\n                  this.isShow = false;\n                }\n\n              case 16:\n                if (!(this.formType === 'edit')) {\n                  _context3.next = 22;\n                  break;\n                }\n\n                if (!this.form.passwordStore || this.form.passwordStore.length < 1) {\n                  delete formData.password;\n                }\n\n                _context3.next = 20;\n                return StoreApi.updateStore(this.id, this.currentEdit.id, formData);\n\n              case 20:\n                _res = _context3.sent;\n\n                if (_res.error) {\n                  canSave = false;\n\n                  if (_res.error === 'email_or_phone_already_exists') {\n                    this.errors.emailStore = '*すでに使用済みのメールアドレスです';\n                  }\n                } else {\n                  this.stores[this.currentEdit.index] = {\n                    name: this.form.nameStore,\n                    // password: this.form.passwordStore,\n                    post_code: this.form.codeStore,\n                    address: this.form.addressStore,\n                    representative_name: this.form.managerStore,\n                    phone: this.form.phoneStore,\n                    email: this.form.emailStore,\n                    max_users: this.form.planStore,\n                    _id: _res._id,\n                    users_count: this.stores[this.currentEdit.index].users_count\n                  };\n                  this.isShow = false;\n                }\n\n              case 22:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function addStore() {\n        return _addStore.apply(this, arguments);\n      }\n\n      return addStore;\n    }(),\n\n    /* functions EDIT COMPANY */\n    onSave: function onSave() {\n      var _this = this;\n\n      var isUserEmailExisted = this.users.filter(function (user) {\n        return user.email === _this.form.email;\n      });\n      var isCompanyEmailExisted = this.companies.filter(function (company) {\n        return company.email === _this.form.email;\n      });\n      var canSave = true;\n\n      if (!this.form.name) {\n        this.errors.name = '*この項目は必須です。';\n        canSave = false;\n      } else {\n        this.errors.name = '';\n      }\n\n      if (!this.form.post_code) {\n        this.errors.post_code = '*この項目は必須です。';\n        canSave = false;\n      } else {\n        this.errors.post_code = '';\n      }\n\n      if (!this.form.address) {\n        this.errors.address = '*この項目は必須です。';\n        canSave = false;\n      } else {\n        this.errors.address = '';\n      }\n\n      if (!this.form.representative_name) {\n        this.errors.representative_name = '*この項目は必須です。';\n        canSave = false;\n      } else {\n        this.errors.representative_name = '';\n      }\n\n      if (!this.form.phone) {\n        this.errors.phone = '*この項目は必須です。';\n        canSave = false;\n      } else {\n        this.errors.phone = '';\n      }\n\n      if (this.form.email && !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(this.form.email)) {\n        this.errors.email = '無効な形式！ このフィールドは電子メールである必要があります。';\n        canSave = false;\n      } else if (this.form.email && (isUserEmailExisted.length > 1 || isCompanyEmailExisted.length >= 1)) {\n        this.errors.email = 'すでに使用済みのメールアドレスです。';\n        canSave = false;\n      } else {\n        this.errors.email = '';\n      }\n\n      if (this.form.url) {\n        // eslint-disable-next-line no-useless-escape\n        if (!/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/.test(this.form.url)) {\n          this.errors.url = '*無効な形式!';\n          canSave = false;\n        } else {\n          this.errors.url = '';\n        }\n      }\n\n      if (canSave === true) {\n        var formData = {\n          name: this.form.name,\n          post_code: this.form.post_code,\n          address: this.form.address,\n          representative_name: this.form.representative_name,\n          phone: this.form.phone,\n          email: this.form.email,\n          url: this.form.url,\n          stores: this.stores\n        };\n        CompanyApi.updateCompany(this.id, formData);\n        this.$router.push('/admin/company/');\n      }\n    },\n    isVisible: function isVisible() {\n      this.visible = true;\n    },\n\n    /* functions DELETE COMPANY */\n    confirmDelCompany: function confirmDelCompany() {\n      this.isShowFormDelete = true;\n      this.formType = 'delCompany';\n      this.modalTitle.name = '会社を削除する';\n    }\n  })\n};",{"version":3,"sources":["edit-company.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <admin-layout>\n    <!--    delete user-->\n    <Modal :title='modalTitle.name' v-if=\"isShowFormDelete\" @updateModalVisible=\"isShowFormDelete = false\" width=\"50%\">\n      <p class=\"modal__p\" style=\"font-weight: bold\">\n        削除すると、もとに戻すことはできません。 <br>\n        それでもよろしい場合は削除を選択してください。\n      </p>\n      <template slot=\"footer\">\n        <div @click=\"isShowFormDelete = false\" class=\"not_delete\">\n          <Button background-color=\"#fff\" color=\"#24374e\" border-color=\"#24374e\">キャンセル</Button>\n        </div>\n        <div class=\"deleted\">\n          <Button :click=\"onDelete\" border-color=\"#24374e\">削除</Button>\n        </div>\n      </template>\n    </Modal>\n    <!--end delete user-->\n    <div class=\"company_edit_form\" v-if=\"company._id\">\n      <div class=\"back-to-list\">\n        <router-link :to=\"`/admin/company`\"><span></span> 会社一覧へ戻る</router-link>\n      </div>\n      <div class=\"menu__header\">\n        会社を編集する\n      </div>\n      <div class=\"setting-profile\">\n        <!-- name -->\n        <div class=\"setting-profile-edit\">\n          <div class=\"setting-profile__title col-md-3\">\n            会社名\n          </div>\n          <div class=\"setting-profile__input col-md-4\">\n            <TextBox\n              id=\"name\"\n              type=\"text\"\n              v-model=\"form.name\"\n            />\n            <span class=\"error-message\" v-if=\"errors.name.length\">{{ errors.name }}</span>\n          </div>\n          <div class=\"clear\"></div>\n        </div>\n        <!-- zip code -->\n        <div class=\"setting-profile-edit\">\n          <div class=\"setting-profile__title col-md-3\">\n            郵便番号\n          </div>\n          <div class=\"setting-profile__input col-md-2\">\n            <TextBox\n              id=\"code\"\n              type=\"text\"\n              v-model=\"form.post_code\"\n            />\n            <span class=\"error-message\" v-if=\"errors.post_code.length\">{{ errors.post_code }}</span>\n          </div>\n          <div class=\"clear\"></div>\n        </div>\n        <!-- address -->\n        <div class=\"setting-profile-edit\">\n          <div class=\"setting-profile__title col-md-3\">\n            住所\n          </div>\n          <div class=\"setting-profile__input col-md-4\">\n            <TextBox\n              id=\"address\"\n              type=\"text\"\n              v-model=\"form.address\"\n            />\n            <span class=\"error-message\" v-if=\"errors.address.length\">{{errors.address}}</span>\n          </div>\n          <div class=\"clear\"></div>\n        </div>\n        <!-- representative name -->\n        <div class=\"setting-profile-edit\">\n          <div class=\"setting-profile__title col-md-3\">\n            代表者名\n          </div>\n          <div class=\"setting-profile__input col-md-2\">\n            <TextBox\n              id=\"representative_name\"\n              type=\"text\"\n              placeholder=\"日本橋支店\"\n              v-model=\"form.representative_name\"\n            />\n            <span class=\"error-message\" v-if=\"errors.representative_name.length\">{{errors.representative_name}}</span>\n          </div>\n          <div class=\"clear\"></div>\n        </div>\n        <!-- phone number -->\n        <div class=\"setting-profile-edit\">\n          <div class=\"setting-profile__title col-md-3\">\n            電話番号\n          </div>\n          <div class=\"setting-profile__input col-md-2\">\n            <TextBox\n              id=\"phone\"\n              type=\"tel\"\n              v-model=\"form.phone\"\n            />\n            <span class=\"error-message\" v-if=\"errors.phone.length\">{{errors.phone}}</span>\n          </div>\n          <div class=\"clear\"></div>\n        </div>\n        <!-- email -->\n        <div class=\"setting-profile-edit\">\n          <div class=\"setting-profile__title col-md-3\">\n            メールアドレス\n          </div>\n          <div class=\"setting-profile__input col-md-4\">\n            <TextBox\n              id=\"email\"\n              type=\"email\"\n              v-model=\"form.email\"\n            />\n            <span class=\"error-message\" v-if=\"errors.email.length\">{{errors.email}}</span>\n          </div>\n          <div class=\"clear\"></div>\n        </div>\n        <!-- url -->\n        <div class=\"setting-profile-edit\">\n          <div class=\"setting-profile__title col-md-3\">\n            URL\n          </div>\n          <div class=\"setting-profile__input col-md-4\">\n            <TextBox\n              id=\"url\"\n              name=\"store\"\n              type=\"url\"\n              v-model=\"form.url\"\n            />\n            <span class=\"error-message\" v-if=\"errors.url.length\">{{errors.url}}</span>\n          </div>\n          <div class=\"clear\"></div>\n        </div>\n\n        <div class=\"setting-profile-edit address\">\n          <div class=\"setting-profile__title col-md-3\">\n            店舗\n          </div>\n          <div class=\"setting-profile__phone col-lg-9\">\n            <div class=\"store__table\">\n              <table v-if=\"checkStore\">\n                <tr class=\"row\" v-for=\"(store, index) in stores\" :key=\"index\">\n                  <td class=\"col-md-8\">\n                    <div class=\"fleft clear\">\n                      <div class=\"name__store\">{{store.name}}</div>\n                      <br>\n                      <p class=\"address__store\">{{store.address}}</p>\n                      <p class=\"address__store\">ユーザー数: {{store.users_count || 0}}/{{store.max_users}}</p>\n                    </div>\n                  </td>\n                  <td class=\"deleteStore col-md-2\"><div class=\"button-edit\">\n                    <Button :click=\"() => confirmDeleteElement(index)\" class=\"delete_company\" width=\"206px\" height=\"46px\" padding=\"5px\">削除</Button>\n                  </div></td>\n                  <td class=\"editStore col-md-2\"><div class=\"button-edit\">\n                    <Button :click=\"() => confirmEditElement(index)\" width=\"206px\" height=\"46px\" padding=\"5px\">編集</Button>\n                  </div></td>\n                  <div class=\"clear\"></div>\n                </tr>\n              </table>\n            </div>\n            <div class=\"modal-edit\">\n              <Modal padding=\"15px 20px 20px\" textAlign=\"left\" background=\"#fff\" color=\"#151e5d\" :title='modalTitle.name' v-if=\"isShow\" @updateModalVisible=\"isShow = false\" width=\"80%\">\n                <div class=\"button__redirect\">\n                  <div v-if=\"isShowRedirect\" class=\"redirect fright clear\"><router-link :to=\"`/login?key=${encode(this.currentIndex)}`\" target = \"_blank\"><Button><span>店舗ページへ</span></Button></router-link></div>\n                </div>\n                <!-- name -->\n                <div class=\"col-md-12\">\n                  <div class=\"col-md-3\"><label for=\"store_name\">店舗名</label></div>\n                  <div class=\"col-md-9\">\n                    <TextBox\n                      id=\"store_name\"\n                      v-model=\"form.nameStore\"\n                      type=\"String\"\n                      placeholder=\"例：日本橋支店\"\n                      pleft=\"14px\"\n                      autocomplete=\"off\"\n                    />\n                    <span class=\"error-message\" v-if=\"errors.nameStore.length\">{{ errors.nameStore }}</span>\n                  </div>\n                </div>\n                <!-- zip code -->\n                <div class=\"col-md-12\">\n                  <div class=\"col-md-3\"><label for=\"code_store\">郵便番号</label></div>\n                  <div class=\"col-md-5\">\n                    <TextBox\n                      id=\"code_store\"\n                      v-model=\"form.codeStore\"\n                      type=\"text\"\n                      placeholder=\"例：1234567\"\n                      pleft=\"14px\"\n                      autocomplete=\"off\"\n                    />\n                    <span class=\"error-message\" v-if=\"errors.codeStore.length\">{{ errors.codeStore }}</span>\n                  </div>\n                </div>\n                <!-- address -->\n                <div class=\"col-md-12\">\n                  <div class=\"col-md-3\"><label for=\"addressStore\">住所</label></div>\n                  <div class=\"col-md-9\">\n                    <TextBox\n                      id=\"addressStore\"\n                      v-model=\"form.addressStore\"\n                      type=\"String\"\n                      placeholder=\"例：東京都中央区日本橋蛎殻町\"\n                      pleft=\"14px\"\n                      autocomplete=\"off\"\n                    />\n                    <span class=\"error-message\" v-if=\"errors.addressStore.length\">{{ errors.addressStore }}</span>\n                  </div>\n                </div>\n                <!-- manager -->\n                <div class=\"col-md-12\">\n                  <div class=\"col-md-3\"><label for=\"manager_store\">管理者名</label></div>\n                  <div class=\"col-md-5\">\n                    <TextBox\n                      id=\"manager_store\"\n                      v-model=\"form.managerStore\"\n                      type=\"String\"\n                      placeholder=\"日本橋支店\"\n                      pleft=\"14px\"\n                      autocomplete=\"off\"\n                    />\n                    <span class=\"error-message\" v-if=\"errors.managerStore.length\">{{ errors.managerStore }}</span>\n                  </div>\n                </div>\n                <!-- phone -->\n                <div class=\"col-md-12\">\n                  <div class=\"col-md-3\"><label for=\"phone_store\">電話番号</label></div>\n                  <div class=\"col-md-5\">\n                    <TextBox\n                      id=\"phone_store\"\n                      v-model=\"form.phoneStore\"\n                      type=\"tel\"\n                      placeholder=\"例：0123456789\"\n                      pleft=\"14px\"\n                      autocomplete=\"off\"\n                    />\n                    <span class=\"error-message\" v-if=\"errors.phoneStore.length\">{{ errors.phoneStore }}</span>\n                  </div>\n                </div>\n                <!-- email -->\n                <div class=\"col-md-12\">\n                  <div class=\"col-md-3\"><label for=\"email_store\">メールアドレス</label></div>\n                  <div class=\"col-md-9\">\n                    <TextBox\n                      id=\"email_store\"\n                      v-model=\"form.emailStore\"\n                      type=\"email\"\n                      placeholder=\"example@mail.com\"\n                      pleft=\"14px\"\n                      autocomplete=\"off\"\n                    />\n                    <span class=\"error-message\" v-if=\"errors.emailStore.length\">{{ errors.emailStore }}</span>\n                  </div>\n                </div>\n                <!-- password -->\n                <div class=\"col-md-12\">\n                  <div class=\"col-md-3\"><label for=\"passStore\">パスワード</label></div>\n                  <div class=\"col-md-9\">\n                    <TextBox\n                      id=\"passStore\"\n                      v-model=\"form.passwordStore\"\n                      type=\"new-password\"\n                      placeholder=\"4文字以上入力してください\"\n                      pleft=\"14px\"\n                      autocomplete=\"off\"\n                    />\n                    <span class=\"error-message\" v-if=\"errors.passwordStore.length\">{{ errors.passwordStore }}</span>\n                  </div>\n                </div>\n                <!-- plan -->\n                <div class=\"col-md-12\">\n                  <div class=\"col-md-3\"><label for=\"plan_store\">プラン</label></div>\n                  <div class=\"col-md-9\">\n                    <select v-model=\"form.planStore\"  id=\"plan_store\">\n                      <option disabled value=\"\">プランを選択</option>\n                      <option v-for=\"(plan, key) in plans\" :key=\"key\" :value=\"plan.value\" :selected=\"plan.value === form.planStore\">{{plan.name}}</option>\n                    </select>\n                    <span class=\"error-message\" v-if=\"errors.planStore.length\">{{ errors.planStore }}</span>\n                  </div>\n                </div>\n\n                <template slot=\"footer\">\n                    <div @click=\"isShow = false\" class=\"not_delete\">\n                      <Button background-color=\"#fff\" color=\"#24374e\" border-color=\"#24374e\">キャンセル</Button>\n                    </div>\n                    <div class=\"deleted\">\n                      <Button background-color=\"#000\" color=\"#fff\" :click=\"addStore\">{{saveButton}}</Button>\n                    </div>\n                </template>\n              </Modal>\n            </div>\n            <div class=\"setting-profile-edit\">\n              <div class=\"setting-profile__input\">\n                <Button :click=\"onFormAddStore\" width=\"150px\">店舗を追加</Button>\n              </div>\n              <div class=\"clear\"></div>\n            </div>\n          </div>\n          <div class=\"clear\"></div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6 button-edit\">\n            <Button :click=\"onSave\" width=\"206px\" height=\"46px\" padding=\"5px\">保存する</Button>\n          </div>\n          <div class=\"col-md-6 button-edit\">\n            <Button class=\"delete_company\" :click =\"confirmDelCompany\" width=\"206px\" height=\"46px\" padding=\"5px\">削除</Button>\n          </div>\n        </div>\n      </div>\n    </div>\n    </admin-layout>\n</template>\n\n<script>\nimport TextBox from '../../components/partials/textbox'\nimport Button from '../../components/partials/button'\nimport Modal from '../../components/partials/modal'\nimport AdminLayout from '../layouts/admin-layout'\nimport { SET_LOADING } from '../../store/types'\nimport { mapActions, mapGetters } from 'vuex'\nimport CompanyApi from '../../services/company'\nimport StoreApi from '../../services/store'\nimport SettingApi from '../../services/setting'\n\nexport default {\n  name: 'setting-profile',\n  components: {\n    TextBox,\n    Button,\n    Modal,\n    AdminLayout\n  },\n  computed: {\n    ...mapGetters({\n      profile: 'user'\n    })\n  },\n  watch: {\n    name (data) {\n    }\n  },\n  data () {\n    return {\n      id: this.$route.params.id,\n      modalTitle: {\n        name: ''\n      },\n      plans: [\n        {\n          value: 3,\n          name: '～3名'\n        },\n        {\n          value: 9,\n          name: '4～9名'\n        },\n        {\n          value: 29,\n          name: '10～29名'\n        },\n        {\n          value: 50,\n          name: '30～50名'\n        }\n      ],\n      saveButton: '',\n      isShowRedirect: false,\n      currentIndex: '',\n      errors: this.resetErrors(),\n      isShow: false,\n      checkStore: true,\n      formType: '',\n      isShowFormDelete: false,\n      form: {\n        name: '',\n        post_code: '',\n        address: '',\n        representative_name: '',\n        phone: '',\n        email: '',\n        url: '',\n        nameStore: '',\n        passwordStore: '',\n        codeStore: '',\n        addressStore: '',\n        managerStore: '',\n        phoneStore: '',\n        emailStore: '',\n        planStore: ''\n      },\n      stores: [],\n      store: [],\n      company: {},\n      companies: [],\n      users: [],\n      visible: false\n    }\n  },\n  async mounted () {\n    this.setLoading(true)\n    this.stores = await StoreApi.getStores(this.id)\n    this.company = await CompanyApi.getDetailACompany(this.id)\n\n    this.form.name = this.company.name\n    this.form.post_code = this.company.post_code\n    this.form.representative_name = this.company.representative_name\n    this.form.address = this.company.address\n    this.form.phone = this.company.phone\n    this.form.email = this.company.email\n    this.form.url = this.company.url\n\n    this.companies = await CompanyApi.getCompany()\n    const list = await SettingApi.listUsers()\n    this.users = list.data.users\n    this.setLoading(false)\n  },\n  methods: {\n    ...mapActions({\n      setLoading: SET_LOADING\n    }),\n    encode (store) {\n      const res = {\n        name: store.name,\n        store_id: store._id,\n        admin_id: this.profile._id,\n        company_id: this.company._id\n      }\n      return Buffer.from(JSON.stringify(res)).toString('base64')\n    },\n    resetErrors () {\n      return {\n        name: '',\n        post_code: '',\n        address: '',\n        representative_name: '',\n        phone: '',\n        email: '',\n        url: '',\n        nameStore: '',\n        passwordStore: '',\n        codeStore: '',\n        addressStore: '',\n        managerStore: '',\n        phoneStore: '',\n        emailStore: '',\n        planStore: ''\n      }\n    },\n    /* functions DELETE STORE */\n    confirmDeleteElement (index) {\n      this.isShowFormDelete = true\n      this.formType = 'delStore'\n      this.modalTitle.name = 'ストアを削除'\n      this.currentDelete = {\n        id: this.stores[index]._id,\n        index: index\n      }\n    },\n    async onDelete () {\n      if (this.formType === 'delStore') {\n        await StoreApi.deleteStore(this.id, this.currentDelete.id)\n        this.$delete(this.stores, this.currentDelete.index)\n        this.isShowFormDelete = false\n      }\n      if (this.formType === 'delCompany') {\n        await CompanyApi.deleteCompany(this.id)\n        this.isShowFormDelete = false\n        await this.$router.push('/admin/company/')\n      }\n    },\n    /* functions EDIT STORE */\n    confirmEditElement (index) {\n      this.formType = 'edit'\n      this.saveButton = '保存する'\n      this.currentIndex = this.stores[index]\n      this.errors = this.resetErrors()\n      this.form.passwordStore = ''\n      this.isShow = true\n      this.isShowRedirect = true\n      this.modalTitle.name = 'ストアを編集する'\n      this.currentEdit = {\n        id: this.stores[index]._id,\n        index: index\n      }\n      this.store = this.stores[index]\n      this.form.nameStore = this.store.name\n      this.form.codeStore = this.store.post_code\n      this.form.addressStore = this.store.address\n      // this.form.passwordStore = this.store.password\n      this.form.managerStore = this.store.representative_name\n      this.form.phoneStore = this.store.phone\n      this.form.emailStore = this.store.email\n      this.form.planStore = this.store.max_users\n    },\n    clearValueForm () {\n      this.form.nameStore = ''\n      this.form.codeStore = ''\n      this.form.addressStore = ''\n      // this.form.passwordStore = ''\n      this.form.managerStore = ''\n      this.form.phoneStore = ''\n      this.form.emailStore = ''\n      this.form.planStore = ''\n    },\n    /* functions CREATE STORE */\n    onFormAddStore () {\n      this.clearValueForm()\n      this.formType = 'add'\n      this.saveButton = '登録する'\n      this.isShowRedirect = false\n      this.errors = this.resetErrors()\n      this.isShow = true\n      this.modalTitle.name = '店舗追加'\n    },\n\n    async addStore () {\n      let canSave = true\n\n      if (!this.form.nameStore) {\n        this.errors.nameStore = '*この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.nameStore = ''\n      }\n      if (this.formType === 'add') {\n        if (!this.form.passwordStore) {\n          this.errors.passwordStore = '*この項目は必須です。'\n          canSave = false\n        } else if (this.form.passwordStore.length < 4) {\n          this.errors.passwordStore = '奇形'\n          canSave = false\n        }\n      } else {\n        this.errors.passwordStore = ''\n      }\n\n      if (!this.form.codeStore) {\n        this.errors.codeStore = '*この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.codeStore = ''\n      }\n\n      if (!this.form.addressStore) {\n        this.errors.addressStore = '*この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.addressStore = ''\n      }\n\n      if (!this.form.managerStore) {\n        this.errors.managerStore = '*この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.managerStore = ''\n      }\n\n      if (!this.form.phoneStore) {\n        this.errors.phoneStore = '*この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.phoneStore = ''\n      }\n      if (!this.form.emailStore) {\n        this.errors.emailStore = '*この項目は必須です。'\n        canSave = false\n      } else if (!(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(this.form.emailStore))) {\n        this.errors.emailStore = '無効な形式！ このフィールドは電子メールである必要があります。'\n        canSave = false\n      } else {\n        this.errors.emailStore = ''\n      }\n\n      if (!this.form.planStore) {\n        this.errors.planStore = '*この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.planStore = ''\n      }\n\n      if (canSave === true) {\n        const formData = {\n          name: this.form.nameStore,\n          password: this.form.passwordStore,\n          post_code: this.form.codeStore,\n          address: this.form.addressStore,\n          representative_name: this.form.managerStore,\n          phone: this.form.phoneStore,\n          email: this.form.emailStore,\n          max_users: this.form.planStore\n        }\n        if (this.formType === 'add') {\n          const res = await StoreApi.addToStore(this.id, formData)\n          if (res.error) {\n            canSave = false\n            if (res.error === 'email_or_phone_already_exists') {\n              this.errors.emailStore = '*すでに使用済みのメールアドレスです'\n            }\n          } else {\n            this.stores.push({\n              name: this.form.nameStore,\n              password: this.form.passwordStore,\n              post_code: this.form.codeStore,\n              address: this.form.addressStore,\n              representative_name: this.form.managerStore,\n              phone: this.form.phoneStore,\n              email: this.form.emailStore,\n              max_users: this.form.planStore,\n              _id: res._id,\n              users_count: 1\n            })\n            this.isShow = false\n          }\n        }\n        if (this.formType === 'edit') {\n          if (!this.form.passwordStore || this.form.passwordStore.length < 1) {\n            delete formData.password\n          }\n\n          const res = await StoreApi.updateStore(this.id, this.currentEdit.id, formData)\n          if (res.error) {\n            canSave = false\n            if (res.error === 'email_or_phone_already_exists') {\n              this.errors.emailStore = '*すでに使用済みのメールアドレスです'\n            }\n          } else {\n            this.stores[this.currentEdit.index] = {\n              name: this.form.nameStore,\n              // password: this.form.passwordStore,\n              post_code: this.form.codeStore,\n              address: this.form.addressStore,\n              representative_name: this.form.managerStore,\n              phone: this.form.phoneStore,\n              email: this.form.emailStore,\n              max_users: this.form.planStore,\n              _id: res._id,\n              users_count: this.stores[this.currentEdit.index].users_count\n            }\n            this.isShow = false\n          }\n        }\n      }\n    },\n    /* functions EDIT COMPANY */\n    onSave () {\n      const isUserEmailExisted = this.users.filter(user => {\n        return user.email === this.form.email\n      })\n\n      const isCompanyEmailExisted = this.companies.filter(company => {\n        return company.email === this.form.email\n      })\n      let canSave = true\n      if (!this.form.name) {\n        this.errors.name = '*この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.name = ''\n      }\n\n      if (!this.form.post_code) {\n        this.errors.post_code = '*この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.post_code = ''\n      }\n\n      if (!this.form.address) {\n        this.errors.address = '*この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.address = ''\n      }\n\n      if (!this.form.representative_name) {\n        this.errors.representative_name = '*この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.representative_name = ''\n      }\n\n      if (!this.form.phone) {\n        this.errors.phone = '*この項目は必須です。'\n        canSave = false\n      } else {\n        this.errors.phone = ''\n      }\n\n      if (this.form.email && !(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(this.form.email))) {\n        this.errors.email = '無効な形式！ このフィールドは電子メールである必要があります。'\n        canSave = false\n      } else if (this.form.email && (isUserEmailExisted.length > 1 || isCompanyEmailExisted.length >= 1)) {\n        this.errors.email = 'すでに使用済みのメールアドレスです。'\n        canSave = false\n      } else {\n        this.errors.email = ''\n      }\n\n      if (this.form.url) {\n        // eslint-disable-next-line no-useless-escape\n        if (!(/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/.test(this.form.url))) {\n          this.errors.url = '*無効な形式!'\n          canSave = false\n        } else {\n          this.errors.url = ''\n        }\n      }\n\n      if (canSave === true) {\n        const formData = {\n          name: this.form.name,\n          post_code: this.form.post_code,\n          address: this.form.address,\n          representative_name: this.form.representative_name,\n          phone: this.form.phone,\n          email: this.form.email,\n          url: this.form.url,\n          stores: this.stores\n        }\n        CompanyApi.updateCompany(this.id, formData)\n        this.$router.push('/admin/company/')\n      }\n    },\n    isVisible () {\n      this.visible = true\n    },\n    /* functions DELETE COMPANY */\n    confirmDelCompany () {\n      this.isShowFormDelete = true\n      this.formType = 'delCompany'\n      this.modalTitle.name = '会社を削除する'\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .button__redirect {\n    position: absolute;\n    z-index: 999;\n    right: 10px;\n    top: 0;\n  }\n  .error-message {\n    color: red;\n    font-size: 14px;\n  }\n  .back-to-list {\n    color: #0089f0;\n    font-size: 14px;\n    margin-bottom: 15px;\n    padding-top: 20px;\n    a.active {\n      color: #0089f0;\n    }\n    span {\n      position: relative;\n      display: inline-block;\n      padding: 0 0 0 16px;\n      color: #0089f0;\n      vertical-align: middle;\n      -webkit-text-decoration: none;\n      text-decoration: none;\n      font-size: 15px;\n    }\n    span:before {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      margin: auto;\n      content: '';\n      vertical-align: middle;\n      left: 3px;\n      width: 7px;\n      height: 7px;\n      border-top: 1px solid #0089f0;\n      border-right: 1px solid #0089f0;\n      -webkit-transform: rotate(225deg);\n      -ms-transform: rotate(225deg);\n      transform: rotate(225deg);\n    }\n    span:after {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      margin: auto;\n      content: '';\n      vertical-align: middle;\n      left: 3px;\n      width: 12px;\n      height: 1px;\n      background: #0089f0;\n    }\n  }\n  .menu__header {\n    border-left: 5px solid #24387c;\n    font-size: 24px;\n    padding-left: 20px;\n    font-weight: bold;\n    color: #24374e;\n    line-height: 2;\n    margin-bottom: 30px;\n  }\n  .button-edit {\n    margin-top: 25px\n  }\n  .setting-profile {\n    margin-bottom: 30px;\n\n    a {\n      color: #151e5d;\n    }\n\n    &-edit {\n      background-color: #fff;\n      padding: 20px;\n      border-bottom: 1px solid #efefef;\n\n      &:last-child {\n        border-bottom: none;\n        text-align: left;\n        .button__container {\n          margin: unset;\n        }\n      }\n\n      select {\n        width: 99.9%;\n        padding: 8px 10px;\n        border: 1px solid #2f2d2d99;\n        border-radius: 3px;\n        outline: none;\n      }\n\n      .name__store {\n        color: black;\n        font-size: 20px;\n        font-weight: bold;\n      }\n      p {\n        color: black;\n      }\n    }\n    &__input {\n      .col-md-3 {\n        color: #151e5d;\n      }\n      .col-md-12 {\n        border-bottom: 1px solid #efefef;\n        padding: 20px 0;\n      }\n    }\n\n    &__title {\n      color: #151e5d;\n      font-size: 16px;\n      font-weight: 600;\n      display: inline-block;\n      vertical-align: top;\n    }\n  }\n  .address {\n    padding: 0 20px;\n    .button-edit {\n      margin: unset;\n      float: right;\n      .button__container {\n        width: 100px !important;\n        margin-left: 30px;\n      }\n    }\n    .setting-profile__title {\n      margin-top: 30px;\n    }\n    .setting-profile-edit {\n      padding-left: 0;\n    }\n  }\n  .modal__footer {\n    .col-md-6 {\n      padding: 0 100px;\n    }\n  }\n  .modal-edit {\n\n    .col-md-3 {\n      color: #151e5d;\n      label {\n        color: #151e5d;\n        font-weight: bold;\n      }\n    }\n    .col-md-12 {\n      border-bottom: 1px solid #efefef;\n      padding: 20px 0;\n      &:last-child {\n        border-bottom: none;\n      }\n    }\n    .col-md-5 {\n      select {\n        width: 100%;\n        padding: 5px 10px;\n        font-size: 16px;\n        border: 1px solid #323131;\n      }\n    }\n  }\n  .store__table {\n    table {\n      width: 100%;\n      tr {\n        border-bottom: 1px solid #efefef;\n        width: 100% !important;\n        display: inline-block;\n      }\n      td.col-md-8 {\n        padding: 10px 0;\n      }\n      td.col-md-2 {\n        padding: 20px 0;\n      }\n    }\n  }\n  .delete_btn {\n    padding: 0 15px !important;\n  }\n  .button__container.delete_company {\n    background-color: red !important;\n  }\n  .deleted {\n    width: 35%;\n    margin-left: 15px;\n  }\n  .not_delete {\n    width: 35%;\n    margin-right: 15px;\n  }\n  @media (min-width: 769px) and (max-width: 1025px) {\n    .col-md-2 {\n      width: 40%;\n    }\n    .col-md-4 {\n      width: 70%;\n    }\n    .deleteStore {\n      width: 15%;\n    }\n    .editStore {\n      width: 15%;\n    }\n    .store__table table td.col-md-2 {\n      padding: 30px 0;\n    }\n  }\n  @media (max-width: 992px) {\n    .col-md-8 {\n      width: 70%;\n    }\n    .setting-profile__title {\n      margin-bottom: 10px;\n    }\n    .col-md-3 {\n      margin-bottom: 10px;\n    }\n  }\n\n  @media (max-width: 768px) {\n    .col-md-8 {\n      width: 70%;\n    }\n    .modal__p {\n      font-size: 13px;\n    }\n  }\n  @media (max-width: 450px) {\n    .back-to-list {\n      margin-top: 50px;\n    }\n    .store__table table td.col-md-2[data-v-841abdd8] {\n      padding: 9px 0;\n      display: inline-block;\n      margin: auto;\n      text-align: center;\n    }\n    .address {\n      .button-edit[data-v-841abdd8] {\n        float: none;\n        .button__container {\n          margin-left: unset;\n        }\n      }\n    }\n    .deleteStore {\n      float: left !important;\n      width: 48%;\n    }\n    .editStore {\n      float: right !important;\n      width: 48%;\n    }\n    .modal-edit {\n      max-width: 50%;\n    }\n  }\n  .redirect {\n    min-width: 150px;\n    margin-right: 20px;\n    margin-bottom: 30px;\n    span {\n      color: #fff;\n    }\n  }\n\n</style>\n"],"sourceRoot":"src/views/admin"}]}